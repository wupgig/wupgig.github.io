(window.webpackJsonp=window.webpackJsonp||[]).push([[242],{610:function(t,a,e){"use strict";e.r(a);var s=e(47),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"restful-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#restful-api"}},[t._v("#")]),t._v(" RESTful API")]),t._v(" "),e("p",[t._v("自从 Roy Fielding 博士在 2000 年他的博士论文中提出 REST"),e("small",[t._v("（Representational State Transfer）")]),t._v("风格的软件架构模式后，REST 就基本上迅速取代了复杂而笨重的 SOAP，成为 Web API 的标准了。")]),t._v(" "),e("p",[t._v("REST 就是一种设计 API 的模式。最常用的数据格式是 JSON。由于 JSON 能直接被 JavaScript 读取，所以，以 JSON 格式编写的 REST 风格的 API 具有简单、易读、易用的特点。")]),t._v(" "),e("p",[t._v("Rest 架构的主要原则：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("网络上的所有事物都被抽象为资源")])]),t._v(" "),e("li",[e("p",[t._v("每个资源都有一个唯一的资源标识符")])]),t._v(" "),e("li",[e("p",[t._v("同一个资源具有多种表现形式（xml，json 等）")])]),t._v(" "),e("li",[e("p",[t._v("对资源的各种操作不会改变资源标识符")])]),t._v(" "),e("li",[e("p",[t._v("所有的操作都是无状态的")])]),t._v(" "),e("li",[e("p",[t._v("符合 REST 原则的架构方式即可称为 RESTful")])])]),t._v(" "),e("h2",{attrs:{id:"以资源为中心的-url-设计"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#以资源为中心的-url-设计"}},[t._v("#")]),t._v(" 以资源为中心的 URL 设计")]),t._v(" "),e("p",[e("strong",[t._v("资源")]),t._v(" 是 Restful API 的核心元素，所有的操作都是针对特定资源进行的。而资源就是 URL"),e("small",[t._v("（Uniform Resoure Location）")]),t._v("表示的，所以简洁、清晰、结构化的 URL 设计是至关重要的。")]),t._v(" "),e("p",[t._v("我们可以看到几个特性：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("资源分为单个文档和集合，尽量使用"),e("strong",[t._v("复数")]),t._v("来表示资源，单个资源通过添加 id 或者 name 等来表示")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("/students\n/students/9527\n")])])])]),t._v(" "),e("li",[e("p",[t._v("资源可以"),e("strong",[t._v("嵌套")]),t._v("，通过"),e("strong",[t._v("类似目录路径")]),t._v("的方式来表示，以体现它们之间的关系")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("/students/9527/teachers\n/teachers/10086/courses\n")])])])]),t._v(" "),e("li",[e("p",[t._v("一个资源可以有多个不同的 URL，即，多个不同的 URL 可能/可以指向同一个资源。")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("/students/9527/dormitory\n/dormitory/3306\n")])])])]),t._v(" "),e("li",[e("p",[t._v("理论上，URL 应该是大小写敏感的。所以为了避免歧义，尽量使用 "),e("strong",[t._v("小写")]),t._v(" 字母。")])])]),t._v(" "),e("p",[t._v("另外，理论上只有 id 这样具有唯一性的标识才能【嵌】在 URL 中。")]),t._v(" "),e("h2",{attrs:{id:"crud-操作请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#crud-操作请求"}},[t._v("#")]),t._v(" CRUD 操作请求")]),t._v(" "),e("p",[t._v("通过 HTTP 的请求方式，来表示你是要对资源作何种操作。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("请求方式")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("GET")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("获取资源")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("POST")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("创建资源")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("PUT")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("更新资源")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("DELETE")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("删除资源")])])])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("例如：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("GET /students\n\nGET /teachers/10086/courses \n\nPOST /students\n\nPUT /students/9527\n\nDELETE /students/9527\n")])])])]),t._v(" "),e("li",[e("p",[t._v("反例：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("/getAllCars\n/createNewCar\n/deleteAllRedCars\n")])])])])]),t._v(" "),e("p",[t._v("理论上 URL 中 "),e("strong",[t._v("不应该")]),t._v(" 出现动词。")]),t._v(" "),e("h2",{attrs:{id:"特殊情况-特殊处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#特殊情况-特殊处理"}},[t._v("#")]),t._v(" 特殊情况，特殊处理")]),t._v(" "),e("p",[t._v("在实际资源操作中，总会有一些不太贴合【增删改查】这四个动作的动作。")]),t._v(" "),e("p",[t._v("比如一个博客网站，会有把写好的文章【发布】的功能。")]),t._v(" "),e("p",[t._v("可以有以下三种方案：")]),t._v(" "),e("h3",{attrs:{id:"破例添加动词"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#破例添加动词"}},[t._v("#")]),t._v(" 破例添加动词")]),t._v(" "),e("p",[t._v("允许在 URL 的末端添加一个动词，并使用 POST 方式提交请求。比如 ：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("操作")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("URL")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("发布一篇文章")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("POST /articles/<id>/publish")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("重新发送邮件")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("POST /mails/<id>/resend")])])])])]),t._v(" "),e("h3",{attrs:{id:"将动作转变为资源的状态改变"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#将动作转变为资源的状态改变"}},[t._v("#")]),t._v(" 将动作转变为资源的状态改变")]),t._v(" "),e("p",[t._v("因为 "),e("strong",[t._v("发布")]),t._v(" 操作，博客的状态就分为 "),e("strong",[t._v("已发布")]),t._v(" 和 "),e("strong",[t._v("未发布")]),t._v(" 。因此，发布操作，实际上就是将博客的状态变为已发布状态。")]),t._v(" "),e("p",[t._v("在文章中增加布尔类型的 "),e("em",[e("code",[t._v("published")])]),t._v(" 属性，发布的时候就是更新该字段 "),e("code",[t._v("PUT /articles/<id>?published=true")])]),t._v(" "),e("h3",{attrs:{id:"把动作转换成另一种资源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#把动作转换成另一种资源"}},[t._v("#")]),t._v(" 把动作转换成另一种资源")]),t._v(" "),e("p",[t._v("把动作转换成某种可以执行 CRUD 操作的资源， github 就是用了这种方法。")]),t._v(" "),e("p",[t._v("比如，将『喜欢』这个概念体现为文章的 star 。")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("『喜欢』一篇文章： "),e("code",[t._v("PUT /article/<id>/star")])])]),t._v(" "),e("li",[e("p",[t._v("『取消喜欢』"),e("code",[t._v("DELETE /article/<id>/star")])])])]),t._v(" "),e("h2",{attrs:{id:"分页查询及返回"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分页查询及返回"}},[t._v("#")]),t._v(" 分页查询及返回")]),t._v(" "),e("h3",{attrs:{id:"分页请求参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分页请求参数"}},[t._v("#")]),t._v(" 分页请求参数")]),t._v(" "),e("p",[t._v("当要进行分页查询时，在请求原有 API 的基础上，可额外附带如下"),e("small",[t._v("（或类似参数）")]),t._v("两个参数：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("参数")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("含义")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("page_number")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("表示请求第几页，默认为 1")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("page_size")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("表示每页最多显示多少条记录，默认为系统默认值")])])])]),t._v(" "),e("p",[t._v("你也可以将普通查询和分页查询统一起来。即，认为"),e("strong",[t._v("所有的查询都认为是分页查询")]),t._v("，在客户端没有提供这两个参数时，认为它俩是默认值。例如 "),e("code",[t._v("(1, 10)")]),t._v(" 。")]),t._v(" "),e("h3",{attrs:{id:"分页返回"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分页返回"}},[t._v("#")]),t._v(" 分页返回")]),t._v(" "),e("p",[t._v("返回资源集合时，包含于分页有关的数据。例如：")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"page_number"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("     # 当前是第几页\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"page_size"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("      # 每页多少数据\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pages"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("           # 总共多少页\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"has_next"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("     # 是否有下一页数据\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"has_prev"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    # 是否有前一页数据\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"total"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("          # 总共多少数据\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("             # 查询结果\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"排序参数-了解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#排序参数-了解"}},[t._v("#")]),t._v(" 排序参数"),e("small",[t._v("（了解）")])]),t._v(" "),e("p",[t._v("其实在前后端分离的项目中"),e("small",[t._v("（Restful 的最常用最典型的使用场景）")]),t._v("，排序这个工作是由前端"),e("small",[t._v("（JS）")]),t._v("来负责进行处理的，后台只需要返回数据集即可。至于页面上根据哪个属性排序，如何排序（升降序），后台是不需要考虑这些的。")]),t._v(" "),e("p",[t._v("不过，如果某些情况下，要求由后端排序，由后端返回排序后的数据。这时，可以约定前端请求时，发送类似如下参数：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("?sortby=<name>&order=<asc>\n")])])]),e("p",[t._v("指定返回结果按照哪个属性排序，以及排序顺序。")]),t._v(" "),e("h2",{attrs:{id:"restful-请求返回的状态码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#restful-请求返回的状态码"}},[t._v("#")]),t._v(" Restful 请求返回的状态码")]),t._v(" "),e("p",[t._v("当后台返回数据时，如何设置 HTTP 响应请求状态码，有两大『流派』：")]),t._v(" "),e("h3",{attrs:{id:"重用-http-响应状态码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重用-http-响应状态码"}},[t._v("#")]),t._v(" 重用 HTTP 响应状态码")]),t._v(" "),e("p",[t._v("这个流派的人认为：HTTP 协议有一套现成的响应状态码，更重要的是随着 HTTP 协议的广泛使用，它已经从『知识』变成了『常识』，而被广泛接收。"),e("small",[t._v("例如，即便不是程序员，也知道 "),e("strong",[e("code",[t._v("404")])]),t._v(" 意味着")]),t._v("什么。既然如此，那就 "),e("strong",[t._v("直接使用 HTTP 响应协议的状态码及其含义")]),t._v(" 。")]),t._v(" "),e("p",[t._v("HTTP 响应状态码大体上：")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("2xx")]),t._v(" 表示成功；")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("4xx")]),t._v(" 表示由于客户端的原因，导致该请求失败"),e("small",[t._v("（客户端做出修正后，在其请求有可能成功。例如，参数格式错误。）")]),t._v("；")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("5xx")]),t._v(" 表示由于服务端的原因导致该请求失败"),e("small",[t._v("（客户端再次请求，仍有可能失败。例如，后台数据库宕机了。）")]),t._v("。")])])]),t._v(" "),e("p",[t._v("因此 Restful 返回的状态可按如下规则返回：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("操作")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("状态")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("返回码")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("信息")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("POST")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("成功")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("201")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("CREATED")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("DELETE")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("成功")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("204")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("NO CONTENT")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("PUT")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("成功")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("200")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("SUCCESS")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("GET")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("成功")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("200")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("SUCCESS")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}}),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("失败")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("404")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("NOT FOUND")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("任何请求")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("参数校验失败")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("400")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("BAD REQUEST")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("任何请求")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("没有通过身份认证")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("401")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("NOT AUTHORIZED")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("任何请求")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("权限不够")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("403")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("FORBIDDEN")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("任何请求")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("服务器内部错误")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("500")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Internal Server Error")])])])]),t._v(" "),e("h3",{attrs:{id:"自定义状态码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自定义状态码"}},[t._v("#")]),t._v(" 自定义状态码")]),t._v(" "),e("p",[t._v("这个流派的认为『重用流』有几个缺陷：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("HTTP 响应码有限。成功时返回 200 倒好说。但是问题是失败时，失败错误码远小于业务逻辑上出错的可能。此时，用一个错误码代表一堆错误原因，并不精准。")])]),t._v(" "),e("li",[e("p",[t._v("404 这样的错误码是人尽皆知，但是不能保证前后端程序员对其他错误码的认知和使用场景也很清楚。这种情况下，什么错误返回什么状态码？这就加大了前后端开发人员的沟通成本。")])])]),t._v(" "),e("p",[t._v("因此，这个流派的人认为应该这么返回状态码：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("无条件返回 200 。这样前端开发人员就不用纠结应该走哪个返回码的判断逻辑。但这个 200 不代表请求一定就是成功的，这要接着看第二条。")])]),t._v(" "),e("li",[e("p",[t._v("返回的数据中，自带自定义的状态码"),e("small",[t._v("（和对应的状态信息）")]),t._v("，例如："),e("code",[t._v("{ code: 9527, msg: 'xxxx', data: ... }")]),t._v(" 。前端开发人员靠这里的 code 的值作为标准，判断请求是否成功，而非 HTTP 请求的那个 200 。")])])]),t._v(" "),e("p",[t._v("这里两大『流派』信众众多，"),e("small",[t._v("（暂时）")]),t._v("不分高低。")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("相较而言，『重用流』对程序员要求更高"),e("small",[t._v("（需要熟知 HTTP 协议）")]),t._v("；")])]),t._v(" "),e("li",[e("p",[t._v("『自定义流』虽然破坏了 200 状态码的本意，但是对开发人员更友好，也更灵活。")])])]),t._v(" "),e("h2",{attrs:{id:"其他"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),e("h3",{attrs:{id:"版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#版本"}},[t._v("#")]),t._v(" 版本")]),t._v(" "),e("p",[t._v("在 url 中指定 API 的版本是个很好地做法。如果 API 变化比较大，可以把 API 设计为子域名。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("https://api.example.com/v{n}/...\n")])])]),e("h3",{attrs:{id:"分隔符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分隔符"}},[t._v("#")]),t._v(" 分隔符")]),t._v(" "),e("p",[t._v("RESTful API 应具备良好的可读性，当 URL 中某一个片段（segment）由多个单词组成时，建议使用 "),e("code",[t._v("-")]),t._v(" 来隔断单词，而不是使用 "),e("code",[t._v("_")])])])}),[],!1,null,null,null);a.default=v.exports}}]);