(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{393:function(s,t,a){"use strict";a.r(t);var n=a(47),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"docker-mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-mysql"}},[s._v("#")]),s._v(" Docker MySQL")]),s._v(" "),a("p",[s._v("MySQL 的 Docker 镜像在 dockerhub 上的地址："),a("a",{attrs:{href:"https://hub.docker.com/_/mysql",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://hub.docker.com/_/mysql"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("当前"),a("small",[s._v("（2021-04-02）")]),s._v("的 "),a("strong",[s._v("latest")]),s._v(" 和 "),a("strong",[s._v("8.0.23")]),s._v(" 是同一个镜像 。另外，"),a("strong",[s._v("5.7")]),s._v(" 版本和 "),a("strong",[s._v("5.7.33")]),s._v(" 是同一个镜像。")]),s._v(" "),a("h2",{attrs:{id:"_1-安装及测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装及测试"}},[s._v("#")]),s._v(" 1. 安装及测试")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询中央仓库")]),s._v("\ndocker search -f is-official"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true mysql\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从中央仓库下载")]),s._v("\ndocker pull mysql:8.0.16\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或，直接导入已有的镜像文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker load -i mysql-8.0.16.tar")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看本地镜像")]),s._v("\ndocker images\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 会出现类似如下内容：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# REPOSITORY      TAG       IMAGE ID       CREATED        SIZE")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mysql           8.0.16    de764ad211de   2 years ago    443MB")]),s._v("\n")])])]),a("p",[s._v("运行容器：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除曾经已有的同名容器 ")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f mysql-test\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建并运行 mysql 容器的语法")]),s._v("\ndocker run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("指定容器名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -p "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("指定宿主机端口"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":3306 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MYSQL_ROOT_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("指定root登录密码"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  mysql:8.0.16\n")])])]),a("p",[s._v("例如：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("docker run            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -d                  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --name mysql-3306   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v(":3306        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MYSQL_ROOT_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123456")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  mysql:8.0.16\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run -d --name mysql-3306 -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql:8.0.16")]),s._v("\n")])])]),a("p",[s._v("验证安装成功")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看容器的运行信息")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入 mysql-test 容器")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it mysql-test /bin/bash\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行 mysql-cli 的连接命令")]),s._v("\nmysql -uroot -p123456\n")])])]),a("h3",[s._v("后续可选操作：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("对 root 的远程连接授权")]),s._v(" "),a("p",[s._v("容器逻辑上等价于另一台电脑。而在 mysql 中，root 用户默认只能从 MySQL Server 所在的电脑上登陆，无法从『另一台』电脑通过远程连接的方式登陆。")]),s._v(" "),a("p",[s._v("当然，这种『默认』行为是可以配置的。")]),s._v(" "),a("p",[s._v("按上述命令，从容器内部连接到 MySQL Server，执行如下 SQL 语句：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" host "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GRANT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@'%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" flush "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("privileges")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),a("li",[a("p",[s._v("从容器外部连接")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mysql -h "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("宿主机IP"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -P "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("宿主机端口号"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -u root -p "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("root登陆密码"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])])])]),s._v(" "),a("h2",{attrs:{id:"_2-配置与挂载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置与挂载"}},[s._v("#")]),s._v(" 2. 配置与挂载")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("MySQL Server 的数据的存储目录是容器中的 "),a("strong",[s._v("/var/lib/mysql/")]),s._v(" 。")])]),s._v(" "),a("li",[a("p",[s._v("Docker MySQL Server 的配置文件是容器中的 "),a("strong",[s._v("/etc/mysql/mysql.cnf")]),s._v(" 。")]),s._v(" "),a("p",[s._v("另外，同级目录下的 "),a("code",[s._v("my.cnf")]),s._v(" 是 mysql.cnf 的链接。")]),s._v(" "),a("p",[s._v("mysql.cnf 配置文件加载了另外 2 个目录中的所有 .cnf 文件："),a("strong",[s._v("/etc/mysql/conf.d/")]),s._v(" 和 "),a("strong",[s._v("/etc/mysql/mysql.conf.d/")]),s._v(" 。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("说明")]),s._v(" "),a("p",[s._v("按惯例：")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("mysql.conf.d")]),s._v(" 下的 "),a("strong",[s._v("mysqld.cnf")]),s._v(" 配置文件中放的是 MySQL Server 约定俗成的、通常不会轻易变动的配置。例如，数据文件的存储位置。绝大多数情况下，我们不会动这个目录及其下的配置文件的内容。未来，我们不会映射这个目录。")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("conf.d")]),s._v(" 下的配置文件中放的是根据具体情况、具体场景 MySQL Server 可能会进行调整的配置。例如，MySQL Server 的字符集。未来，我们通过 "),a("strong",[s._v("-v")]),s._v(" 映射的就是这个目录。")])])])]),s._v(" "),a("p",[s._v("容器中的 "),a("strong",[s._v("conf.d")]),s._v(" 下有 3 个配置文件，这 3 个配置文件的有效的内容加起来总共就是如下内容：")]),s._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[mysqld]\nskip-host-cache\nskip-name-resolve\n\n[mysqldump]\nquick\nquote-names\nmax_allowed_packet\t= 16M\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("如何知道默认的配置是什么？")]),s._v(" "),a("p",[s._v("你可以先临时启动一个 mysql 的 docker 容器，不挂载自定义配置文件，然后再通过 "),a("strong",[s._v("docker cp")]),s._v(" 命令将它的默认配置拷贝出来看看。")])])]),s._v(" "),a("li",[a("p",[s._v("示例")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除已存在的同名容器")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f mysql-3306\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建宿主机挂载目录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p ~/docker/mysql/3306/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("conf.d,mysql.conf.d,data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在宿主机的 **conf** 目录下新建任意命名的 `.cnf` 文件，其中内容见最后。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建并运行容器")]),s._v("\ndocker run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --name mysql-3306 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -v ~/docker/mysql/3306/conf.d:/etc/mysql/conf.d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -v ~/docker/mysql/3306/mysql.conf.d:/etc/mysql/mysql.conf.d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -v ~/docker/mysql/3306/data:/var/lib/mysql "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v(":3306 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MYSQL_ROOT_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123456")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  mysql:8.0.16\n")])])])])]),s._v(" "),a("h2",{attrs:{id:"_3-docker-compse-方式启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-docker-compse-方式启动"}},[s._v("#")]),s._v(" 3. docker-compse 方式启动")]),s._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("mysql-3306")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("8.0.16\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("network_mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bridge"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("mem_limit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 512m "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 限定 docker 容器内存大小")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" MYSQL_ROOT_PASSWORD=123456\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /etc/localtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/etc/localtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("ro\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ~/docker/3306/data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/var/lib/mysql\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ~/docker/3306/conf.d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/etc/mysql/conf.d\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ~/docker/3306/mysql.conf.d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/etc/mysql/mysql.conf.d\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# network_mode: "host" 无需端口映射')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3306:3306"')]),s._v("\n")])])]),a("p",[s._v("启动命令："),a("strong",[s._v("docker-compose up -d mysql-3306")])]),s._v(" "),a("h2",{attrs:{id:"_4-初始化数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-初始化数据库"}},[s._v("#")]),s._v(" 4. 初始化数据库")]),s._v(" "),a("p",[s._v("mysql 的 docker 镜像有一个功能：它在第一次创建容器"),a("small",[s._v("（重启不算）")]),s._v("时，会到容器内的 "),a("code",[s._v("/docker-entrypoint-initdb.d")]),s._v(" 目录下查看有没有 sql 脚本，如果有，就执行 sql 脚本。因此，你可以通过这个功能来完成数据库的创建等初始化工作。")]),s._v(" "),a("p",[s._v("你可以在某个目录下创建 .sql 脚本，并在其中写上建库、建表等 SQL 语句，然后将这个目录映射成 "),a("code",[s._v("/docker-entrypoint-initdb.d")]),s._v(" 。")]),s._v(" "),a("h2",{attrs:{id:"_5-mysql-cnf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-mysql-cnf"}},[s._v("#")]),s._v(" 5. mysql.cnf")]),s._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[mysqld]\nserver-id = 1 \ncharacter-set-server = utf8mb4\nskip-host-cache\nskip-name-resolve\n\n[mysqldump]\nquick\nquote-names\nmax_allowed_packet\t= 16M\n")])])]),a("ul",[a("li",[a("p",[a("strong",[s._v("server-id")]),s._v("： 给 MySQL Server 分配一个独一无二的 ID 编号；")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("character-set-server")]),s._v("：设置 Mysql Server 存储字符串数据时使用的默认的字符集。"),a("small",[s._v("该配置项替代了老版本中的 "),a("strong",[s._v("default-character-set")]),s._v(" 配置项。")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("skip-name-resolve")]),s._v("： 不把 IP 地址解析为主机名，以客户端的 IP 地址为依据检查其操作权限。")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);