(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{407:function(t,a,s){"use strict";s.r(a);var e=s(47),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"docker-常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-常用命令"}},[t._v("#")]),t._v(" Docker 常用命令")]),t._v(" "),s("p",[t._v("在使用 Docker 时，经常会操作镜像与容器，这就会涉及各种操作指令的使用。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("指令")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("docker images")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("列出镜像")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("docker search")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("搜索镜像")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("docker pull")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("拉取镜像")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("docker rmi")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("删除镜像")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("docker run")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("创建并启动容器")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("docker ps")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("列出容器")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("docker exec")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("执行容器")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("docker stop")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("停止容器")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("docker start")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("启动容器")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("docker rm")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("删除容器")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("docker build")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("构建镜像")])])])]),t._v(" "),s("h2",{attrs:{id:"列出镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列出镜像"}},[t._v("#")]),t._v(" 列出镜像")]),t._v(" "),s("p",[t._v("通过 "),s("strong",[t._v("docker images")]),t._v(" 指令可以查看本地镜像列表中已有的镜像：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("docker images\n")])])]),s("p",[t._v("它所返回的镜像列表信息包含了一下 5 个字段：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"right"}},[t._v("字段名")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("REPOSITORY")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("镜像的名称。会一并显示它的 Namespace")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("TAG")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("镜像的标签")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("IMAGE ID")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("镜像的 ID。一个长 64 位的十六进制字符串（SHA256 算法的运算结果）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("CREATE")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("镜像的创建时间")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("SIZE")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("镜像所占用的硬盘空间（包括被共享的镜像层的大小）")])])])]),t._v(" "),s("p",[t._v("当本地镜像较多时，还可以使用通配符过滤出符合条件的镜像。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" docker images ph*\n")])])]),s("h2",{attrs:{id:"搜索镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#搜索镜像"}},[t._v("#")]),t._v(" 搜索镜像")]),t._v(" "),s("p",[t._v("想知道在 Docker Hub 中包含了哪些镜像，除了可以登录 Docker Hub，在官网搜索外，还可以直接通过 Docker 命令 "),s("strong",[t._v("docker search")]),t._v(" 进行搜索。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("docker search mysql\n")])])]),s("p",[t._v("显示出来的搜索结果中包含了镜像的如下信息：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"right"}},[t._v("字段名")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("NAME")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("镜像的名称")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("DESCRIPTION")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("镜像的简单描述")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("STARTS")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("镜像在的点赞数")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("OFFICIAL")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("镜像是否为 Docker 官方提供"),s("small",[t._v("（建议使用官方提供的镜像）")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("AUTOMATED")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("镜像是否使用了自动构建")])])])]),t._v(" "),s("h2",{attrs:{id:"拉取镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拉取镜像"}},[t._v("#")]),t._v(" 拉取镜像")]),t._v(" "),s("p",[t._v("通过 "),s("strong",[t._v("docker pull")]),t._v(" 指令可以拉取仓库镜像到本地"),s("small",[t._v("（默认都是拉取 Docker Hub 仓库镜像）。")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("docker pull ubuntu\n")])])]),s("p",[t._v("Docker 会利用镜像的分层机制，将镜像分为多个包进行下载，我们可以在终端输出中看到每层的下载状态。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("ul",[s("li",[t._v("按照镜像的命名规则（"),s("code",[t._v("Namespace/Repository:Tag")]),t._v(" ），上例中的 ubuntu 就是一个镜像的 Repository 名。")]),t._v(" "),s("li",[t._v("没有指明 Namespace，就表示 Docker 官方管理的镜像。")]),t._v(" "),s("li",[t._v("没有指明 Tag，Docker 默认会使用 "),s("code",[t._v("latest")]),t._v(" 标签，表示最新版本。")]),t._v(" "),s("li",[t._v("通常情况下，还是倾向于提供更确定的镜像信息，以减少镜像版本带来的不确定性。")])])]),t._v(" "),s("h2",{attrs:{id:"删除镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除镜像"}},[t._v("#")]),t._v(" 删除镜像")]),t._v(" "),s("p",[t._v("当本地存放过多不需要的镜像时，可以通过 "),s("strong",[t._v("docker rmi")]),t._v(" 指令将其删除。在删除镜像时，需要指定镜像名称或镜像 ID 。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("docker rmi -f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("image_name or image_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("默认情况下，"),s("strong",[t._v("如果至少还存在一个容器使用该镜像，那么该镜像无法删除")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("-f")]),t._v(" 选项表示停止容器，并强制删除该镜像。不过并不推荐强制删除。")]),t._v(" "),s("p",[t._v("如果一个镜像中含有某些与其它镜像共享的镜像层，这些被共享的镜像层仍会被保留下来，")]),t._v(" "),s("p",[t._v("只有未被其它镜像使用的层会被删除。")]),t._v(" "),s("p",[t._v("我们同样可以指定镜像 ID 删除镜像：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("docker rmi 4e38e38c8ce0\n")])])]),s("h2",{attrs:{id:"创建并启动容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建并启动容器"}},[t._v("#")]),t._v(" 创建并启动容器")]),t._v(" "),s("p",[t._v("Docker 镜像主要用于创建容器，可以使用 "),s("strong",[t._v("docker run")]),t._v(" 指令创建并启动容器。例如：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("docker run -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(":80 --name "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" hello-world\n")])])]),s("ul",[s("li",[s("p",[t._v("命令说明： "),s("strong",[t._v("docker run")])]),t._v(" "),s("p",[t._v("表示创建并启动一个容器。最后的 hello-word 表示制作该容器的。")])]),t._v(" "),s("li",[s("p",[t._v("命令说明： "),s("strong",[t._v("-d")])]),t._v(" "),s("p",[t._v("表示容器启动后在后台运行")])]),t._v(" "),s("li",[s("p",[t._v("命令说明： "),s("strong",[t._v("-p 5000:80")])]),t._v(" "),s("p",[t._v("表示将主机的 5000 端口和容器的 80 端口『对接』。即，宿主机从 5000 端口收到的数据，由系统送到 docker 的 80 端口。")])]),t._v(" "),s("li",[s("p",[t._v("命令说明： "),s("strong",[t._v("--name test")])]),t._v(" "),s("p",[t._v("表示所创建的容器的名字为 test 。")])]),t._v(" "),s("li",[s("p",[t._v("命令说明： "),s("strong",[t._v("hello-world")])]),t._v(" "),s("p",[t._v("表示以 "),s("code",[t._v("hello-world")]),t._v(" 镜像为基础创建容器。")])])]),t._v(" "),s("p",[t._v("需要注意的是：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("docker run")]),t._v(" 命令包含了两个动作："),s("strong",[t._v("创建容器")]),t._v(" 和 "),s("strong",[t._v("启动容器")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("镜像和容器是一对多的关系：同一个镜像可以用来制作多个容器。")])])]),t._v(" "),s("p",[t._v("Docker 容器有以下两种运行态：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("前台交互式")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("容器运行在前台，容器运行时直接连接到容器中运行的程序上。")])]),t._v(" "),s("li",[s("p",[t._v("这种场景下，我们通常会通过附加的参数打开容器的伪终端和输入流，从而实现与容器中程序的交互。")])]),t._v(" "),s("li",[s("p",[t._v("当通过命令退出和关闭链接时，容器即停止运行。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("sudo docker run -i -t ubuntu /bin/bash")])]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("-i")]),t._v(" 表示开启了 input（输入）功能")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("-t")]),t._v(" 表示开启了一个连接容器里边的 terminal（终端）")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("-it")]),t._v(" 常一起使用")])])])])])]),t._v(" "),s("li",[s("p",[t._v("后台守护式")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("容器运行在后台，运行的过程中不会占用当前输入指定的终端，也不会连接到容器内的程序上。")])]),t._v(" "),s("li",[s("p",[t._v("这种运行后台容器必须通过指令来关闭"),s("small",[t._v("（"),s("code",[t._v("docker stop")]),t._v("）")]),t._v("。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("sudo docker run -d nginx")])])])])])]),t._v(" "),s("h2",{attrs:{id:"列出容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列出容器"}},[t._v("#")]),t._v(" 列出容器")]),t._v(" "),s("p",[t._v("生成容器后，可以通过 "),s("strong",[t._v("docker ps")]),t._v(" 指令查看当前运行的所有容器：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("docker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v("\n")])])]),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"right"}},[t._v("字段名")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("CONTAINER ID")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("容器的唯一性标识")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("IMAGE")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("容器所使用的镜像")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("COMMAND")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("容器启动时运行的命令"),s("small",[t._v("（即，容器中的主程序）")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("CREATED")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("容器的创建时间")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("STATUS")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("容器的运行状态。"),s("small",[t._v("Up 表示运行中，Exited 标识已停止")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("PORTS")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("容器内部包括的端口映射到的主机端口")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("NAMES")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("容器的名称")])])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数 "),s("strong",[t._v("-a")])]),t._v(" "),s("p",[t._v("使用 "),s("strong",[t._v("docker ps")]),t._v(" 命令只会列出正在运行中的程序，如果要列出所有容器，需要携带参数 "),s("strong",[t._v("-a")]),t._v(" 。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" docker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -a\n")])])])]),t._v(" "),s("li",[s("p",[t._v("参数 "),s("strong",[t._v("-l")])]),t._v(" "),s("p",[t._v("当我们创建了较多容器时"),s("small",[t._v("（使用 "),s("strong",[t._v("docker ps")]),t._v(" 命令返回结果过多）")]),t._v("，可以使用 "),s("strong",[t._v("-l")]),t._v(" 参数列出最后创建的那个容器：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" docker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -l\n")])])])]),t._v(" "),s("li",[s("p",[t._v("参数 "),s("strong",[t._v("-n")])]),t._v(" "),s("p",[t._v("也可以使用 "),s("strong",[t._v("-n")]),t._v(" 参数可以列出数个最近创建的容器：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" docker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"执行命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行命令"}},[t._v("#")]),t._v(" 执行命令")]),t._v(" "),s("p",[t._v("当生成容器后，客户端可以通过 "),s("strong",[t._v("docker exec")]),t._v(" 指令与运行中的容器进行通信，在通信时需要指定容器的 ID 或 Name 。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("例如，让容器去执行 "),s("em",[t._v("ls -l")]),t._v(" 。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("docker "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" f0c9a8b6e8c5 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -l\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"停止容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#停止容器"}},[t._v("#")]),t._v(" 停止容器")]),t._v(" "),s("p",[t._v("当不需要容器运行时，可以使用 "),s("strong",[t._v("docker stop")]),t._v(" 指令停止指定的容器。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("docker stop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("container_name or container_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])])]),t._v(" "),s("p",[t._v("使用上述指令停止容器时会略有延迟，成功后返回该容器的 ID 。")]),t._v(" "),s("p",[t._v("另外，"),s("strong",[t._v("docker ps")]),t._v(" 命令的执行结果中不会显示已停止的容器，如需查看这些容器要使用 "),s("strong",[t._v("-a")]),t._v(" 选项。")]),t._v(" "),s("p",[t._v("我们还可以通过 "),s("strong",[t._v("docker kill")]),t._v(" 指令立即杀死运行容器进程。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("docker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("container_name or container_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"启动容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动容器"}},[t._v("#")]),t._v(" 启动容器")]),t._v(" "),s("p",[t._v("容器停止后，如果需要重新访问该容器中的程序，需要重新启动该容器：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("docker start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("container_id or container_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("除了 "),s("strong",[t._v("docker start")]),t._v(" 指令可以启动已停止的容器外，还可以使用 "),s("strong",[t._v("docker restart")]),t._v(" 指令重启容器。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("docker restart "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("container_id or container_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n")])])]),s("h2",{attrs:{id:"_10-删除容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-删除容器"}},[t._v("#")]),t._v(" 10. 删除容器")]),t._v(" "),s("p",[t._v("当不需要使用容器时，则可以使用 "),s("strong",[t._v("docker rm")]),t._v(" 指令删除已停止的容器：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("docker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("container_id or container_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n")])])]),s("p",[t._v("默认情况下，上述指令『"),s("strong",[t._v("只能删除已停止的容器")]),t._v("』。如需要删除正在运行的容器，则需要添加 "),s("strong",[t._v("-f")]),t._v(" 参数强制删除。")]),t._v(" "),s("p",[s("strong",[t._v("docker rm")]),t._v(" 指令可以传入多个容器的 ID 或名字进行批量删除，甚至可以套用 "),s("strong",[t._v("docker ps")]),t._v(" 命令全部删除：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("docker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -f "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("docker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -aq"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n")])])]),s("p",[t._v("在这里，我们借助 "),s("strong",[t._v("docker ps -aq")]),t._v(" 指令去求得所有容器的 ID 。")]),t._v(" "),s("p",[t._v("因为 Docker 特有的镜像机制，在创建容器过程中并没有大量的 IO 操作，所以创建过程是秒级的。因此，我们更倾向于『"),s("strong",[t._v("随用随建，随停随删")]),t._v("』。在停止程序所在容器时，将容器一并删除。")]),t._v(" "),s("h2",{attrs:{id:"_11-构建镜像-自学、了解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-构建镜像-自学、了解"}},[t._v("#")]),t._v(" 11. 构建镜像（自学、了解）")]),t._v(" "),s("p",[t._v("除了可以通过 "),s("strong",[t._v("docker pull")]),t._v(" 指令从仓库拉取镜像之外，还可以通过 "),s("strong",[t._v("docker build")]),t._v(" 指令构建 Docker 镜像。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("有两种方式进行镜像构建：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("进入 Dockerfile 文件所在目录后，可以使用 "),s("strong",[t._v("docker build")]),t._v(" 指令进行镜像构建。")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("cd ~/workspace/dockerspace/\ndocker build -t hellodocker .\n")])])]),s("p",[t._v("上述的 "),s("code",[t._v(".")]),t._v(" 表示通过当前目录下的 Dockerfile 文件进行镜像构建。")])]),t._v(" "),s("li",[s("p",[t._v("在其他任意目录进行镜像构建")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("docker build -t hellodocker ~/workspace/dockerspace/\n")])])]),s("p",[t._v("通过同一个 Dockerfile 构建出来的镜像 ID 会相同。")])])])])]),t._v(" "),s("h2",{attrs:{id:"_12-文件拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-文件拷贝"}},[t._v("#")]),t._v(" 12. 文件拷贝")]),t._v(" "),s("p",[t._v("如果我们需要将文件拷贝到容器内可以使用 "),s("strong",[t._v("docker cp")]),t._v(" 命令")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("docker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("主机中的文件路径名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("容器名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("容器中的目录"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("docker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" /tmp/1.txt microboom:/tmp/1.txt\n")])])]),s("p",[t._v("也可以反向将文件从容器内拷贝出来：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("docker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("容器名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("容器中的文件路径名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("主机中的文件路径名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h2",{attrs:{id:"_13-目录挂载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-目录挂载"}},[t._v("#")]),t._v(" 13. 目录挂载")]),t._v(" "),s("p",[t._v("我们可以在创建容器的时候，将宿主机的目录与容器内的目录进行映射，这样容器中的某个目录和真机中的某个目录是同一个目录，容器和真机就可以以此为桥梁相互影响。")]),t._v(" "),s("p",[t._v("例如，我们可以创建一个运行 mysql 的容器，将容器中存放数据文件的目录映射到真机中的某个目录。这样，哪怕是该容器被删除了，曾经存储的数据仍然还在。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("docker run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". -v 宿主机目录:容器目录\n")])])])])]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("docker run                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  -d                          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --rm                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  -v /home/ben/mysql/conf:/etc/mysql/conf.d   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  -v /home/ben/mysql/data:/var/lib/mysql      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3306")]),t._v(":3306                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MYSQL_ROOT_PASSWORD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --name mysql                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  mysql:8.0.16\n")])])]),s("h2",{attrs:{id:"_14-查看容器-ip-地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-查看容器-ip-地址"}},[t._v("#")]),t._v(" 14. 查看容器 IP 地址")]),t._v(" "),s("p",[t._v("我们可以通过以下命令查看容器运行的各种数据：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("docker inspect "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("container_name_or_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("当然，从中查找容器的 IP 地址很不方便，因此，可以对此再细化一下：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("docker inspect --format"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\{\\{.NetworkSettings.IPAddress}}'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("container_name_or_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("补，去掉上述命令中的两个 "),s("code",[t._v("\\")]),t._v(" 。")]),t._v(" "),s("h2",{attrs:{id:"_15-查看运行日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-查看运行日志"}},[t._v("#")]),t._v(" 15. 查看运行日志")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("docker logs -f --tail"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" 容器名称\n")])])]),s("p",[t._v("『完』")])])}),[],!1,null,null,null);a.default=r.exports}}]);