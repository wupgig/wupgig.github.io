(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{442:function(t,a,s){"use strict";s.r(a);var v=s(47),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"分支-基本概念和操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支-基本概念和操作"}},[t._v("#")]),t._v(" 分支：基本概念和操作")]),t._v(" "),s("p",[t._v("版本的提交不可能『依次进行，以便形成一条直线型的提交历史记录』，原因有二：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("有两个以上的开发者在对同一个项目进行并行式开发。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/git_branch_1.png",alt:"图片"}})])]),t._v(" "),s("li",[s("p",[t._v("一方面要修复旧版本中的 bug，而与此同时又要创建和发布新的版本。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/git_branch_2.png",alt:"图片"}})])])]),t._v(" "),s("p",[t._v("分支可以看作是开发过程当中的并行线，我们可以把提交图想象成游泳池中的泳道：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/git_branch_3.png",alt:"图片"}})]),t._v(" "),s("p",[t._v("在一个 Git 版本库中，总是唯一存在着一个『"),s("strong",[t._v("活动分支")]),t._v("』"),s("small",[t._v("（也叫『"),s("strong",[t._v("当前分支")]),t._v("』）")]),t._v("。我们可以用 "),s("strong",[t._v("branch")]),t._v(" 命令"),s("small",[t._v("（不带选项）")]),t._v("来列出所有的分支。Git 会用星号"),s("small",[t._v("（*）")]),t._v("凸显出当前活动分支。")]),t._v(" "),s("blockquote",[s("p",[t._v("对分支（Branch）的灵活高效操作是 Git 的『拳头』特性。")])]),t._v(" "),s("h2",{attrs:{id:"查看分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看分支"}},[t._v("#")]),t._v(" 查看分支")]),t._v(" "),s("p",[t._v("通过 "),s("strong",[t._v("git branch")]),t._v(" 可以看到 Git 仓库的所有分支。")]),t._v(" "),s("p",[t._v("当执行 "),s("strong",[t._v("git init")]),t._v(" 指令的时候，Git 就会自动产生一个名为 master 的分支：主分支。")]),t._v(" "),s("h2",{attrs:{id:"创建分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建分支"}},[t._v("#")]),t._v(" 创建分支")]),t._v(" "),s("p",[t._v("创建新的分支，也是使用 "),s("strong",[t._v("git branch")]),t._v(" 命令。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch 新分支名 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("从当前分支的 Commit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("如果省略 Commit，那么就是从当前分支的 HEAD 分化出新分支。")]),t._v(" "),s("h2",{attrs:{id:"切换分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#切换分支"}},[t._v("#")]),t._v(" 切换分支")]),t._v(" "),s("p",[t._v("建立分支后，可以通过 "),s("strong",[t._v("git checkout")]),t._v(" 命令来切换当前分支：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git checkout <分支名>\n")])])]),s("p",[t._v("有个简单的办法可以创建新分支并切换：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git checkout -b <新分支名> [Commit节点]\n")])])]),s("p",[t._v("分支指针主要用于指向活动分支"),s("small",[t._v("（即它总是在当前分支上的）")]),t._v("，每次提交时，它会移动到最新提交上。")]),t._v(" "),s("h2",{attrs:{id:"删除分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[t._v("#")]),t._v(" 删除分支")]),t._v(" "),s("p",[t._v("删除分支使用：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git branch -d <被删除分支名>\n")])])]),s("p",[t._v("如果在删除一个分支时，自己还未转移到其他分支上，git 会拒绝删除操作。如果坚持要删除的话，则使用 "),s("strong",[t._v("-D")]),t._v(" 选项替换 "),s("strong",[t._v("-d")]),t._v(" 选项。")]),t._v(" "),s("p",[t._v("一般情况下，分支应该合并到另一个分支。如果要删除还未合并的分支，Git 会显示错误信息，并拒绝删除。当然你也通过 "),s("strong",[t._v("-D")]),t._v(" 选项来强制删除。")]),t._v(" "),s("h2",{attrs:{id:"重命名当前"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重命名当前"}},[t._v("#")]),t._v(" 重命名当前")]),t._v(" "),s("p",[t._v("如果要更改分支的名称，需要先切换到该分支，然后执行")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git branch -m <分支新名字>\n")])])])])}),[],!1,null,null,null);a.default=_.exports}}]);