(window.webpackJsonp=window.webpackJsonp||[]).push([[241],{609:function(e,s,t){"use strict";t.r(s);var i=t(47),a=Object(i.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"redis-集群-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-集群-2"}},[e._v("#")]),e._v(" Redis 集群（2）")]),e._v(" "),t("p",[e._v("Redis 的集群模式可以认为是前面的主从复制、哨兵模式的结合体。通过 Redis 集群保证了系统的高可靠性。Redis 的数据是根据一定规则分配到集群中的不同机器的，当数据量过大时，还可以新增机器进行扩容，保证了很好的扩展性。")]),e._v(" "),t("p",[e._v("Redis 的集群原理是对数据集分割成多个片，将这些片平分到多个 Redis 实例中，每个实例只保存总数据中的一个子集。这样做的好处可以避免单机的内存容量限制，利用多台服务器的内存来支持缓存更多数据，这样有利于扩展计算能力，扩展网络带宽。")]),e._v(" "),t("p",[e._v("需要知道的是，Redis 集群使用的不是哈希一致性算法，而是使用不同形式的分片。Redis 集群总共有 16384 个槽，每个主节点负责维护一部分槽（从节点是不分配哈希槽的），以及槽映射的键值数据。在分片时，Redis 集群会对要存储的 key 值使用 CRC16 算法进行哈希得到一个整数值，然后用这个整数值对 16384 进行取模来得到具体槽位，公式为：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("slot = CRC16(key) % 16383\n")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);