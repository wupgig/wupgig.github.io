(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{505:function(t,a,s){"use strict";s.r(a);var e=s(47),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"jdbc-基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdbc-基础"}},[t._v("#")]),t._v(" JDBC 基础")]),t._v(" "),s("h2",{attrs:{id:"基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),s("p",[t._v("JDBC（Java Database Connectivity）是 Java 应用程序访问数据库的应用程序接口（API），它为 Java 应用程序开发提供了统一的结构标准 API，并通过一组驱动程序实现了独立于 DBMS 的数据库访问。")]),t._v(" "),s("p",[t._v("数据库厂商提供面向 JDBC 标准接口的数据库驱动程序，JDBC API 通过这些驱动程序可实现对不同 DBMS 数据库的访问。")]),t._v(" "),s("p",[t._v("使用 JDBC 接口，可以对所连接的数据库进行 SQL 操作访问。JDBC API 是在 java.sql 中定义的，主要有：Connection、DriverManager、Statement、PreparedStatement 和 ResultSet 等类及接口。")]),t._v(" "),s("p",[t._v("JDBC Driver Manager 负责动态管理数据库连接所需要的驱动程序，实现 Java 应用程序通过驱动程序访问特定数据库。可以使用 java.sql.DriverManager 接口访问 JDBC Driver Manager，如设定数据库访问类型参数、加载数据库驱动和初始化\nJDBC 调用的。")]),t._v(" "),s("p",[t._v("各个数据库厂商为支持 JDBC 标注接口，都提供了自己 DBMS 的 JDBC 驱动程序，以便 Java 应用程序可以连接到相应的数据库，进行数据访问处理。")]),t._v(" "),s("h2",{attrs:{id:"常用的-jdbc-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用的-jdbc-api"}},[t._v("#")]),t._v(" 常用的 JDBC API")]),t._v(" "),s("p",[t._v("在 java.sql 包中，定义了 JDBC API 的各个接口与类，常用的有：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("接口/类")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("java.sql.Connection")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("与指定数据库建立会画连接接口")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("java.sql.Date")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("处理数据库中的日期类型（java.util.Date 的子类）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("java.sql.Driver")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("数据库驱动接口")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("java.sql.DriverManager")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("管理数据库厂商驱动程序类")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("java.sql.PreparedStatement")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("带参数的 Statement 接口")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("java.sql.ResultSet")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("数据查询结果集接口")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("java.sql.SQLException")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("提供数据库访问异常信息类")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("java.sql.Statement")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("提供 SQL 执行和结果查询接口")])])])]),t._v(" "),s("h2",{attrs:{id:"jdbc-数据库访问步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdbc-数据库访问步骤"}},[t._v("#")]),t._v(" JDBC 数据库访问步骤")]),t._v(" "),s("h3",{attrs:{id:"加载数据库驱动程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加载数据库驱动程序"}},[t._v("#")]),t._v(" 加载数据库驱动程序")]),t._v(" "),s("p",[t._v("Java 应用程序访问数据库前，必须先加载相应的数据库驱动，才能建立 Java 应用程序与目标数据库间的连接。")]),t._v(" "),s("p",[t._v("该数据库驱动程序需要加载到内存，并在 DriverManager 中进行注册。加载数据库驱动程序可通过调用 Class.forName ( ) 方法实现：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.mysql.jdbc.Driver"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Class.forName ( ) 为注册驱动语句，com.mysql.jdbc.Driver 为 MySQL 数据库的驱动类。")]),t._v(" "),s("h3",{attrs:{id:"mysql-6-驱动的使用要求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql-6-驱动的使用要求"}},[t._v("#")]),t._v(" MySQL 6+ 驱动的使用要求")]),t._v(" "),s("p",[t._v("使用 mysql-connector 6+ 连接 MySQL 时『多』出来两个小要求：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("MySQL 驱动类发生了变化。原来的 "),s("code",[t._v("com.mysql.jdbc.Driver")]),t._v(" 被标注为废弃，改用新的 Driver："),s("strong",[t._v("com.mysql.cj.jdbc.Driver")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("可选参数 "),s("code",[t._v("serverTimezone")]),t._v(" 变成了必要参数："),s("strong",[t._v("serverTimezone=UTC")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("jdbc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("mysql://localhost:3306/scott?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"建立数据库连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#建立数据库连接"}},[t._v("#")]),t._v(" 建立数据库连接")]),t._v(" "),s("p",[t._v("为了获取数据库连接对象 Connection ，需要调用 JDBC 接口 DriverManager 的 getConnection (url, username, password) 方法。")]),t._v(" "),s("ul",[s("li",[t._v("参数 url：数据库连接地址。格式为：“JDBC协议:IP地址:端口/数据库名称”")]),t._v(" "),s("li",[t._v("参数 username：数据库用户名")]),t._v(" "),s("li",[t._v("参数 password：用户密码")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jdbc:mysql://localhost:3306/scott?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Connection")]),t._v(" conn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DriverManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConnection")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"创建执行-sql-语句的-statement-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建执行-sql-语句的-statement-对象"}},[t._v("#")]),t._v(" 创建执行 SQL 语句的 Statement 对象")]),t._v(" "),s("p",[t._v("建立连接后，可以向数据库发送 SQL 执行语句。而发送 SQL 执行语句依赖于 Connection 接口的 createStatement 方法创建的 Statement 对象。")]),t._v(" "),s("p",[t._v("Statement 对象有 3 种类型：")]),t._v(" "),s("ul",[s("li",[t._v("Statement：用于执行不带参数的简单 SQL 语句")]),t._v(" "),s("li",[t._v("PreparedStatement：用于执行带参数的预编译 SQL 语句")]),t._v(" "),s("li",[t._v("CallableStatement：用于执行数据库的存储过程调用")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Statement")]),t._v(" st "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStatement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"发送-sql-执行语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#发送-sql-执行语句"}},[t._v("#")]),t._v(" 发送 SQL 执行语句")]),t._v(" "),s("p",[t._v("创建 Statement 对象之后，就可以使用 Statement 对象的 3 个基本方法之一向数据库发送 SQL 语句执行操作：")]),t._v(" "),s("ul",[s("li",[t._v(".executeQeury ( )")]),t._v(" "),s("li",[t._v(".executeUpdate ( )")]),t._v(" "),s("li",[t._v(".execute ( )")])]),t._v(" "),s("p",[t._v("execute ( )  方法可以执行“增删改查”四大操作，但是，考虑到“增删改”与“查”操作的差异性，通常是使用 executeQuery ( ) 方法执行“增删改”，而用 executeQuery ( ) 方法执行“查”。")]),t._v(" "),s("h3",{attrs:{id:"结果集对象遍历"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结果集对象遍历"}},[t._v("#")]),t._v(" 结果集对象遍历")]),t._v(" "),s("p",[t._v("在执行 SQL 查询语句后，JDBC API 便将数据表查询结果返回到 ResultSet 结果对象中。")]),t._v(" "),s("p",[t._v("为了从结果集中对查询结果数据记性处理，需要调用 ResultSet 结果集对象的 getString 、getInt、getDate 等方法对结果集当前行的指定列进行读取处理。")]),t._v(" "),s("h3",{attrs:{id:"关闭对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关闭对象"}},[t._v("#")]),t._v(" 关闭对象")]),t._v(" "),s("p",[t._v("当完成数据库操作访问后，需要关闭 Java 程序中为访问数据库所创建的各种对象：")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("关闭顺序是『先创建的后关闭，后创建的先关闭』。")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("rs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭 ResultSet 对象")]),t._v("\nst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭 Statemtnt 对象 ")]),t._v("\nconn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭 Connection 对象")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);