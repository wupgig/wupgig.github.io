(window.webpackJsonp=window.webpackJsonp||[]).push([[286],{654:function(t,a,e){"use strict";e.r(a);var v=e(47),s=Object(v.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"sentinel-访问限流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sentinel-访问限流"}},[t._v("#")]),t._v(" Sentinel：访问限流")]),t._v(" "),e("p",[t._v("限流功能指的是 Sentinel"),e("small",[t._v("（类似于过滤器、拦截器的效果）")]),t._v("在收到请求后，拒绝请求的放行"),e("small",[t._v("（至 Controller）")]),t._v("，而是直接返回，从而减少对 Controller，乃至 Service 的触发执行。")]),t._v(" "),e("h2",{attrs:{id:"_1-流控规则-qps-限流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-流控规则-qps-限流"}},[t._v("#")]),t._v(" 1. 流控规则：QPS 限流")]),t._v(" "),e("h3",{attrs:{id:"如何添加流控规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何添加流控规则"}},[t._v("#")]),t._v(" 如何添加流控规则")]),t._v(" "),e("p",[t._v("在菜单左侧的 "),e("code",[t._v("簇点链路")]),t._v(" 和流控规则都可以针对 "),e("code",[t._v("服务接口")]),t._v(" 添加流控规则：")]),t._v(" "),e("p",[t._v("当我们的服务接口资源被访问的时候，就会出现在 "),e("code",[t._v("簇点链路")]),t._v(" 列表中，我们可以针对该服务接口资源配置流程控制规则。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/spring-cloud-alibaba/img/sentinel-02.png",alt:"sentinel-02"}})]),t._v(" "),e("p",[t._v("在流控规则页面也有 "),e("code",[t._v("新增流控规则")]),t._v(" 按钮，添加完成之后的流控规则，出现在流控规则页面列表中。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/spring-cloud-alibaba/img/sentinel-03.png",alt:"sentinel-03"}})]),t._v(" "),e("h3",{attrs:{id:"qps-流控"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#qps-流控"}},[t._v("#")]),t._v(" QPS 流控")]),t._v(" "),e("p",[t._v("点击 "),e("code",[t._v("新增流控规则")]),t._v(" 按钮之后，弹出如下的配置页面：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/spring-cloud-alibaba/img/sentinel-04.png",alt:"sentinel-04"}})]),t._v(" "),e("ul",[e("li",[e("p",[t._v("资源名称")]),t._v(" "),e("p",[t._v("表示我们针对哪个接口资源进行流控规则配置，如："),e("code",[t._v("/departments/{id}")])])]),t._v(" "),e("li",[e("p",[t._v("针对来源")]),t._v(" "),e("p",[t._v("表示针对哪一个服务访问当前接口资源的时候进行限流，"),e("strong",[t._v("default")]),t._v(" 表示不区分访问来源。")]),t._v(" "),e("p",[e("small",[t._v("如填写服务名称：xxx-service，表示 xxx-service 访问前接口资源的时候进行限流，其他服务访问该接口资源的时候不限流。")])])]),t._v(" "),e("li",[e("p",[t._v("阈值类型/单机阈值：QPS，每秒钟请求数量。上图配置表示每秒钟超过1次请求的时候进行限流。")])]),t._v(" "),e("li",[e("p",[t._v("流控模式")]),t._v(" "),e("p",[t._v("直接，当达到限流标准时就直接限流。")])]),t._v(" "),e("li",[e("p",[t._v("流控效果：")]),t._v(" "),e("p",[t._v("快速失败。很简单的说就是达到限流标准后，请求就被拦截，直接失败。"),e("small",[t._v("（HTTP状态码：429 too many request）")])])]),t._v(" "),e("li",[e("p",[t._v("是否集群：")]),t._v(" "),e("p",[t._v("默认情况下我们的限流策略都是针对单个服务的，sentinel 提供了集群限流的功能。")]),t._v(" "),e("p",[t._v("除非你的微服务规模特别大，一般不要使用集群模式。集群模式需要各节点与 token server 交互才可以，会增加网络交互次数，一定程度上会拖慢你的服务响应时间。")])])]),t._v(" "),e("p",[t._v("上面的限流规则用一句话说：对于任何来源的请求，当超过每秒 2 次的标准之后就直接限流，访问失败抛出 "),e("strong",[t._v("BlockException")]),t._v(" 异常！")]),t._v(" "),e("h2",{attrs:{id:"_2-流控规则-线程数限流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-流控规则-线程数限流"}},[t._v("#")]),t._v(" 2. 流控规则：线程数限流")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/spring-cloud-alibaba/img/sentinel-05.png",alt:"sentinel-05"}})]),t._v(" "),e("ul",[e("li",[e("p",[t._v("资源名称")]),t._v(" "),e("p",[t._v("表示我们针对哪个接口资源进行流控规则配置，如："),e("code",[t._v("/departments/{id}")])])]),t._v(" "),e("li",[e("p",[t._v("针对来源")]),t._v(" "),e("p",[t._v("表示针对哪一个服务访问当前接口资源的时候进行限流，default 表示不区分访问来源。")]),t._v(" "),e("p",[e("small",[t._v("如填写服务名称：xxxx-service ，表示 xxx-service 访问前接口资源的时候进行限流，其他服务访问该接口资源的时候不限流。")])])]),t._v(" "),e("li",[e("p",[t._v("阈值类型/单机阈值")]),t._v(" "),e("p",[t._v("线程数。表示开启 n 个线程处理资源请求。")])]),t._v(" "),e("li",[e("p",[t._v("流控模式")]),t._v(" "),e("p",[t._v("直接，当所有线程都被占用时，新进来的请求就直接限流")])]),t._v(" "),e("li",[e("p",[t._v("流控效果")]),t._v(" "),e("p",[t._v("快速失败。很简单的说就是达到限流标准后，请求就被拦截，直接失败。"),e("small",[t._v("（HTTP 状态码：429 too many request）")])])])]),t._v(" "),e("p",[t._v("上面的限流规则用一句话说：对于任何来源的请求，department-service 服务端 "),e("code",[t._v("/departments/{id}")]),t._v(" 资源接口的 2 个线程都被占用的时候，其他访问失败！")]),t._v(" "),e("h2",{attrs:{id:"_3-关联限流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-关联限流"}},[t._v("#")]),t._v(" 3. 关联限流")]),t._v(" "),e("p",[t._v("关联限流："),e("code",[t._v("/important")]),t._v(" 接口的重要程度要高于 "),e("code",[t._v("/normal")]),t._v(" 接口，如果，"),e("code",[t._v("/important")]),t._v(" 接口的访问压力很大，那么，可以『牺牲』掉 "),e("code",[t._v("/normal")]),t._v(" 接口，全力保证 "),e("code",[t._v("/important")]),t._v(" 接口的正常运行。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/spring-cloud-alibaba/img/sentinel-06.png",alt:"sentinel-06"}})]),t._v(" "),e("p",[t._v("上述的配置的意思是，如果 "),e("code",[t._v("/important")]),t._v(" 的访问压力达到了每秒 1 次，那么就对 "),e("code",[t._v("/normal")]),t._v(" 就会被限流，把 "),e("code",[t._v("/normal")]),t._v(" 接口停掉，以保证硬件资源全力供应 "),e("code",[t._v("/important")]),t._v(" 服务。")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),e("p",[t._v("上述是对 "),e("code",[t._v("/normal")]),t._v(" 的配置，不需要去配置 "),e("code",[t._v("/important")]),t._v(" 即可生效，也就是说，"),e("code",[t._v("/important")]),t._v(" 可以没有限流规则。")])]),t._v(" "),e("h2",{attrs:{id:"_4-链路限流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-链路限流"}},[t._v("#")]),t._v(" 4. 链路限流")]),t._v(" "),e("p",[t._v("链路限流和关联限流的思路很像，假设运营认为 "),e("code",[t._v("/important")]),t._v(" 接口的重要程度要高于 "),e("code",[t._v("/normal")]),t._v(" 接口，而且，它俩如果又都调用了同一个 Service 的方法，那么，我们可以『站在 Service 的方法』的角度上进行设置：如果，是 "),e("code",[t._v("/normal")]),t._v(" 接口在调用 Service 方法，那么就进行限流，而 "),e("code",[t._v("/important")]),t._v(" 接口的调用就不限流，或设置为更宽松一些的流控。")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("在 Service 的方法上使用注解 "),e("strong",[t._v("@SentinelResource")]),t._v(" ：")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SentinelResource")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"doSomething"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("通过配置关闭 sentinel 的 URL 收敛功能:")]),t._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sentinel")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("web-context-unify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n")])])]),e("p",[t._v("网上又资料显示该配置在低版本中无效，被认为是一个 bug ，不过现在高版本（spring-cloud-alibaba "),e("code",[t._v("2.2.2.RELEASE")]),t._v("）中修正了这个 bug 。")]),t._v(" "),e("p",[t._v("接下来，你会在 Sentinel 中看到 "),e("code",[t._v("/important")]),t._v(" 和 "),e("code",[t._v("/normal")]),t._v(" 两个 URI 下都有一个 "),e("code",[t._v("doSomething")]),t._v(" 。如下")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/spring-cloud-alibaba/img/sentinel-07.png",alt:"sentinel-07"}})])]),t._v(" "),e("li",[e("p",[t._v("现在你可以在流控规则中为 "),e("code",[t._v("doSomething")]),t._v(" 添加流控规则。注意，是 "),e("code",[t._v("doSomething")]),t._v(" ，而不是 "),e("code",[t._v("/important")]),t._v(" 或 "),e("code",[t._v("/normal")]),t._v(" 。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/spring-cloud-alibaba/img/sentinel-08.png",alt:"sentinel-08"}})])]),t._v(" "),e("li",[e("p",[t._v("分别触发 "),e("code",[t._v("/important")]),t._v(" 和 "),e("code",[t._v("/normal")]),t._v("，你会发现 "),e("code",[t._v("/normal")]),t._v(" 有流量限制，而 "),e("code",[t._v("/important")]),t._v(" 则没有。")])])]),t._v(" "),e("h2",{attrs:{id:"_5-流控效果"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-流控效果"}},[t._v("#")]),t._v(" 5. 流控效果")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("快速失败")])]),t._v(" "),e("p",[t._v("直接失败，抛出异常，不做任何额外的处理，是最简单、最直接、最常用的效果。")])]),t._v(" "),e("li",[e("p",[t._v("Warm up")]),t._v(" "),e("p",[t._v("它从开始阈值到最大 QPS 阈值会有一个缓冲阶段，一开始的阈值是最大 QPS 阈值的 1/3 ，然后慢慢增长，直到达到最大阈值。")])]),t._v(" "),e("li",[e("p",[t._v("排队等待")]),t._v(" "),e("p",[t._v("让请求以均匀的速度通过，单机阈值为每秒通过数量，其余的排序等待。即，如果单机阈值为 N，那么没 1/N 秒有一个访问『资格』。没有『资格』时，排队等待，直到超时。")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);