(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{404:function(t,s,a){"use strict";a.r(s);var e=a(47),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"docker-简介和安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-简介和安装"}},[t._v("#")]),t._v(" Docker 简介和安装")]),t._v(" "),a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("h3",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),a("p",[t._v("Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的Linux机器上，也可以实现虚拟化。")]),t._v(" "),a("p",[t._v("容器是完全使用沙箱机制，相互之间不会有任何接口"),a("small",[t._v("（类似 iPhone 的 app）")]),t._v("。几乎没有性能开销,可以很容易地在机器和数据中心中运行。最重要的是，他们不依赖于任何语言、框架或包括系统。")]),t._v(" "),a("h3",{attrs:{id:"实现方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现方式"}},[t._v("#")]),t._v(" 实现方式")]),t._v(" "),a("p",[t._v("Docker 项目的目标是实现轻量级的操作系统虚拟化解决方案。 Docker 的基础是 Linux 容器（LXC）、Cgroup 等技术。")]),t._v(" "),a("p",[t._v("在 LXC 的基础上，Docker 进行了进一步的封装，让用户不需要去关心容器的管理，使得操作更为简便。用户操作 Docker 的容器就像操作一个快速轻量级的虚拟机一样简单。")]),t._v(" "),a("h3",{attrs:{id:"docker-和传统虚拟化方式的不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-和传统虚拟化方式的不同"}},[t._v("#")]),t._v(" Docker 和传统虚拟化方式的不同")]),t._v(" "),a("p",[t._v("容器是在操作系统层面上实现虚拟化，直接复用本地主机的操作系统，而传统方式则是在硬件的基础上，虚拟出自己的系统，再在系统上部署相关的 APP 应用。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("传统虚拟化方案：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/docker/img/docker_1.png",alt:"docker_1"}})])]),t._v(" "),a("li",[a("p",[t._v("Docker虚拟化方案：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/docker/img/docker_2.png",alt:"docker_2"}})])])]),t._v(" "),a("p",[t._v("Docker 虚拟化有三个概念需要理解：镜像、容器、仓库。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("镜像：docker 的镜像其实就是模板，跟我们常见的 ISO 镜像类似，是一个样板。")])]),t._v(" "),a("li",[a("p",[t._v("容器：使用镜像所创建的应用或者系统，我们称之为一个容器。")])]),t._v(" "),a("li",[a("p",[t._v("仓库：仓库是存放镜像的地方，分为公开仓库"),a("small",[t._v("（Public）")]),t._v("和私有仓库"),a("small",[t._v("（Private）")]),t._v("两种形式。")])])]),t._v(" "),a("h3",{attrs:{id:"docker-虚拟化特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-虚拟化特点"}},[t._v("#")]),t._v(" Docker 虚拟化特点")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("操作启动快")]),t._v(" "),a("p",[t._v("运行时的性能可以获取极大提升，管理操作"),a("small",[t._v("（启动，停止，开始，重启等等）")]),t._v("都是以秒或毫秒为单位的。")])]),t._v(" "),a("li",[a("p",[t._v("轻量级虚拟化")]),t._v(" "),a("p",[t._v("你会拥有足够的『操作系统』，仅需添加或减小镜像即可。在一台服务器上可以布署几百个 Containers 容器。但是传统虚拟化，你虚拟 20 个虚拟机就不错了。")])]),t._v(" "),a("li",[a("p",[t._v("开源免费")]),t._v(" "),a("p",[t._v("开源的，免费的，低成本的。由现代 Linux 内核支持并驱动。"),a("small",[t._v("轻量的 Container 必定可以在一个物理机上开启更多“容器”，注定比 VMs 要便宜。")])])])]),t._v(" "),a("h2",{attrs:{id:"在-centos-上安装-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在-centos-上安装-docker"}},[t._v("#")]),t._v(" 在 CentOS 上安装 Docker")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("以下 CentOS 的版本是 8 。另外，以下命令默认以 root 进行操作。"),a("br"),t._v("\n另外，开发环境中，简单起见，记得关闭 Linux 防火墙"),a("br")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("#")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("命令")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("开启")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("systemctl start firewalld")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("关闭")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("systemctl stop firewalld")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("查看状态")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("systemctl status firewalld")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("开机禁用")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("systemctl disable firewalld")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("开机启用")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("systemctl enable firewalld")])])])])])]),t._v(" "),a("h3",{attrs:{id:"前期准备工作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前期准备工作"}},[t._v("#")]),t._v(" 前期准备工作")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("查看内核版本")]),t._v(" "),a("p",[t._v("Docker 官方要求 Linux 内核版本至少 3.8 以上，建议 3.10 以上。通过以下命令可查看内核版本：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("uname")]),t._v(" -r\n")])])]),a("p",[t._v("CentOS 7 的内核版本是满足其要求的。")])]),t._v(" "),a("li",[a("p",[t._v("卸载旧版本")]),t._v(" "),a("p",[t._v("较旧的 Docker 版本称为 "),a("em",[t._v("docker")]),t._v(" 或 "),a("em",[t._v("docker-engine")]),t._v(" 。如果已安装这些程序，请卸载它们以及相关的依赖项。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("yum remove docker "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n           docker-client "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n           docker-client-latest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n           docker-common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n           docker-latest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n           docker-latest-logrotate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n           docker-logrotate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n           docker-engine\n")])])])]),t._v(" "),a("li",[a("p",[t._v("前期准备 3：为配置 docker 软件源作准备")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("yum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    yum-utils "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    device-mapper-persistent-data "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    lvm2\n")])])])]),t._v(" "),a("li",[a("p",[t._v("前期准备 4：为 CentOS 添加 docker 软件源")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("yum-config-manager "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --add-repo  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    https://download.docker.com/linux/centos/docker-ce.repo\n")])])]),a("p",[t._v("考虑到从 docker 官方的仓库下载 docker-ce 有时会比较慢，可以使用下述命令将下载网址改为华为的镜像服务器：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s+download.docker.com+repo.huaweicloud.com/docker-ce+'")]),t._v(" /etc/yum.repos.d/docker-ce.repo\n")])])])]),t._v(" "),a("li",[a("p",[t._v("截至目前为止，我们干了什么？")]),t._v(" "),a("p",[t._v("CentOS 的默认的 yum 软件源中实际上有 docker 的安装包，如果直接进行 "),a("code",[t._v("yum install docker")]),t._v(" 也是可行的。")]),t._v(" "),a("p",[t._v("但是 docker 官方考虑到不同的用户对 docker 的不同版本有不同的需求"),a("small",[t._v("（有人追求最新，有人追求稳定）")]),t._v("，他们专门提供了一个仓库/网址用以提供多个版本的 docker 的下载。")]),t._v(" "),a("p",[t._v("因此，我们必须告知 yum 有这样一个仓库的存在，并且未来要求 yum 从这个仓库中下载我们指定版本的 docker 。"),a("small",[t._v("而非默认的仓库。")])])]),t._v(" "),a("li",[a("p",[t._v("前期准备 5：查看所有仓库中所有 docker 版本")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("yum list docker-ce --showduplicates "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" -r\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"安装-docker-并验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-docker-并验证"}},[t._v("#")]),t._v(" 安装 docker 并验证")]),t._v(" "),a("h4",{attrs:{id:"从网络仓库中下载-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从网络仓库中下载-安装"}},[t._v("#")]),t._v(" 从网络仓库中下载，安装")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("yum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y docker-ce\n或\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y docker-ce-xxx\n")])])]),a("p",[t._v("上述命令中的 "),a("code",[t._v("xxx")]),t._v(" 是指定的版本。例如：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("yum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y docker-ce-18.06.3.ce-3.el7\n")])])]),a("p",[t._v("安装过程中会出现类似如下询问：")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('从 https://download.docker.com/linux/centos/gpg 检索密钥\n导入 GPG key 0x621E9F35:\n 用户ID     : "Docker Release (CE rpm) &lt;docker@docker.com>"\n 指纹       : 060a 61c5 1b55 8a7f 742b 77aa c52f eb6b 621e 9f35\n 来自       : https://download.docker.com/linux/centos/gpg\n是否继续？[y/N]：\n')])])]),a("p",[t._v("输入 "),a("code",[t._v("y")]),t._v(" 按回车继续安装。")]),t._v(" "),a("p",[t._v("最终会出现：")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("完毕！\n")])])]),a("h4",{attrs:{id:"启动-docker-并将其加入开机启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动-docker-并将其加入开机启动"}},[t._v("#")]),t._v(" 启动 Docker，并将其加入开机启动")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl start docker")]),t._v("\n\nsystemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" docker --now\n\nsystemctl status docker\n")])])]),a("p",[t._v("会出现类似如下结果：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.\n")])])]),a("h4",{attrs:{id:"验证安装是否成功"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#验证安装是否成功"}},[t._v("#")]),t._v(" 验证安装是否成功")]),t._v(" "),a("p",[a("small",[t._v("（有 client 和 service 两部分表示 docker 安装启动都成功了）")])]),t._v(" "),a("p",[t._v("输入 "),a("code",[t._v("docker version")]),t._v(" 命令，会出现类似如下内容：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("Client:\n  Version:    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17.12")]),t._v(".1-ce\n  API version:    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.35")]),t._v("\n  Go version:    go1.9.4\n  Git commit:    7390fc6\n  Built:    Tue Feb "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(":15:20 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v("\n  OS/Arch:    linux/amd64\n\nServer:\n Engine:\n   Version:    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17.12")]),t._v(".1-ce\n   API version:    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.35")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("minimum version "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   Go version:    go1.9.4\n   Git commit:    7390fc6\n   Built:    Tue Feb "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(":17:54 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v("\n   OS/Arch:    linux/amd64\n   Experimental:    "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),a("h4",{attrs:{id:"验证连接-docker-hub-中央镜像仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#验证连接-docker-hub-中央镜像仓库"}},[t._v("#")]),t._v(" 验证连接 docker hub 中央镜像仓库")]),t._v(" "),a("p",[t._v("输入 "),a("code",[t._v("docker search -f is-official=true mysql")]),t._v(" 命令，会出现类似如下结果：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("NAME     DESCRIPTION                                     STARS  OFFICIAL "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nmysql    MySQL is a widely used, open-source relation…   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8819")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nmariadb  MariaDB is a community-developed fork of MyS…   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3102")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\npercona  Percona Server is a fork of the MySQL relati…   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("459")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),a("h3",{attrs:{id:"配置国内镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置国内镜像"}},[t._v("#")]),t._v(" 配置国内镜像")]),t._v(" "),a("p",[t._v("由于 docker hub 的中央镜像仓库在国外，因此有时我们连接 docker hub 从中下载镜像速度会很感人，因此，我们需要配置国内的镜像网址，从国内现在镜像文件。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("国内的镜像本质上就是 docker hub 中央仓库在国内的一份缓存/备份。")])]),t._v(" "),a("p",[t._v("通过 vi 命令编辑相关配置文件：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/docker/daemon.json \n")])])]),a("p",[t._v("如果该文件存在，则将其内容清除；如果文件不存在，"),a("small",[t._v("（打开该文件后，其内容是空白的），")]),t._v("编辑结束后保存退出，即创建。")]),t._v(" "),a("p",[t._v("输入如下内容：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"registry-mirrors"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://registry.docker-cn.com"')]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://docker.mirrors.ustc.edu.cn"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("small",[t._v("该配置文件配置了两个镜像，一个是 docker 官方在中国境内的官方镜像，一个是中科大维护的一个镜像。")])]),t._v(" "),a("p",[t._v("重新启动 docker 服务：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("systemctl restart docker\n")])])]),a("p",[t._v("查看修改结果：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("docker info\n")])])]),a("p",[t._v("会有如下内容：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("...\nRegistry Mirrors:\n https://registry.docker-cn.com/\n https://docker.mirrors.ustc.edu.cn/\n...\n")])])]),a("h3",{attrs:{id:"导入已有的镜像文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导入已有的镜像文件"}},[t._v("#")]),t._v(" 导入已有的镜像文件")]),t._v(" "),a("p",[t._v("考虑到有些场景下的联网的不方便，docker 提供了将已下载的 images 打包导出，再在别处导入的功能。")]),t._v(" "),a("p",[t._v("导出已有 image 使用命令：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("docker save "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("repository"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -o "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("repository"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(".tar\n")])])]),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("docker save mysql:8.0.16 -o mysql-8.0.16.tar\n")])])]),a("p",[t._v("导入 image 使用命令：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("docker load -i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("repository"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(".tar\n")])])]),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("docker load -i mysql-8.0.16.tar\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);