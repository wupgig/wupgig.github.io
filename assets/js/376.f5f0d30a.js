(window.webpackJsonp=window.webpackJsonp||[]).push([[376],{742:function(t,e,n){"use strict";n.r(e);var s=n(47),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"校验工具"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#校验工具"}},[t._v("#")]),t._v(" 校验工具")]),t._v(" "),n("p",[t._v("Guava 提供 "),n("strong",[t._v("Preconditions")]),t._v(" 类，用于帮助逻辑上的前置校验工作。这些方法都是静态方法。")]),t._v(" "),n("p",[t._v("每个方法都有 3 个变种：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("没有额外参数：抛出的异常中没有错误消息；")])]),t._v(" "),n("li",[n("p",[t._v("有一个 Object 对象作为额外参数：抛出的异常使用 "),n("strong",[t._v("Object.toString()")]),t._v(" 作为错误消息；可用于抛出自定义的异常对象。")])]),t._v(" "),n("li",[n("p",[t._v("有一个 String 对象作为额外参数，并且有一组任意数量的附加 Object 对象：这个变种处理异常消息的方式有点类似 printf，不过只支持 "),n("strong",[t._v("%s")]),t._v(" 指示符。例如：")])])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkArgument")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Argument was %s but expected nonnegative"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkArgument")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Expected i < j, but %s > %s"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[t._v("方法")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("条件不满足时抛出的异常")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("checkArgument")])]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("IllegalArgumentException")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("checkNotNull")])]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("NullPointerException")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("checkState")])]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("IllegalStateException")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("checkElementIndex")])]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("IndexOutOfBoundsException")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("checkPositionIndex")])]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("IndexOutOfBoundsException")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("checkPositionIndexes")])]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("IndexOutOfBoundsException")])])])]),t._v(" "),n("p",[t._v("注意 "),n("strong",[t._v("Index")]),t._v(" 和 "),n("strong",[t._v("Position")]),t._v(" 的区别：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("索引"),n("small",[t._v("（index）")]),t._v("通常适用于定位字符串或容器中的某个元素，所以，其合法范围范围 0 ... n-1")])]),t._v(" "),n("li",[n("p",[t._v("位置值"),n("small",[t._v("（Position）")]),t._v("通常用于截取字符串或容器，在截取时由于区间是左开右闭 [a, b)，所以 b == n 时，b 也是合法的。")])]),t._v(" "),n("li",[n("p",[t._v("简单来说，Position 的上限比 Index 的上限多一个。")])])]),t._v(" "),n("p",[t._v("使用 Predication 的理由：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("在静态导入后，Guava 方法非常清楚明晰。checkNotNull 清楚地描述做了什么，会抛出什么异常；")])]),t._v(" "),n("li",[n("p",[t._v("checkNotNull 直接返回检查的参数，让你可以在构造函数中保持字段的单行赋值风格："),n("code",[t._v("this.field = checkNotNull(field)")])])]),t._v(" "),n("li",[n("p",[t._v("简单的、参数可变的 printf 风格异常信息。鉴于这个优点，在 JDK7 已经引入 "),n("code",[t._v("Objects.requireNonNull")]),t._v(" 的情况下，我们仍然建议你使用 checkNotNull 。")])])]),t._v(" "),n("p",[t._v("在编码时，如果某个值有多重的前置条件，我们建议你把它们放到不同的行，这样有助于在调试时定位。此外，把每个前置条件放到不同的行，也可以帮助你编写清晰和有用的错误消息。")])])}),[],!1,null,null,null);e.default=a.exports}}]);