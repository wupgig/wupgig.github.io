(window.webpackJsonp=window.webpackJsonp||[]).push([[295],{662:function(t,a,s){"use strict";s.r(a);var n=s(47),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"快速上手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快速上手"}},[t._v("#")]),t._v(" 快速上手")]),t._v(" "),s("h2",{attrs:{id:"_1-添加依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-添加依赖"}},[t._v("#")]),t._v(" 1. 添加依赖")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-data-jpa"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("mysql-connector-java"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h2",{attrs:{id:"_2-添加配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-添加配置文件"}},[t._v("#")]),t._v(" 2. 添加配置文件")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# datasource")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("spring.datasource.driver-class-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("com.mysql.cj.jdbc.Driver")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("spring.datasource.url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("jdbc:mysql://127.0.0.1:3306/scott\\\n    ?useUnicode=true\\\n    &characterEncoding=utf-8\\\n    &useSSL=true\\\n    &serverTimezone=UTC")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("spring.datasource.username")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("root")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("spring.datasource.password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("123456")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# jpa")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("spring.jpa.show-sql")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("spring.jpa.properties.hibernate.dialect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("org.hibernate.dialect.MySQL5Dialect")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("spring.jpa.properties.hibernate.format_sql")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("spring.jpa.properties.hibernate.hbm2ddl.auto")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("update")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# log")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("logging.level.root")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("INFO")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("logging.level.com.woniu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("DEBUG")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("logging.pattern.console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("${CONSOLE_LOG_PATTERN:\\\n  %clr(${LOG_LEVEL_PATTERN:%5p}) \\\n  %clr(|){faint} \\\n  %clr(%-40.40logger{39}){cyan} \\\n  %clr(:){faint} %m%n\\\n  ${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("hibernate.hbm2ddl.auto")]),t._v(" 参数的作用主要用于：自动创建、更新、验证数据库表结构，有四个值。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("值")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("create")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("每次启动项目都会删除上一次创建的 Table，再根据配置重新创建 Table 。"),s("small",[t._v("这种方式会导致数据库表数据丢失。")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("create-drop")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("本质上和 "),s("code",[t._v("create")]),t._v(" 一样，只不过是本次项目结束时就删除 Table 。"),s("small",[t._v("不用等到下次启动时再删除。")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("update")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("small",[t._v("最常用。")]),t._v("会以 Model 类的配置为依据，在没有表时建表，在表中没有某列时，新增列。每次启动时都是如此。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("validate")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("每次加载 Hibernate 时，会以 Model 类的配置来验证数据库中的表结构，两者必须严格一直"),s("small",[t._v("（char 和 varchar 都算不一致）")]),t._v("。这个过程中不会创建、更新新表。如果不一致会报错。")])])])]),t._v(" "),s("p",[t._v("::: info\n"),s("strong",[t._v("update")]),t._v(" 对数据库表结构的『更新』仅限于：")]),t._v(" "),s("ul",[s("li",[t._v("根据 Model 创建一个原本不存在的 Table；")]),t._v(" "),s("li",[t._v("为已存在的 Table『新增』列。")])]),t._v(" "),s("p",[t._v("不包括")]),t._v(" "),s("ul",[s("li",[t._v("修改已有列的数据类型；")]),t._v(" "),s("li",[t._v("新增或修改已有列的约束条件；")]),t._v(" "),s("li",[t._v("删除 Table 的某列。\n:::")])]),t._v(" "),s("h2",{attrs:{id:"_3-开启-jpa-框架功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-开启-jpa-框架功能"}},[t._v("#")]),t._v(" 3. 开启 JPA 框架功能")]),t._v(" "),s("p",[t._v("在某个配置类（或入口类）上加上 "),s("em",[s("strong",[s("code",[t._v('@EnableJpaRepositories(basePackages = "xxx.yyy.zzz.dao")')])])]),t._v(" 注解。")]),t._v(" "),s("blockquote",[s("p",[t._v("经测试，这一步并非必须。不加时 Spring Boot 也会自动启动 JPA 框架功能。而且，默认会扫描入口类平级及下级包，看哪个类『脑袋』上有 "),s("em",[s("strong",[s("code",[t._v("@Repository")])])]),t._v(" 注解。")])]),t._v(" "),s("h2",{attrs:{id:"_4-实体类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-实体类"}},[t._v("#")]),t._v(" 4. 实体类")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * DBMS   - catalog  - schema   - table\n * Mysql  - <no>     - database - table\n * Oracle - database - <no>     - table\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Entity")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Table")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"表名"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" schema "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"数据库名"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Department")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Id")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GeneratedValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strategy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GenerationType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IDENTITY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Column")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nullable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unique "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Column")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nullable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// getter / settet ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("由于默认配置的存在，上述示例省略了默写配置"),s("small",[t._v("（后续会讲解）")]),t._v("。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v('@Entity(name="EntityName")')]),t._v(" "),s("strong",[t._v("必须")])]),t._v(" "),s("p",[t._v("用来标注一个数据库对应的实体，数据库中创建的表名默认和类名一致。其中，name 为可选，对应数据库中一个表，使用此注解标记 JavaBean 是一个 JPA 实体。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v('@Table(name="", catalog="", schema="")')]),t._v(" "),s("em",[t._v("可选")])]),t._v(" "),s("p",[t._v("用来标注一个数据库对应的实体，数据库中创建的表名默认和类名一致。通常和 "),s("code",[t._v("@Entity")]),t._v(" 配合使用，只能标注在实体的 class 定义处，表示实体对应的数据库表的信息。")]),t._v(" "),s("p",[t._v("在数据库理论领域中，DBMS - Catalog - Schema - Table 是四级概念，但不是所有的数据库系统都支持这四级。MySql 就不支持其中的 catalog ，而 schema 就是 mysql 中的 database 。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("@Id")]),t._v(" "),s("strong",[t._v("必须")])]),t._v(" "),s("p",[s("code",[t._v("@Id")]),t._v(" 定义了映射到数据库表的主键的属性，一个实体只能有一个属性被映射为主键。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v('@GeneratedValue(strategy=GenerationType, generator="")')]),t._v(" "),s("em",[t._v("可选")])]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("strategy")]),t._v("：表示主键生成策略,有 "),s("code",[t._v("AUTO")]),t._v("、"),s("code",[t._v("INDENTITY")]),t._v("、"),s("code",[t._v("SEQUENCE")]),t._v(" 和 "),s("code",[t._v("TABLE")]),t._v(" 4 种。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("generator")]),t._v("：表示主键生成器的名称。")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v('@Column(name="user_code", nullable=false, length=32)')]),t._v(" "),s("em",[t._v("可选")])]),t._v(" "),s("p",[s("code",[t._v("@Column")]),t._v(" 描述了数据库表中该字段的详细定义，这对于根据 JPA 注解生成数据库表结构的工具。")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("name")]),t._v("：表示数据库表中该字段的名称，默认情形属性名称一致;")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("nullable")]),t._v("：表示该字段是否允许为 null，默认为 true;")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("unique")]),t._v("：表示该字段是否是唯一标识，默认为 false;")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("length")]),t._v("：表示该字段的大小，仅对 String 类型的字段有效。")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("@Transient")]),t._v(" "),s("em",[t._v("可选")])]),t._v(" "),s("p",[s("code",[t._v("@Transient")]),t._v(" 表示该属性并非一个到数据库表的字段的映射，ORM 框架将忽略该属性。")])])]),t._v(" "),s("blockquote",[s("p",[t._v("另外，"),s("em",[t._v("@Enumerated")]),t._v(" 和 "),s("em",[t._v("@Enumerated")]),t._v(" 注解在某些场景下可能也会用到。")])]),t._v(" "),s("p",[t._v("这些标注于属性上的注解，也可以标注在属性的 get 方法上。注意，不是/不用标注在 set 方法上。")])])}),[],!1,null,null,null);a.default=e.exports}}]);