(window.webpackJsonp=window.webpackJsonp||[]).push([[247],{615:function(t,a,s){"use strict";s.r(a);var n=s(47),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"java-web-进阶"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java-web-进阶"}},[t._v("#")]),t._v(" Java Web 进阶")]),t._v(" "),s("h2",{attrs:{id:"_1-httpsession"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-httpsession"}},[t._v("#")]),t._v(" 1. HttpSession")]),t._v(" "),s("p",[t._v("一个用户有且最多有一个 HttpSession，并且不会被其他用户访问到。HttpSession 对象在用户第一次访问网站时自动被创建，你可以通过调用 HttpServeltRequest 的 "),s("code",[t._v("getSession()")]),t._v(" 方法获得该对象。")]),t._v(" "),s("p",[t._v("会话（Session）是一个比请求（Request）更“大”的概念。一个会话中可以包含一个或多个请求；一个请求必定是在某个会话中。")]),t._v(" "),s("p",[s("code",[t._v("getSession()")]),t._v(" 方法会返回当前的 HttpSession，若当前没有，则创建一个返回。")]),t._v(" "),s("p",[t._v("可以通过 HttpSession 的 "),s("code",[t._v("setAttribute()")]),t._v(" 方法将值放入 HttpSesion 中。")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("ul",[s("li",[t._v("放到 HttpSesion 中的值不仅限于 String 类型，可以是任意实现了 java.io.Serializable 接口的 java 对象。"),s("br")]),t._v(" "),s("li",[t._v("其实，你也可以将不支持序列化的对象放入 HttpSession，只不过这样做会有隐患。")])])]),t._v(" "),s("p",[t._v("调用 "),s("code",[t._v("setAttribute()")]),t._v(" 方法时，若传入的 name 参数此前已经使用过，则会用新值覆盖旧值。通过调用 HttpSession 的 "),s("code",[t._v("getAttribute()")]),t._v(" 方法可以取回之前放入的对象。")]),t._v(" "),s("p",[t._v("所有保存在 HttpSession 的数据不会发送到客户端。容器为每个 HttpSession 生成唯一的表示，并将该标识发送给客户端，或创建一个名为 "),s("strong",[t._v("JSESSIONID")]),t._v(" 的 cookie，或者在 URL 后附加一个名为 jsessionid 的参数。在后续的请求总，浏览器会将该标识发送给客户端，这样服务器就可以识别该请求是由哪个用户发起的（"),s("strong",[t._v("这个过程无须开发人员介入")]),t._v("）。")]),t._v(" "),s("p",[t._v("默认情况下，HttpSession 会在用户不活动一段时间之后自动过期，该时间由 web.xml 中的 "),s("code",[t._v("session-timeout")]),t._v(" 元素配置，单位为分钟（如果不设置，则过期时间由容器自行决定）。此外，HttpSession还定义可一个 "),s("code",[t._v("invalidate()")]),t._v(" 方法强制会话立即过期失效。")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("session-config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("session-timeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("2"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("session-timeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("session-config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h2",{attrs:{id:"_2-el-表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-el-表达式"}},[t._v("#")]),t._v(" 2. EL 表达式")]),t._v(" "),s("p",[t._v("JSP 2.0 的最重要特性就是表达式语言（EL），EL 的目的是帮助程序员编写无脚本的 JSP 页面。")]),t._v(" "),s("p",[s("small",[t._v("最初 EL 表达式被创造出来是为了 JSTL 服务，配合 JSTL 使用的。不过从 JSP 2.0 开始即便项目中没有引入 JSTL，也可以（单独）使用 EL 。")])]),t._v(" "),s("h3",{attrs:{id:"el-的默认关闭"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#el-的默认关闭"}},[t._v("#")]),t._v(" EL 的默认关闭")]),t._v(" "),s("p",[t._v("在 Servlet 3.0 以下版本中，EL 表达式的功能默认是关闭的。")]),t._v(" "),s("blockquote",[s("p",[s("small",[t._v("如何判断你的项目使用的是哪个 Servlet ？可以查看你的 web.xml 配置文件的头部声明。")])])]),t._v(" "),s("p",[t._v("通常情况下，我们一般不会使用 3.0 以下"),s("small",[t._v("（甚至是 3.0）")]),t._v("版本，最常见的至少是 3.1 版本起。但是，有时我们通过开发工具去自动创建 Web 项目时，很有被创建出来的项目默认的 Servlet 版本会偏低。"),s("small",[t._v("因为这些工具的模板会偏老旧。")])]),t._v(" "),s("p",[t._v("如果因为某些原因，你使用的是低版本的 Servlet，记得要将 EL 表达式的功能打开。")]),t._v(" "),s("p",[t._v("在 JSP 的 "),s("em",[s("code",[t._v("page")])]),t._v(" 指令中，通过 "),s("em",[s("code",[t._v("isELIgnored")])]),t._v(" 属性可以在当前页面 启用/禁止 EL 表达式。")]),t._v(" "),s("p",[t._v("或者在 web.xml 作出全局性设置：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("jsp-config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("jsp-property-group")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("*.jsp"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("el-ignored")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("false"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("el-ignored")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("jsp-property-group")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("jsp-config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"el-语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#el-语法"}},[t._v("#")]),t._v(" EL 语法")]),t._v(" "),s("p",[t._v("EL 表达式以 "),s("code",[t._v("${")]),t._v(" 开头，并以 "),s("code",[t._v("}")]),t._v(" 结束，其结构为 "),s("code",[t._v("${ 表达式 }")]),t._v("，其计算结果的类型是一个『"),s("strong",[t._v("字符串")]),t._v("』。")]),t._v(" "),s("p",[t._v("EL 表达式的结果值可以是任何类型，但是浏览器会将其值以字符串形式"),s("small",[t._v("（toString 方法）")]),t._v("的形式将其“替换”到 EL 表达式所处位置。")]),t._v(" "),s("p",[t._v("EL 表达式可以返回任意类型的值。如果 EL 表达式的结果是一个带有属性的对象，则可以利用 "),s("code",[t._v("[ ]")]),t._v(" 或者 "),s("code",[t._v(".")]),t._v(" 运算符来访问该属性。如果是使用 "),s("code",[t._v("[ ]")]),t._v(" ，属性名需要用引号括起来。例如：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v('${object["propertyName"]}')])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("${object.propertyName}")])])])]),t._v(" "),s("p",[t._v("如果，propertyName 不是一个有效的 Java 变量名，例如："),s("code",[t._v("accept-language")]),t._v("，那么，此时只能使用 "),s("code",[t._v("[ ]")]),t._v(" 语法，而不能使用 "),s("code",[t._v(".")]),t._v(" 语法。")]),t._v(" "),s("p",[t._v("如果，对象的属性碰巧又是另一个对象，那么可以用 "),s("code",[t._v("[ ]")]),t._v("，也可以使用 "),s("code",[t._v(".")]),t._v(" 运算符来访问第二个对象的属性。例如：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v('${pageContext["request"]["servletPath"]}')])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v('${pageContext.request["servletPath"]}')])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("${pageContext.request.servletPath}")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v('${pageContext["request"].servletPath}')])])])]),t._v(" "),s("p",[t._v("如果 object 的类型是一个 Map，那么，这里使用的是键值对的键："),s("code",[t._v('${object["key"]}')])]),t._v(" "),s("p",[t._v("如果 object 的类型是一个 Array 或 List，那么这里使用的是其下标索引："),s("code",[t._v("${object[0]}")]),t._v(" 。"),s("small",[t._v("这里的下标索引 "),s("code",[t._v("0")]),t._v(" 没有使用 "),s("code",[t._v('""')]),t._v("，它必须是一个数字。")])]),t._v(" "),s("h3",{attrs:{id:"el-隐式对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#el-隐式对象"}},[t._v("#")]),t._v(" EL 隐式对象")]),t._v(" "),s("p",[t._v("在 JSP 页面中，可以利用 JSP 脚本来访问 JSP 隐式对象，")]),t._v(" "),s("p",[t._v("注意，在页面上显示 EL 表达式的值时，不需要 "),s("em",[s("code",[t._v("out.print()")])]),t._v(" 或者 "),s("em",[s("code",[t._v("<%= %>")])]),t._v(" ，容器会执行 EL 表达式并将其结果“写在”它所在的位置。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("隐含对象")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("pageContext")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("当前 JSP 页面的 "),s("code",[t._v("pageContext")]),t._v(" 对象")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("initParam")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Application 的初始化参数，初始化参数通常是在 web.xml 中通过 "),s("code",[t._v("<context-param>")]),t._v(" 及其子元素 "),s("code",[t._v("<param-name>")]),t._v(" 和 "),s("code",[t._v("<param-value>")]),t._v(" 配置项配置")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("param")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("一个包含了所有请求参数的 Map，其中请求参数名为 key。不过，它无法处理一个请求参数，多个值的情况。通过 key 始终只有第一个值返回。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("paramValues")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("和 param 类似，不过它可以处理一个参数名有多个参数值的情况。不过，如果参数只有一个值，它的返回值仍然是一个数组")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("applicationScope")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("包含了 ServletContext 对象中所有属性的 map，并用属性名作 key。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("sessionScope")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("包含了 HttpSession 对象中所有属性的 Map，并用属性名作 key。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("requestScope")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("包含了 HttpServletRequest 对象中所有属性的Map，并用属性名作key。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("pageScope")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("包含了全页面范围内的属性的 Map，并用属性名作 Key。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("cookie")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("包含了当前请求对象中所有 Cookie 对象的Map。以 Cookie 的名称作为 key，并且每一个 key 都映射到一个 Cookie 对象。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("header")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("HTTP 请求信息头，字符串")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("headerValues")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("HTTP 信息头，字符串数组。对应一个请求名，多个请求值的情况。通过 key 取出的始终是数组。")])])])]),t._v(" "),s("p",[t._v("E L表达式所提供的隐式对象中，并没有 request、response、session、application、out 等这些JSP中所存在的隐式对象。这是 EL 隐式对象与 JSP 隐式对象的区别。")]),t._v(" "),s("p",[t._v("不过 EL 的隐式对象中有 pageContext（和 JSP 中一样），通过它我们依旧可以访问到上述这些 JSP 中直接提供，但 EL 中没有直接提供的对象。")]),t._v(" "),s("p",[t._v("EL 表达式中可以使用 + 、- 、*、/、% 五种算数运算符。")]),t._v(" "),s("p",[t._v("EL 表达式中可以使用 &&、||、！ 三种逻辑运算符。")]),t._v(" "),s("p",[t._v("EL 表达式中可以使用 ==、！=、>、>=、<、<= 六种关系运算符。")]),t._v(" "),s("p",[t._v("EL 表达式中提供了一个 "),s("strong",[t._v("empty")]),t._v(" 运算符专门用于 空和非空 的判断（当然，你也可以用  == null 判断）。例如：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("empty "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("X 为 null，或者 X 是一个空字符串，或者 X 是一个空数组、空List、空Map、空Set，它都将返回 true 。")]),t._v(" "),s("h2",{attrs:{id:"_3-jstl-标签库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-jstl-标签库"}},[t._v("#")]),t._v(" 3. JSTL 标签库")]),t._v(" "),s("p",[t._v("JSP 标准标签库"),s("small",[t._v("（JSTL）")]),t._v("是一个定制标签库的集合，它的出现是为了实现呈现层与业务层的分离功能。使用 JSTL"),s("small",[t._v("（结合EL表达式）")]),t._v("在绝大多数情况下，JSP 页面中不再需要“嵌入”Java 代码"),s("small",[t._v("（scriplet）")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("使用 JSTL 需要额外导入 jstl 库。")])]),t._v(" "),s("p",[s("strong",[t._v("使用 JSTL 需要额外导入 jstl 库。")])]),t._v(" "),s("p",[s("strong",[t._v("使用 JSTL 需要额外导入 jstl 库。")])]),t._v(" "),s("p",[t._v("根据 JSTL 标签所提供的功能，可以将其分为 5 个类别：核心"),s("small",[t._v("（Core）")]),t._v("标签、格式化标签、SQL 标签、XML 标签、JSTL 函数。其中以核心"),s("small",[t._v("（Core）")]),t._v("标签最为常用。")]),t._v(" "),s("p",[t._v("使用不同类别的 JSTL 库，需要在 JSP 页面的头文件中做出相应的“声明”。例如：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v('<%@ taglib prefix="c"  uri="http://java.sun.com/jsp/jstl/core" %>\n')])])]),s("p",[t._v("如果忘记引入 "),s("em",[s("strong",[t._v("jstl")])]),t._v(" 库，上述声明会报错。")]),t._v(" "),s("h3",{attrs:{id:"c-out"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-out"}},[t._v("#")]),t._v(" c:out")]),t._v(" "),s("p",[s("code",[t._v("<c:out>")]),t._v(" 标签用来显示一个表达式的结果，与 "),s("code",[t._v("<%= ... %>")]),t._v(" 作用相似，它们的区别就是 "),s("code",[t._v("<c:out>")]),t._v(' 标签可以直接通过 "." 操作符来访问属性。')]),t._v(" "),s("p",[t._v("out 的语法有两种形式：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("形式一：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("out")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("VALUE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("[escapeXml")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),t._v(" {true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("false}]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("[default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("默认值"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("形式二：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("out")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("VALUE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("[escapeXml")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),t._v(" {true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("false}]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  默认内容\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("out")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("其中 value 属性是必要部分。")])])]),t._v(" "),s("h3",{attrs:{id:"c-set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-set"}},[t._v("#")]),t._v(" c:set")]),t._v(" "),s("p",[t._v("set 标签常见 2 种形式/作用：")]),t._v(" "),s("ul",[s("li",[t._v("第一种用于创建一个有界变量，并用 value 属性在其中定义一个要创建的字符串或者现存的有界对象：")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("VALUE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("VAR NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("[scope")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{ page | request | session | application }"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("ul",[s("li",[t._v("第二种形式是设置有界变量的属性。")])]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v('<%\n    request.setAttribute("username", "tom");\n    session.setAttribute("", "");\n    application.setAttribute("", "");\n%>\n\n'),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("123"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("scope")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("scope")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("scope")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("application"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n${requestScope.username}, ${requestScope.password}\n")])])]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("target")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("TARGET"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("property")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("PROPERTY NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("VALUE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("p",[t._v("注意，这种形式中，target 属性中 "),s("strong",[t._v("必须使用一个 EL 表达式")]),t._v(" 来引用这个有界变量。")]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v('<%\n    Department dept = new Department(10, "Testing","BeiJing");\n    request.setAttribute("dept", dept);\n%>\n\n'),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("target")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("${requestScope.dept}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("property")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("System"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" ${requestScope.dept.deptno} "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" ${requestScope.dept.dname} "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" ${requestScope.dept.loc} "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"c-remove"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-remove"}},[t._v("#")]),t._v(" c:remove")]),t._v(" "),s("p",[t._v("remove 标签用于删除有界变量。")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("remove")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("VAR NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("[scope")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{ page | request | session | application }"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("h3",{attrs:{id:"c-if"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-if"}},[t._v("#")]),t._v(" c:if")]),t._v(" "),s("p",[t._v("if 标签是对某一个条件进行测试，假如结果为 true，就处理它的 body content 。另外，测试的结果可以保存在一个 Boolean 对象中，并创建有界变量来引用这个 Boolean 对象。")]),t._v(" "),s("p",[t._v("if 的语法有两种形式。第一种是没有 body content：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("bool 型 EL 表达式"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("[var")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("VAR NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("]")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("[scope")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{ page | request | session | application }"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("p",[t._v("第二种形式使用了一个 body content：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("bool 型 EL 表达式"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("[var")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("变量名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("[scope")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{ page | request | session | applicationi }"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    body content\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"c-choose、c-when-和-c-otherwise"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-choose、c-when-和-c-otherwise"}},[t._v("#")]),t._v(" c:choose、c:when 和 c:otherwise")]),t._v(" "),s("p",[t._v("choose-when-otherwise 标签的作用与 Java 中的 switch-case-default 类似。")]),t._v(" "),s("p",[t._v("choose 标签中必须嵌有一个或多个 when 标签，并且每个 when 标签都有一种可以计算和处理的情况。otherwise 标签则用于默认的条件块。")]),t._v(" "),s("p",[t._v("choose 和 otherwise 标签没有属性。when 标签必须带有定义的测试条件 test 属性，来决定是否应该处理 body content 。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("choose")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("when")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("${boolean 表达式}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" ... "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("when")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("when")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("${boolean 表达式}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" ... "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("when")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    ...\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("otherwise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" ... "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("otherwise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("choose")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"c-foreach"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-foreach"}},[t._v("#")]),t._v(" c:forEach")]),t._v(" "),s("p",[t._v("forEach 标签会无数次反复便利 body content 或者对象集合。")]),t._v(" "),s("p",[t._v("forEach 标签的语法有两种。第一种形式是固定次数地重返 body content：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("forEach")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("[var")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("VAR NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("begin")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("BEGIN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("END"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("step")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("STEP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    body content\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("这种形式与集合对象无关。类似于 Java 代码中的 "),s("code",[t._v("for (int i = 0; i < 10; i++)")])]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("forEach")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("begin")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("step")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("hello world ${item} "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("第二种形式用于遍历对象集合。类似于 Java 代码中的 "),s("code",[t._v("for (String string : list)")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("forEach")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("items")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("COLLECTIONS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("[var")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("变量名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("[varStatus")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("变量名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    body content\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("对于每一次遍历，forEach 标签都将创建一个有界变量，变量名通过 var 属性定义，可在 body content 中使用。 该有界变量只能在 body content 部分使用。")]),t._v(" "),s("p",[t._v("forEach 标签有一个类型为 javax.servlet.jsp.jstl.core.LoopTagStatus 的变量 varStatus，这个变量有一个 count 属性，其中记录了当循环遍历的次数，该数值从1开始。")]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("forEach")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("items")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("${requestScope.depts}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dept"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("varStatus")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("loop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("第 ${loop.count} 个：${dept.deptno}, ${dept.dname}, ${dept.loc}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("c:")]),t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"fmt-进行日期格式化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fmt-进行日期格式化"}},[t._v("#")]),t._v(" fmt 进行日期格式化")]),t._v(" "),s("p",[t._v("引入申明：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v('<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>\n')])])]),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("fmt:")]),t._v("formatDate")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("<%=new Date()%>"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("pattern")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("yyyy-MM-dd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("%")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v('\n<fmt:formatDate value="${date}" type="date" pattern="yyyy-MM-dd"//>\n')])])]),s("h2",{attrs:{id:"_4-乱码问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-乱码问题"}},[t._v("#")]),t._v(" 4. 乱码问题")]),t._v(" "),s("h3",{attrs:{id:"判断字符串的编码格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断字符串的编码格式"}},[t._v("#")]),t._v(" 判断字符串的编码格式")]),t._v(" "),s("p",[s("em",[t._v("注意，由于存在重码现象，以下方案并不严谨")]),t._v(" 。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由于字符编码存在重叠区，所以一个字符/字符串有多种编码可能，是完全正常合理的。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEncoding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" encode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ASCII"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ISO-8859-1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GB2312"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GB2312 是 GBK 的一种“具体情况”。")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GBK"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// UTF-8 是 Unicode 的一种“具体情况”。")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-16"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// UTF-16 是 Unicode 的一种“具体情况”。")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Unicode"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" ret "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" encode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("encode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                ret "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ret "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" encode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" ex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Other"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("乱码出现在三种场景：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("GET 请求提交的中文数据，在 Servlet 中输出乱码。")])]),t._v(" "),s("li",[s("p",[t._v("POST 请求提交的中文数据，在 Servlet 中输出乱码。")])]),t._v(" "),s("li",[s("p",[t._v("返回给浏览器的中文数据，在页面显示乱码。")])])]),t._v(" "),s("p",[t._v("提前声明，虽然同样是提交的数据在 Servlet中 显示为乱码，但是 GET / POST 发生乱码的原因和解决乱码的方案并不相同，不能混用 。")]),t._v(" "),s("h3",{attrs:{id:"获取-get-请求中的数据-打印乱码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取-get-请求中的数据-打印乱码"}},[t._v("#")]),t._v(" 获取 GET 请求中的数据，打印乱码")]),t._v(" "),s("p",[t._v("默认情况下，浏览器发送给 Tomcat 的数据都是以 "),s("code",[t._v("ISO-8859-1")]),t._v(" 进行编码后的字节流。")]),t._v(" "),s("p",[t._v("在 get 请求中，Tomcat 以何种方式看待、解析接收的这些字节流取决于 server.xml 中的一个配置："),s("code",[t._v('<Connector port="8080" ... URIEncoding="xxx"')]),t._v(" 。")]),t._v(" "),s("p",[t._v("默认情况下 "),s("code",[t._v('URIEncoding="ISO-8859-1"')]),t._v("，即 Tomcat 默认以 ISO-8859-1 编码解析所收到的 get 请求发送来的字节流，从而转换为字符流，即字符串。")]),t._v(" "),s("p",[t._v("但是这里有一个关键性问题：Java 字符串是 UTF-8 编码。所以，当你通过 "),s("code",[t._v('req.getParameter("");')]),t._v(" 获得一个中文字符串时，这个字符串是 ISO-8859-1 编码，但一旦你使用 "),s("code",[t._v("System.out.println()")]),t._v(" 打印时，Java 会当它是一个 UTF-8 编码的字符串。这就是出现乱码原因。")]),t._v(" "),s("p",[t._v("解决问题的办法有两个：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("修改配置文件，让 Tomcat 以 UTF-8 格式 看待/解析 接收到的字节流。")])]),t._v(" "),s("li",[s("p",[t._v("不改变配置文件。获得 Tomcat 的 ISO-8859-1 字符串后，生成对应的 UTF-8 字符串，再进行输出打印。")])])]),t._v(" "),s("h3",{attrs:{id:"获取-post-请求中的数据-打印乱码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取-post-请求中的数据-打印乱码"}},[t._v("#")]),t._v(" 获取 POST 请求中的数据，打印乱码")]),t._v(" "),s("p",[t._v("serverl.xml 中 "),s("code",[t._v('URIEncoding="xxx"')]),t._v(" 设置影响不到 post 请求提交来的数据！适用于 get 请求的修改配置方案，对 post 请求无效！")]),t._v(" "),s("p",[t._v("Tomcat 如何 看待/解析 post 请求发送来的数据，取决于 "),s("code",[t._v('req.setCharacterEncoding("");')]),t._v("。如果未曾调用该方法，Tomcat 以 ISO-8859-1 编码解析接受的post请求数据。同上，随后一旦调用 "),s("code",[t._v("System.out.println()")]),t._v(" 就会出现乱码。")]),t._v(" "),s("p",[t._v("解决问题的办法有两个：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("在调用 "),s("code",[t._v("req.getParameter()")]),t._v(" 前调用 "),s("code",[t._v('req.setCharacterEncoding("UTF-8");')]),t._v("， 让 Tomcat 以 UTF-8 格式 看待/解析 接收到的字节流")])]),t._v(" "),s("li",[s("p",[t._v("不设置req字符编码。获得 Tomcat 的 ISO-8859-1 字符串后，生成对应的 UTF-8 字符串，再进行输出打印。")])])]),t._v(" "),s("p",[t._v("如同 get 的方案一对 post 无效，post 的方案一同样解决不了 get 的乱码问题。")]),t._v(" "),s("p",[t._v("但是，显而易见，两者方案二是相同的，这也是后续 "),s("strong",[t._v("过滤器")]),t._v(" 的主要使用场景。")]),t._v(" "),s("h3",{attrs:{id:"中文字符串-输出到页面显示乱码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#中文字符串-输出到页面显示乱码"}},[t._v("#")]),t._v(" 中文字符串，输出到页面显示乱码")]),t._v(" "),s("p",[t._v("以何种编码将字符转换为字节流后，发送给浏览器，取决于 "),s("em",[s("code",[t._v('resp.setCharacterEncoding("xxx");')])]),t._v(" 。没有调用时，默认使用 ISO-8859-1 编码格式。")]),t._v(" "),s("p",[t._v("但是 ISO-8859-1 格式最大的问题在于：它是一个单字节编码，不支持中文。")]),t._v(" "),s("p",[t._v("所以，使用 Tomcat 默认的 ISO-8859-1 编码向浏览器发送的字节流中，如果含有中文信息，浏览器无法正确显示成对应中文。")]),t._v(" "),s("p",[t._v("解决办法只有一个，设置 Tomcat 发送数据的编码格式，并且，"),s("em",[s("code",[t._v("resp.setCharacterEncoding()")])]),t._v(" 必须在 "),s("em",[s("code",[t._v("PrintWriter out = resp.getWriter();")])]),t._v(" 之前，否则设置无效"),s("small",[t._v("（因为你已经得到了使用 ISO-8859-1 编码的 out 对象了）")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"setcontenttype-和-setcharacterencoding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setcontenttype-和-setcharacterencoding"}},[t._v("#")]),t._v(" setContentType 和 setCharacterEncoding")]),t._v(" "),s("p",[t._v("在 "),s("strong",[t._v("servletResponse.setCharacterEncoding()")]),t._v(" 方法的注释中写到了它和 setContentType 之间的关系：")]),t._v(" "),s("ul",[s("li",[t._v("如果 response 的字符集已经在 setContentType"),s("small",[t._v("（或 setLocale）")]),t._v("方法中指定，那么你再调用 setCharacterEncoding 方法则会覆盖掉之前的设置。")]),t._v(" "),s("li",[s("code",[t._v('.setContentType("text/html; charset=UTF-8")')]),t._v(" 等同于 "),s("code",[t._v('.setContentType("text/html")')]),t._v(" + "),s("code",[t._v('.setCharacterEncoding("UTF-8")')]),t._v("。")])]),t._v(" "),s("p",[t._v("另外，在使用 setCharacterEncoding 会出现失效的情况，通常是因为 2 点原因：")]),t._v(" "),s("ol",[s("li",[t._v("你在 "),s("code",[t._v(".getWriter()")]),t._v(" 之后才调用 "),s("code",[t._v(".setCharacterEncoding()")]),t._v("，这样对字符集的设置太晚，自然是无效的。")]),t._v(" "),s("li",[t._v("你有 "),s("code",[t._v(".setCharacterEncoding()")]),t._v("，但是没有调用 "),s("code",[t._v(".setContentType()")]),t._v("，这样对字符集的设置也是无效的。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);