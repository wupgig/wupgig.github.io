(window.webpackJsonp=window.webpackJsonp||[]).push([[279],{645:function(t,r,l){"use strict";l.r(r);var s=l(47),i=Object(s.a)({},(function(){var t=this,r=t.$createElement,l=t._self._c||r;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h1",{attrs:{id:"初识-spring-cloud"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#初识-spring-cloud"}},[t._v("#")]),t._v(" 初识 Spring Cloud")]),t._v(" "),l("h2",{attrs:{id:"_0-微服务"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_0-微服务"}},[t._v("#")]),t._v(" 0. 微服务")]),t._v(" "),l("p",[t._v("微服务架构通常会与单体架构"),l("small",[t._v("（Monolithic Style）")]),t._v("进行比较。Web 应用程序发展的早期，大部分 Web 工程是将所有的功能模块打包到一起部署和运行，例如 Java 应用程序打包为一个 war 包。在单体应用中，所有这些模块都被集成在一起，这样运行的系统就叫做单体应用。")]),t._v(" "),l("p",[t._v("单体应用的优点是开发简单直接，集中式管理基本不会重复开发；功能都在本地，没有分布式的管理开销和调用开销。缺点也很明显，如开发效率低、代码维护难，稳定性和扩展性都存在不足。")]),t._v(" "),l("blockquote",[l("p",[t._v("微服务最早是由 Martin Fowler 与 James Lewis 于 2014 年共同提出。")])]),t._v(" "),l("p",[t._v("微服务架构，是一种软件架构方式。微服务的主要特点体现在组件化、松耦合、自治和去中心化等方面。它将应用构建成一系列按业务领域划分模块的、小的自治服务，通过分解巨大单体式应用为多个服务方法解决了复杂性问题。每个服务还提供了一个严格的模块边界，甚至允许用不同的编程语言编写不同的服务。不过，微服务应用是分布式系统，由此会带来分布式系统固有的复杂性，包括测试、运维的复杂度。")]),t._v(" "),l("h2",{attrs:{id:"_1-什么是-spring-cloud"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是-spring-cloud"}},[t._v("#")]),t._v(" 1. 什么是 Spring Cloud")]),t._v(" "),l("p",[t._v("Spring Cloud 是微服务架构思想的一个具体实现，它为开发人员提供了快速构建分布式系统中一些常见模式的工具"),l("small",[t._v("（如，配置管理、服务发、断路器、智能路由、微代理、控制总线等）。")])]),t._v(" "),l("p",[t._v("Spring Cloud 基于 Spring Boot 框架，它不重复造轮子，而是将第三方实现的微服务应用的一些模块集成进去。准确的说，Spring Cloud 是一个概念上容器，它包含了一整套组件。")]),t._v(" "),l("p",[t._v("最简单的 Spring Cloud 微服务架构包括『"),l("strong",[t._v("服务发现")]),t._v("』和『"),l("strong",[t._v("服务提供者")]),t._v("』"),l("small",[t._v("（即，一个大型系统拆分出来的子模块）")]),t._v("，最极端的微服务可以做到一个方法就是一个服务，一个方法就是一个项目，当然，真拆成这样那就十分过分了。")]),t._v(" "),l("div",{staticClass:"custom-block tip"},[l("p",{staticClass:"custom-block-title"},[t._v("说明")]),t._v(" "),l("p",[t._v("在一个系统中，服务怎么拆分，要具体问题具体分析，取决于业务。")])]),t._v(" "),l("p",[t._v("早期的 Spring Cloud 的发展基本上就是 Netflix 一家公司全力推动，Spring Cloud 体系中的各种组件基本上也都是由 Netflix 公司开源、捐赠出来的。早期的 Spring Cloud 五大组件包括：Eureka、Ribbon、Hystrix、Zuul、Config 。")]),t._v(" "),l("p",[t._v("后来随着 Spring Cloud 的社区的发展，特别是 Alibaba 在 Spring Cloud 社区中的扮演越来越重要的作用和推力，Spring Cloud 社区中出现了更多、更好、根据特色的组件以供大家选择。")])])}),[],!1,null,null,null);r.default=i.exports}}]);