(window.webpackJsonp=window.webpackJsonp||[]).push([[219],{587:function(t,a,s){"use strict";s.r(a);var e=s(47),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"nginx-实现负载均衡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-实现负载均衡"}},[t._v("#")]),t._v(" Nginx 实现负载均衡")]),t._v(" "),s("p",[t._v("负载均衡"),s("small",[t._v("（load balance）")]),t._v("就是将负载分摊到多个操作单元上执行，从而提高服务的可用性和响应速度，带给用户更好的体验。")]),t._v(" "),s("h2",{attrs:{id:"负载均衡的配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡的配置"}},[t._v("#")]),t._v(" 负载均衡的配置")]),t._v(" "),s("p",[t._v("通过 Nginx 中的 "),s("strong",[t._v("upstream")]),t._v(" 指令可以实现负载均衡，再该指令中能够配置负载均衡服务器组。")]),t._v(" "),s("p",[t._v("目前负载均衡有 4 种典型的配置方式。分别是：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("#")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("负载均衡方式")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("特点")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("轮询方式")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("默认方式。每个请求按照时间顺序逐一分配到不同的后端服务器进行处理。如果有服务器宕机，会自动删除。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("权重方式")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("利用 weight 指定轮循的权重比率，与访问率成正比。用于后端服务器性能不均衡的情况。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("ip_hash 方法")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("每个请求俺早访问 IP 的 hash 结果分配，这样可以使每个方可固定一个后端服务器，可以解决 Session 共享问题。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("第三方模块")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("取决于所采用的第三方模块的分配规则。")])])])]),t._v(" "),s("p",[t._v("在 upstream 指定的服务器组中，若每个服务器的权重都设置为 1"),s("small",[t._v("（默认值）")]),t._v("时，表示当前的负载均衡是一般轮循方式。")]),t._v(" "),s("h2",{attrs:{id:"准备工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[t._v("#")]),t._v(" 准备工作")]),t._v(" "),s("p",[t._v("编写后台"),s("small",[t._v("（SpringBoot）")]),t._v("项目，简单起见，以占用不同的端口的形式启动 2 次，并在返回的信息中返回各自所占用的端口号。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${server.port}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/api/hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("index")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletRequest")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"code"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10086"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"msg"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"success"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"负载-轮循"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#负载-轮循"}},[t._v("#")]),t._v(" 负载：轮循")]),t._v(" "),s("p",[t._v("轮循方式的关键配置如下：")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("server {\n    ...\n    location /api {\n        proxy_pass http://xxx/api;\n        ...\n    }\n}\n\nupstream xxx {\n    server 127.0.0.1:8080;\n    server 127.0.0.1:9090;\n}\n")])])]),s("p",[t._v("上述的配置中有 2 点需要注意的：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("upstream")]),t._v(" 配置项在 "),s("strong",[t._v("http")]),t._v(" 配置项内，但是在 "),s("strong",[t._v("server")]),t._v(" 配置项外，它们 3 者整体结构如下"),s("small",[t._v("（不要写错地方了）")]),t._v("：")])]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("http {\n    # 它们两者平级\n    server { ... }\n    upstream { ...}\n}\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("你所配置的 "),s("strong",[t._v("upstream")]),t._v(" 的 name 是自定义的，但是不要出现 "),s("strong",[s("code",[t._v("-")])]),t._v(" 号，否则会和 tomcat 有冲突。")])]),t._v(" "),s("p",[t._v("你持续访问 "),s("code",[t._v("http://127.0.0.1/api/hello")]),t._v(" 你会发现页面的内容会是交替出现 "),s("code",[t._v("8080")]),t._v(" 端口和 "),s("code",[t._v("9090")]),t._v(" 端口。")]),t._v(" "),s("h2",{attrs:{id:"负载-加权轮循"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#负载-加权轮循"}},[t._v("#")]),t._v(" 负载：加权轮循")]),t._v(" "),s("p",[t._v("加权轮循就是在轮循的基础上，为每个单点加上权值。权值越重的单点，承担的访问量自然也就越大。")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("upstream xxx {\n    server 127.0.0.1:8080 weight=1;\n    server 127.0.0.1:9090 weight=2;\n}\n")])])]),s("p",[t._v("按照上述配置，"),s("code",[t._v("9090")]),t._v(" 端口的服务将承担 2/3 的访问量，而 "),s("code",[t._v("8080")]),t._v(" 端口则承担 1/3 的访问量。")]),t._v(" "),s("p",[t._v("将配置改为上述样子并重启 Nginx 后，再持续访问 "),s("code",[t._v("http://127.0.0.1/api/hello")]),t._v(" 你会发现 "),s("code",[t._v("8080")]),t._v(" 端口和 "),s("code",[t._v("9090")]),t._v(" 端口会以 "),s("code",[t._v("1-2-1-2-...")]),t._v(" 的次数交替出现。")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("除了 "),s("strong",[t._v("weight")]),t._v(" 外，常见的状态参数还有：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("配置方式")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("max_fails")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("允许请求失败次数，默认为 1 。通常和下面的 fail_timeout 连用。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("fail_timeout")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在经历了 max_fails 次失败后，暂停服务的时长。"),s("small",[t._v("这段时间内，这台服务器 Nginx 不会请求这台 Server")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("backup")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("预留的备份机器。"),s("small",[t._v("它只有在其它非 backup 机器出现故障时或者忙碌的情况下，才会承担负载任务。")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("down")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("表示当前的 server 不参与负载均衡。")])])])]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("upstream web_server {\n    server 192.168.78.128 weight=1 max_fails=1 fail_timeout=30s;\n    server 192.168.78.200 weight=2 max_fails=1 fail_timeout=30s;\n    server 192.168.78.201 backup;\n    server 192.168.78.210 down;\n}\n")])])]),s("h2",{attrs:{id:"负载-ip-hash-负载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#负载-ip-hash-负载"}},[t._v("#")]),t._v(" 负载：ip_hash 负载")]),t._v(" "),s("p",[t._v("ip_hash 方式的负载均衡，是将每个请求按照访问 IP 的 hash 结果分配，这样就可以使来自同一个 IP 的客户端固定访问一台 Web 服务器，从而就解决了 Session 共享问题。")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("upstream xxx {\n    ip_hash;\n    server 127.0.0.1:8080;\n    server 127.0.0.1:9090;\n}\n")])])]),s("p",[t._v("使用上例配置后，你会发现无论你请求多少次 "),s("code",[t._v("http://127.0.0.1/api/hello")]),t._v(" 你所看到的端口始终是 "),s("code",[t._v("8080")]),t._v(" 和 "),s("code",[t._v("9090")]),t._v(" 中的某一个。")]),t._v(" "),s("h2",{attrs:{id:"将客户端浏览器的-ip-传递到后台"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将客户端浏览器的-ip-传递到后台"}},[t._v("#")]),t._v(" 将客户端浏览器的 IP 传递到后台")]),t._v(" "),s("p",[t._v("对于后台而言，它所面对的『"),s("strong",[t._v("客户端")]),t._v("』就是 Nginx，后台看不见『"),s("strong",[t._v("客户端")]),t._v("』浏览器。")]),t._v(" "),s("p",[t._v("这就意味着，你如果你需要在后台获取客户端浏览器的 IP 地址，你需要明确指出让 Nginx 『"),s("strong",[t._v("额外地多携带")]),t._v("』一些数据。")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("location /api {\n    proxy_pass http://xxx/api;\n    proxy_set_header X-Real-IP $remote_addr;\n\n    # proxy_set_header Cookie $http_cookie;\n    # proxy_set_header Host $http_host;\n    # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n}\n")])])]),s("p",[t._v("在 Spring Boot 的 Controller 中你有 2 种方式来获得这个额外的信息：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("index")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletRequest")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"X-Real-IP"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" realIP2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" realIP1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"X-Real-IP"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);