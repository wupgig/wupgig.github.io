(window.webpackJsonp=window.webpackJsonp||[]).push([[330],{697:function(t,a,s){"use strict";s.r(a);var n=s(47),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"spring-ioc-基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-ioc-基础"}},[t._v("#")]),t._v(" Spring IoC 基础")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-context"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("${spring.version}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 5.1.17.RELEASE --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h2",{attrs:{id:"代码配置和-xml-配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码配置和-xml-配置"}},[t._v("#")]),t._v(" 代码配置和 xml 配置")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Spring 从 "),s("strong",[t._v("2.x")]),t._v(" 开始，提供注解，用以简化 XML 配置文件配置")])]),t._v(" "),s("li",[s("p",[t._v("Spring 从 "),s("strong",[t._v("3.x")]),t._v(" 开始，基于注解功能，『"),s("strong",[t._v("提供")]),t._v("』了全新的配置方式：Java 代码配置方式。")])]),t._v(" "),s("li",[s("p",[t._v("到 "),s("strong",[t._v("4.x")]),t._v(" 时代，Spring 官方『"),s("strong",[t._v("推荐")]),t._v("』使用 Java 代码配置，以完全替代 XML 配置，实现零配置文件。")])]),t._v(" "),s("li",[s("p",[t._v("到了 "),s("strong",[t._v("Spring Boot")]),t._v(" 时代，Spring 官方甚至直接『"),s("strong",[t._v("要求")]),t._v("』使用 Spring 的代码配置方式进行配置。")])])]),t._v(" "),s("p",[t._v("实际上无论是从实际使用的灵活性、方便性，还是从官方的态度，都应该优先使用 Java 代码配置方式。")]),t._v(" "),s("h2",{attrs:{id:"实例化-spring-ioc-容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例化-spring-ioc-容器"}},[t._v("#")]),t._v(" 实例化 Spring IoC 容器")]),t._v(" "),s("p",[t._v("Spring 核心容器的理论很简单："),s("strong",[t._v("Spring 核心容器就是一个超级大工厂，所有的单例对象都由它创建并管理")]),t._v(" 。")]),t._v(" "),s("p",[t._v("你必须创建、实例化 Spring IoC 容器，读取其配置文件来创建 Bean 实例。然后你可以从 Spring IoC 容器中得到可用的 Bean 实例。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("BeanFactory  “老祖宗”接口\n└── ApplicationContext  最常用接口\n    └── AbstractApplicationContext  接口的抽象实现类\n        ├── ClassPathXmlApplicationContext  具体实现类之一\n        └── AnnotationConfigApplicationContext  具体实现类之二\n")])])]),s("p",[t._v("Spring IoC 容器主要是基于 "),s("strong",[t._v("BeanFactory")]),t._v(" 和 "),s("strong",[t._v("ApplicationContext")]),t._v(" 两个接口：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("BeanFactory")]),t._v(" 是 Spring IoC 容器的顶层接口，它是整个 Spring IoC 容器体系的“老祖宗”。")]),t._v(" "),s("p",[t._v("“老祖宗”接口中定义了我们未来最常用、最关注的方法："),s("strong",[t._v("getBean")]),t._v(" 方法。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("ApplicationContext")]),t._v(" 是最常用接口。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("ClassPathXmlApplicationContext")]),t._v(" 是 "),s("em",[t._v("ApplicationContext")]),t._v(" 的实现类之一。顾名思义，它从 classpath 中加载一个或多个 "),s("em",[t._v(".xml")]),t._v(" 配置文件，构建一个应用程序上下文。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContext")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassPathXmlApplicationContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"aaa.xml"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContext")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassPathXmlApplicationContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bbb.xml"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ccc.xml"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("AnnotationConfigApplicationContext")]),t._v(" 也是 "),s("em",[t._v("ApplicationContext")]),t._v(" 的实现类之二。不过它需要的是一个配置类或多个配置类，而非配置文件。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContext")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotationConfigApplicationContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Xxx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContext")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotationConfigApplicationContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Yyy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Zzz")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),s("p",[t._v("在获得『"),s("strong",[t._v("应用程序上下文")]),t._v("』"),s("small",[t._v("（也就是 IoC 容器）")]),t._v("后，你只需要调用 "),s("strong",[t._v("getBean")]),t._v(" 方法并传入唯一的 Bean ID 和 Bean 的 Class 对象，就可以获得容器中的 Bean 。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 大多数情况下 id 非必须")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Human")]),t._v(" tom "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tom"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Human")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Human")]),t._v(" tom "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Human")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("使用 Java 代码进行 Java Bean 的配置远比使用 XML 配置文件进行要简单很多，因为进行配置的『思维模式』发生了变化：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("使用 XML 进行配置，你要面面俱到地『告知』Spring 你要如何如何地去创建、初始化一个 Bean 。")])]),t._v(" "),s("li",[s("p",[t._v("使用 Java 代码进行配置，你只需要提供一个方法，你自己全权"),s("small",[t._v("（程序员）")]),t._v("负责方法的具体实现，并在方法的最后返回一个 Java Bean， "),s("strong",[t._v("Spring 不关心你的方法的实现内容和细节，它只保证未来调用你所写的方法，且只调用一次")]),t._v(" 。")])])]),t._v(" "),s("p",[t._v("在这种思路下，XML 配置的『"),s("strong",[t._v("很多情况")]),t._v("』在 Java 代码中就被统一成了『"),s("strong",[t._v("一种情况")]),t._v("』，因此变得更简洁。")])]),t._v(" "),s("h2",{attrs:{id:"spring-通过-java-代码配置-java-bean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-通过-java-代码配置-java-bean"}},[t._v("#")]),t._v(" Spring 通过 Java 代码配置 Java Bean")]),t._v(" "),s("p",[t._v("通过 Java 代码配置 Java Bean 的整体流程如下：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("准备好一个配置类"),s("small",[t._v("（XxxConfig）")]),t._v("。其中写一个或多个方法，每个方法负责返回你的项目中的"),s("small",[t._v("（逻辑上的）")]),t._v("单例对象。")]),t._v(" "),s("p",[s("small",[t._v("至于你的项目中是有多少个单例对象，那就需要你自己去分析、去设计。")])]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XxxConfig")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSource")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dataSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DruidDataSource")]),t._v(" dataSource "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DruidDataSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        dataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setUrl")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jdbc:mysql://127.0.0.1:3306/scott?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&useSSL=false"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        dataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDriverClassName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.mysql.cj.jdbc.Driver"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        dataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setUsername")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        dataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPassword")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("创建 "),s("strong",[t._v("AnnotationConfigApplicationContext")]),t._v(" 对象"),s("small",[t._v("（它就是我们口头所说的 Spring IoC 容器）")]),t._v("，并将上述的配置类作为参数传递给它。")]),t._v(" "),s("p",[t._v("在背后发生了这样的一件事情：Spring IoC 容器会去调用，你上述的配置类中的标注了 "),s("strong",[t._v("@Bean")]),t._v(" 的方法。它只调用一次，并将这些方法的返回值"),s("small",[t._v("（各个对象的引用）")]),t._v("保存起来。")]),t._v(" "),s("p",[s("small",[t._v("毫无疑问，这个对象必定就是单例的。")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotationConfigApplicationContext")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotationConfigApplicationContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YyyConfig")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("根据我们自己的需要，你可以向 Spring IoC 容器要（ "),s("code",[t._v("context.getBean(XXX.class)")]),t._v(" ）上述的配置类中的这么些个单例对象。")]),t._v(" "),s("p",[s("small",[t._v("在获得这些单例对象之后，你要干什么，就是你自己的事情了。")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSource")]),t._v(" ds "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Connection")]),t._v(" connection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConnection")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"创建对象的-3-种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建对象的-3-种方式"}},[t._v("#")]),t._v(" 创建对象的 3 种方式")]),t._v(" "),s("blockquote",[s("p",[t._v("再次强调，以何种方式创建对象"),s("small",[t._v("（包括如何赋值，赋什么值）")]),t._v("这是程序员自己考虑的事情，Spring IoC 并不关心。它只关心、关注你所提供的方法的返回值"),s("small",[t._v("（对象）")]),t._v("。")])]),t._v(" "),s("p",[t._v("创建 Bean ，常见的方式常见 3 种：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("#")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("方式")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("类自身的构造方法")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("工厂类提供的工厂方法")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("工厂对象提供的工厂方法")])])])]),t._v(" "),s("p",[t._v("在 Spring 的代码配置中，你自己决定使用何种方式创建对象并返回：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("通过类自身的构造方法")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSource")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dataSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DruidDataSource")]),t._v(" dataSource "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DruidDataSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    dataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setUrl")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jdbc:mysql://127.0.0.1:3306/scott?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&useSSL=false"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    dataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDriverClassName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.mysql.cj.jdbc.Driver"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    dataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setUsername")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    dataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPassword")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("工厂类提供的工厂方法")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSource")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dataSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Properties")]),t._v(" properties "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Properties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    properties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"driver"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.mysql.cj.jdbc.Driver"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    properties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jdbc:mysql://127.0.0.1:3306/scott?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&useSSL=false"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    properties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    properties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSource")]),t._v(" dataSource "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DruidDataSourceFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDataSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("properties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("工厂对象提供的工厂方法")]),t._v(" "),s("p",[t._v("略。")])])]),t._v(" "),s("h3",{attrs:{id:"java-bean-的属性的赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java-bean-的属性的赋值"}},[t._v("#")]),t._v(" Java Bean 的属性的赋值")]),t._v(" "),s("p",[t._v("在 Java 代码配置中，和『"),s("strong",[t._v("如何创建对象是程序员的“家务事”，Spring 并不关心")]),t._v("』一样，『"),s("strong",[t._v("以何种方式"),s("small",[t._v("（有参构造 or Setter）")]),t._v("为对象的属性赋值，以及赋何值也是程序员的“家务事”")]),t._v("』，Spring 也不关心。")]),t._v(" "),s("p",[t._v("上述 "),s("strong",[t._v("@Bean")]),t._v(" 方法所返回的 Java Bean，对 Spring 而言，其属性有值，就有值，没有值，就没有值；是这个值，就是这个值，是那个值就是那个值。")]),t._v(" "),s("blockquote",[s("p",[t._v("在 XML 方式的配置中，为 Java Bean 赋初值的配置要啰嗦的多得多。")])]),t._v(" "),s("h3",{attrs:{id:"引用类型的属性的赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用类型的属性的赋值"}},[t._v("#")]),t._v(" 引用类型的属性的赋值")]),t._v(" "),s("p",[t._v("大多数情况下，在 Java 代码的配置中，为对象的属性赋值都比较直接。但是在 Spring 的容器中，Java Bean 可能会存在引用。")]),t._v(" "),s("p",[t._v("即，一个 Spring 容器中的 Java Bean 的某个属性的值是容器中的另一个 Java Bean 的引用。")]),t._v(" "),s("p",[t._v("在 Java 代码配置中，有多"),s("small",[t._v("（3）")]),t._v("种方式来配置 Java Bean 的引用关系，这里推荐使『"),s("strong",[t._v("通过参数表示引用关系")]),t._v("』：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.zaxxer"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("HikariCP"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("${hikaricp.version}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 3.2.0 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HikariConfig")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hikariConfig")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HikariConfig")]),t._v(" config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HikariConfig")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDriverClassName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.mysql.cj.jdbc.Driver"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setJdbcUrl")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jdbc:mysql://127.0.0.1:3306/scott?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&useSSL=false"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setUsername")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPassword")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSource")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dataSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HikariConfig")]),t._v(" config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSource")]),t._v(" dataSource "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HikariDataSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"循环引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环引用"}},[t._v("#")]),t._v(" 循环引用")]),t._v(" "),s("p",[t._v("如果 Spring 容器中的两个对象，相互引用，那么会遇到循环引用问题：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("类定义：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Husband")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Wife")]),t._v(" wife"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Wife")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Husband")]),t._v(" husband"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("常规配置：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Husband")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("husband")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Wife")]),t._v(" wife"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Wife")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wife")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Husband")]),t._v(" husband"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),s("p",[t._v("解决这个问题的办法是对两个 Bean 中的其中一个使用 "),s("strong",[t._v("@Lazy")]),t._v(" 注解：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Husband")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("husband")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Lazy")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Wife")]),t._v(" wife"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Wife")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wife")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Husband")]),t._v(" husband"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("通过 "),s("strong",[t._v("@Lazy")]),t._v(" 注解，Spring 生成并返回了一个 Wife 的代理对象，因此给 Husband 注入的 Wife 并非真实对象，而是其代理，从而顺利完成了 Husband 实例的构造"),s("small",[t._v("（而不是报错）")]),t._v("；而 Wife 依赖的 Husband 是直注入完整的 Husband 对象本身。因此，这里通过 "),s("strong",[t._v("@Lazy")]),t._v(" 巧妙地避开了循环依赖的发生。")]),t._v(" "),s("h2",{attrs:{id:"简化配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简化配置"}},[t._v("#")]),t._v(" 简化配置")]),t._v(" "),s("p",[t._v("如果我们的项目中有几十个 Java Bean 要配置，那么就需要我们去编写几十个 "),s("strong",[t._v("@Bean")]),t._v(" 方法。很显然，这是很麻烦的事情。")]),t._v(" "),s("p",[t._v("为此，Spring 提供了几个注解来简化我们的配置。")]),t._v(" "),s("h3",{attrs:{id:"component-注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#component-注解"}},[t._v("#")]),t._v(" @Component 注解")]),t._v(" "),s("p",[s("strong",[t._v("@Component")]),t._v(" 注解用于标注于 Bean 的类上。凡是被标注了该注解的类"),s("small",[t._v("（只要在扫描路径下）")]),t._v("都会被 Spring 创建。")]),t._v(" "),s("p",[s("em",[t._v("@Component")]),t._v(" 注解有唯一的属性 "),s("strong",[t._v("value")]),t._v(" 属性。它用来为 Bean 命名。")]),t._v(" "),s("p",[s("strong",[t._v("@Component")]),t._v(" 注解有三个语义化的子注解：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("语义化子注解")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("用处")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("@Repository")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("用于持久层")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("@Service")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("用于业务层")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("@Controller")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("用于 Web 层")])])])]),t._v(" "),s("p",[s("strong",[t._v("@Component")]),t._v(" 注解要结合 "),s("strong",[t._v("@ComponentScan")]),t._v(" 注解使用：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ComponentScan")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("basePackages "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.example"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationConfig")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"configuration-注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuration-注解"}},[t._v("#")]),t._v(" @Configuration 注解")]),t._v(" "),s("p",[s("strong",[t._v("@Configuration")]),t._v(" 专用于标注于我们的配置类"),s("small",[t._v("（XxxConfig）")]),t._v("上。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YyyConfig")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("它有 2 个作用：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("逻辑上，它可以用来标识『这个类是个配置类』。")])]),t._v(" "),s("li",[s("p",[t._v("它会导致 Spring IoC 容器将这个配置类的对象，打入到 Spring IoC 容器的管理范畴内。")]),t._v(" "),s("p",[t._v("简单来说，这样一来 Spring IoC 容器中会『多』出来一个单例对象：YyyConfig 对象。")])])]),t._v(" "),s("h3",{attrs:{id:"value-注解和-propertysource-注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#value-注解和-propertysource-注解"}},[t._v("#")]),t._v(" @Value 注解和 @PropertySource 注解")]),t._v(" "),s("p",[s("strong",[t._v("@Value")]),t._v(" 注解用于标注于『"),s("strong",[t._v("简单类型")]),t._v("』属性上。凡是被标注了该注解的属性都会被 Spring 注入值"),s("small",[t._v("（赋值）")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("@Value")]),t._v(" 注解有唯一的属性 "),s("strong",[t._v("value")]),t._v(" 属性。它用来为简单属性指定值。")]),t._v(" "),s("hr"),t._v(" "),s("p",[s("strong",[t._v("@PropertySource")]),t._v(" 可以配合 "),s("strong",[t._v("@Value")]),t._v(" 来简化对简单类型的属性的赋值。")]),t._v(" "),s("p",[s("strong",[t._v("@PropertySource")]),t._v(" 除了可以直接用在 "),s("strong",[t._v("@Component")]),t._v(" 上，也可以用在配置类上。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("jdbc.properties")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("xxx.yyy.zzz.driver-class-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("com.mysql.cj.jdbc.Driver")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("xxx.yyy.zzz.url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("jdbc:mysql://127.0.0.1:3306/scott\\\n  ?useUnicode=true\\\n  &characterEncoding=utf-8\\\n  &useSSL=false\\\n  &serverTimezone=UTC")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("xxx.yyy.zzz.username")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("root")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("xxx.yyy.zzz.password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("123456")]),t._v("\n")])])]),s("p",[t._v("注意，这里有个和本知识点无关的小细节：需要有前缀，否则会因为命名冲突导致问题。"),s("small",[t._v("因为， "),s("em",[t._v("driver-class-name")]),t._v(" 、"),s("em",[t._v("url")]),t._v(" 、"),s("em",[t._v("username")]),t._v(" 、"),s("em",[t._v("password")]),t._v(" 这些单词太常见了。")])])]),t._v(" "),s("li",[s("p",[t._v("Java Bean")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PropertySource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"classpath:jdbc.properties"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 看这里，看这里，看这里")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ZzzConfig")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${xxx.yyy.zzz.driver-class-name}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" driver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${xxx.yyy.zzz.url}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${xxx.yyy.zzz.username}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${xxx.yyy.zzz.password}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"autowired-注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#autowired-注解"}},[t._v("#")]),t._v(" @Autowired 注解")]),t._v(" "),s("p",[s("strong",[t._v("@Autowired")]),t._v(" 注解用于标注于『"),s("strong",[t._v("引用类型")]),t._v("』属性上。凡是被标注了该注解的属性都会被 Spring 以『"),s("strong",[t._v("类型")]),t._v("』为依据注入另一个 Bean 的引用。")]),t._v(" "),s("p",[s("strong",[t._v("@Autowired")]),t._v(" 注解有唯一的属性 "),s("strong",[t._v("required")]),t._v(" 属性"),s("small",[t._v("（默认值为 "),s("code",[t._v("true")]),t._v("）")]),t._v("。它用来指示该对该属性的注入是否为必须"),s("small",[t._v("（默认为 "),s("code",[t._v("必须")]),t._v("）")]),t._v("，即，在 Spring IoC 容器中没有发现符合类型的其它 Bean 时，会抛出异常。")]),t._v(" "),s("h3",{attrs:{id:"qualifier-注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qualifier-注解"}},[t._v("#")]),t._v(" @Qualifier 注解")]),t._v(" "),s("p",[s("strong",[t._v("@Qualifier")]),t._v(" 注解需要结合 "),s("strong",[t._v("@Autowired")]),t._v(" 注解使用。它用于标注于引用类型属性上。凡是被标注了该注解的属性都会被 Spring 以『"),s("strong",[t._v("名字")]),t._v("』为依据注入另一个 Bean 的引用。")]),t._v(" "),s("p",[s("strong",[t._v("@Qualifier")]),t._v(" 注解有唯一的属性 "),s("strong",[t._v("value")]),t._v(" 属性。它用于指示需要注入的另一个 Bean 的名字。")]),t._v(" "),s("blockquote",[s("p",[t._v("一个小细节：包扫描的 Bean 会早于配置的 bean 先创建。")])]),t._v(" "),s("h2",{attrs:{id:"component-的无参构造和有参构造"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#component-的无参构造和有参构造"}},[t._v("#")]),t._v(" @Component 的无参构造和有参构造")]),t._v(" "),s("p",[t._v("如果你使用了 "),s("strong",[t._v("@Component")]),t._v(" 的 Java Bean 中有无参的构造器，或包括无参构造器在内的多个构造器，那么：")]),t._v(" "),s("p",[t._v("Spring 是使用你的『"),s("strong",[t._v("无参构造器")]),t._v("』来创建对象，"),s("small",[t._v("（此时对象的各个属性还没有值）")]),t._v("，然后再通过『"),s("strong",[t._v("反射")]),t._v("』对各个属性赋值。")]),t._v(" "),s("p",[t._v("如果你的类的构造器『"),s("strong",[t._v("只有有参构造器")]),t._v("』，而没有无参的构造器，那么，Spring 会调用你有参的构造器去创建这个对象，并同时完成对其属性的赋值。此后，Spring 不再另外对你的属性赋值。")]),t._v(" "),s("p",[t._v("Spring 官方推荐使用有参构造器创建并初始化对象。"),s("small",[t._v("如果遇到循环依赖问题，使用前面所说的 "),s("strong",[t._v("@Lazy")]),t._v(" 解决。")])]),t._v(" "),s("h2",{attrs:{id:"jsr-250-的-resource"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsr-250-的-resource"}},[t._v("#")]),t._v(" JSR-250 的 @Resource")]),t._v(" "),s("p",[t._v("Spring 不但支持自己定义的 "),s("strong",[t._v("@Autowired")]),t._v(" 注解，还支持几个由 "),s("strong",[t._v("JSR-250")]),t._v(" 规范定义的注解，它们分别是 "),s("strong",[t._v("@Resource")]),t._v("、@PostConstruct 以及 @PreDestroy 。")]),t._v(" "),s("p",[t._v("简单来说， "),s("strong",[t._v("@Resource")]),t._v(" 一个人就能实现 "),s("code",[t._v("@Autowired")]),t._v(" 和 "),s("code",[t._v("@Autowired + @Qualifier")]),t._v(" 两种功能。")]),t._v(" "),s("p",[s("strong",[t._v("@Resource")]),t._v(" 有两个重要属性："),s("strong",[t._v("name")]),t._v(" 和 "),s("strong",[t._v("type")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("name")]),t._v(" 属性解析为 JavaBean 的名字")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("type")]),t._v(" 属性则解析为 JavaBean 的类型")])])]),t._v(" "),s("p",[t._v("因此， "),s("strong",[t._v("name")]),t._v(" 属性和 "),s("strong",[t._v("type")]),t._v(" 属性两者同时出现，或同时不出现，亦或者出现一个，就意味着不同的『"),s("strong",[t._v("注入规则")]),t._v("』，也就分成了 4 种不同情况：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("如果同时指定了 "),s("code",[t._v("name")]),t._v(" 和 "),s("code",[t._v("type")]),t._v(" ，则从 IoC 容器中查找同时匹配这两个条件的 Bean 进行装配，找不到则抛出异常。")]),t._v(" "),s("p",[t._v("注意，type 和 name 两个条件是『"),s("strong",[t._v("且")]),t._v("』的关系。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Spring 在 IoC 容器中查找类型是 DaoDao，且名字是 catDao 的 JavaBean ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 来为 animalDao 属性赋值。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Resource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DogDao")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"catDao"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnimalDao")]),t._v(" animalDao"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("如果只指定了 "),s("code",[t._v("name")]),t._v(" ，则从 IoC 容器中查找 name 匹配的 Bean 进行装配，找不到则抛出异常。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Spring 在 IoC 容器中查找名字是 catDao 的 JavaBean ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 来为 animalDao 属性赋值。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Resource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"catDao"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnimalDao")]),t._v(" animalDao"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("如果只指定了 "),s("code",[t._v("type")]),t._v(" ，则从 IoC 容器中查找 "),s("em",[t._v("type")]),t._v(" 匹配的 Bean 进行装配，找不到或者找到多个，都会抛出异常。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Spring 在 IoC 容器中查找类型是 DogDao 的 JavaBean 来为 animalDao 属性赋值。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Resource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DogDao")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnimalDao")]),t._v(" animalDao"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("如果既没有指定 "),s("em",[t._v("name")]),t._v(" ，又没有指定 "),s("em",[t._v("type")]),t._v(" ，则先以 "),s("em",[t._v("name")]),t._v(" 为依据在 IoC 容器中查找，如果没有找到，再以 "),s("em",[t._v("type")]),t._v(" 为依据在 IoC 容器中查找。")]),t._v(" "),s("p",[t._v("这种情况下，类型和名字不是『且』的关系，而是『"),s("strong",[t._v("或")]),t._v("』的关系。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Spring IoC 先在容器中查找名字为 animalDao 的 JavaBean 来为 animalDao 属性赋值。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果没有找到，Spring IoC 再在容器中查找类型为 AnimalDao 的 JavaBean 来为 animal 属性赋值。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Resource")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnimalDao")]),t._v(" animalDao"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"三种注入方式的使用技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三种注入方式的使用技巧"}},[t._v("#")]),t._v(" 三种注入方式的使用技巧")]),t._v(" "),s("p",[t._v("『基于字段的依赖注入』方式有很多缺点，我们应当避免使用基于字段的依赖注入。")]),t._v(" "),s("p",[t._v("推荐的方法是使用『基于构造函数的依赖注入』方式和『基于 setter 方法的依赖注入』方式。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("对于『"),s("strong",[t._v("必需的")]),t._v("』依赖项，建议使用基于构造函数的注入，以使它们成为不可变的，并防止它们为 null 。")])]),t._v(" "),s("li",[s("p",[t._v("对于『"),s("strong",[t._v("可选的")]),t._v("』依赖项，建议使用基于 Setter 方法的注入。")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);