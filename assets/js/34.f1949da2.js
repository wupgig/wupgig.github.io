(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{403:function(t,a,s){"use strict";s.r(a);var e=s(47),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("ul",[s("li",[s("p",[t._v("Dockerfile.yml")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('FROM openjdk:8-jre-alpine\nEXPOSE 8080\nARG JAR_FILE\nADD target/${JAR_FILE} app.jar\nENTRYPOINT ["java", "-jar", "/app.jar"]\n')])])])]),t._v(" "),s("li",[s("p",[t._v("docker-compose.xml")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("context")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $PWD/finance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("order\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dockerfile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Dockerfile\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("JAR_FILE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" finance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("order.jar\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("network_mode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"host"')]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server.port=4321 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2")]),t._v("\n")])])])])]),t._v(" "),s("p",[t._v("这里的 1 和 2 处是为了解决这样的一个问题：spring-boot 项目在注册中心（Eureka、Nacos）注册的自己 IP 是 docker 容器的虚拟 IP "),s("code",[t._v("17.xxx.xxx.xxx")]),t._v(" ，很显然，是无法调用的。")]),t._v(" "),s("p",[t._v("因此这里使用 "),s("code",[t._v('network_mode: "host"')]),t._v(" ，这种情况下 docker 容器直接使用宿主机的 IP 和端口，不过此时，ports 属性就无法使用了。")]),t._v(" "),s("p",[t._v("如果，我们又不想在 spring-boot 项目写死项目的端口，而又想避免 8080 端口冲突，那么就要使用 command 属性去指定启动 spring-boot 项目是的端口。")])])}),[],!1,null,null,null);a.default=n.exports}}]);