(window.webpackJsonp=window.webpackJsonp||[]).push([[246],{614:function(t,a,s){"use strict";s.r(a);var e=s(47),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"servlet-基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#servlet-基础"}},[t._v("#")]),t._v(" Servlet 基础")]),t._v(" "),s("h2",{attrs:{id:"_1-servlet-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-servlet-api"}},[t._v("#")]),t._v(" 1. Servlet API")]),t._v(" "),s("h3",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("p",[t._v("Servlet API 是你的 Java Web 程序与 Servlet 容器"),s("small",[t._v("（例如，Tomcat）")]),t._v("之间的『约定』。")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("Servlet 容器有且不仅只有 Tomcat 一种。后续内容就不再强调 Servlet 容器和 Tomcat 之间的关系，但凡提到 Tomcat 容器的场景，使用其它的 Servlet 容器也是可以的。")])]),t._v(" "),s("p",[t._v("这个约定归结起来就是，"),s("strong",[t._v("Tomcat 将 Servlet 类载入内存，并由 Tomcat 调用 Servlet 对象的具体的方法")]),t._v(" 。"),s("small",[t._v("这些方法所需的参数也是由 Tomcat 准备并传入的")]),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("简单来说就是一句话，你按照某种特定规则写好代码『放在这里等着』Tomcat 来调用。")])]),t._v(" "),s("p",[t._v("Servlet 技术的核心是 Servlet 接口：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Servlet 接口\n└── GenericServlet 抽象类\n    └── HttpServlet \n")])])]),s("p",[t._v("你的 Servlet 类必须直接或间接实现的 Servlet 接口。通常，我们是继承 HttpServlet，从而间接实现 Servlet 接口。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 直接实现 Servlet 接口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AServlet")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Servlet")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 间接实现 Servlet 接口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BServlet")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GenericServlet")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 间接实现 Servlet 接口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CServlet")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServlet")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"相关对象概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相关对象概述"}},[t._v("#")]),t._v(" 相关对象概述")]),t._v(" "),s("p",[t._v("在 web 项目运行期间，每个 Servlet 类最多只能有一个对象。它们都是『"),s("strong",[t._v("单例")]),t._v("』的，它们都是"),s("small",[t._v("（被动地）")]),t._v("由 Tomcat 创建的。")]),t._v(" "),s("p",[t._v("如果你是直接实现的 Servlet 接口， Tomcat 在调用你的 Servlet 的 "),s("em",[s("strong",[t._v(".service")])]),t._v(" 方法时，会传入两个参数：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("ServletRequest")]),t._v(" 其中封装了当前的 HTTP 请求，因此，Servlet 开发人员不必解析和操作原始的 HTTP 数据。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("ServletResponse")]),t._v(" 表示对当前用户的 HTTP 响应，它使得将响应发回给用户变得十分容易。")])])]),t._v(" "),s("p",[t._v("如果你是间接实现的 Servlet 接口，本质上也是如此。")]),t._v(" "),s("p",[t._v("ServletRequest 和 ServletResponse 对象是『"),s("strong",[t._v("多实例")]),t._v("』的。")]),t._v(" "),s("p",[t._v("对于每一个 WebApp，Tomcat 还会创建一个 "),s("strong",[t._v("ServletContext")]),t._v(" 实例，它也是『"),s("strong",[t._v("单例")]),t._v("』的。这个对象中中封装了上下文的环境详情。")]),t._v(" "),s("p",[t._v("每个 Servlet 实例也都有一个封装 Servlet 配置的 "),s("strong",[t._v("ServletCongfig")]),t._v(" ，Servlet 和 ServletConfig 是『"),s("strong",[t._v("一一对应")]),t._v("』的。")]),t._v(" "),s("p",[t._v("总结：一个 WebApp 在运行时，有：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("1 个 ServletContext 实例")])]),t._v(" "),s("li",[s("p",[t._v("N 个 Servlet 实例 "),s("small",[t._v("（取决于 Servlet 类的数量）")])])]),t._v(" "),s("li",[s("p",[t._v("N 个 ServletConfig 实例 "),s("small",[t._v("（取决于 Servlet 类的数量）")])])]),t._v(" "),s("li",[s("p",[t._v("任意个 HTTPRequest / HTTPResponse 实例 "),s("small",[t._v("（取决于用户请求的次数）")])])])]),t._v(" "),s("h3",{attrs:{id:"servlet-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#servlet-接口"}},[t._v("#")]),t._v(" Servlet 接口")]),t._v(" "),s("p",[t._v("Servlet 接口中定义了 5 个方法：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("#")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("方法")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("em",[s("strong",[t._v(".init")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在 Servlet 第一次被请求时，被 Servlet 容器调用。"),s("br"),t._v("Tomcat 调用 "),s("em",[s("strong",[t._v(".init")])]),t._v(" 时，容器会传入一个 "),s("strong",[t._v("ServletConfig")]),t._v(" 对象。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("em",[s("strong",[t._v(".service")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在每次用户发起请求时，被容器调用。"),s("br"),t._v("Tomcat 调用 "),s("em",[s("strong",[t._v(".service")])]),t._v(" 时，容器会传入代表用户请求和相应的 "),s("strong",[t._v("HTTPRequest")]),t._v(" 对象和 "),s("strong",[t._v("HTTPResponse")]),t._v(" 对象。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("em",[s("strong",[t._v(".destroy")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在销毁 Servlet 时，被 Tomcat 调用。一般发生在卸载 WebApp 或关闭容器时。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("em",[s("strong",[t._v(".getServletInfo")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("这个方法返回一个用于描述 Servlet 的字符串。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("5")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("em",[s("strong",[t._v(".getServlet")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("这个方法用于返回由 Servlet 传给 "),s("em",[s("strong",[t._v(".init")])]),t._v(" 方法的 "),s("strong",[t._v("ServletConfig")]),t._v(" 对象。")])])])]),t._v(" "),s("p",[s("em",[s("strong",[t._v(".init")])]),t._v("、***.service*** 和 "),s("em",[s("strong",[t._v(".destroy")])]),t._v(" 方法是 Servlet 的生命周期方法，另外两个方法是非生命周期方法。")]),t._v(" "),s("h3",{attrs:{id:"genericservlet-抽象类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#genericservlet-抽象类"}},[t._v("#")]),t._v(" GenericServlet 抽象类")]),t._v(" "),s("p",[t._v("GenericServlet 抽象类实现了 Servlet 接口，它为这些方法提供了默认的实现，并新增了一个 "),s("strong",[t._v("servletConfig")]),t._v(" 实例变量，用于在 "),s("strong",[t._v("init()")]),t._v(" 方法中将容器传入的 ServletConfig 对象保存起来。")]),t._v(" "),s("h3",{attrs:{id:"httpservlet-类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#httpservlet-类"}},[t._v("#")]),t._v(" HTTPServlet 类")]),t._v(" "),s("p",[t._v("HTTPServlet 在其父类 GenericServlet 的基础上进一步简化了实现了 Servlet 接口的工作。")]),t._v(" "),s("p",[t._v("HTTPServlet 有两个特性是 GenericServlet 所不具备的：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("不用 Override "),s("strong",[t._v("service()")]),t._v(" 方法，而是 Override "),s("code",[t._v("doGet()")]),t._v(" 或者 "),s("code",[t._v("doPost()")]),t._v(" 方法。")])]),t._v(" "),s("li",[s("p",[t._v("使用 HttpServletRequest/HttpServletResponse，而非 ServletRequest/ServletResponse。")])])]),t._v(" "),s("h3",{attrs:{id:"servletrequest-和-httpservletrequest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#servletrequest-和-httpservletrequest"}},[t._v("#")]),t._v(" ServletRequest 和 HTTPServletRequest")]),t._v(" "),s("p",[t._v("每当 Tomcat 调用你的 Servlet 的 service 方法时，它都会创建一对新的 Request 和 Response 对象传入其中。")]),t._v(" "),s("blockquote",[s("p",[t._v("Tomcat 何时会调用你的Servlet 的 service 方法？")])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("getParameter()")])]),t._v(" 方法是 ServletRequest 中最常用的方法，该方法用于从 Request 对象中获取请求参数的值。")]),t._v(" "),s("p",[t._v("除了 "),s("code",[t._v("getParameter()")]),t._v(" 外，类似用于获取请求参数的值的方法还有：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[s("code",[t._v("getParameterNames()")])])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("getParameterMap()")])])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("getParameterValues()")])])])])]),t._v(" "),s("h3",{attrs:{id:"httpservletrequest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#httpservletrequest"}},[t._v("#")]),t._v(" HttpServletRequest")]),t._v(" "),s("blockquote",[s("p",[t._v("由于我们更长使用的是  HTTPServlet 类，而不是 Servlet 接口，因此，我们更多地是接触并使用 HttpServletRequest，而不是 ServletRequest 。")])]),t._v(" "),s("p",[t._v("HTTPServletRequest 实现并扩展了 ServletRequest 接口。")]),t._v(" "),s("p",[t._v("HttpServletRequest 扩展的常用方法有：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Stirng getRequestURL( )")])]),t._v(" "),s("li",[s("p",[t._v("Stirng getRequestURI( )")])]),t._v(" "),s("li",[s("p",[t._v("Stirng getContextPath( )")])]),t._v(" "),s("li",[s("p",[t._v("String getMethod( )")])]),t._v(" "),s("li",[s("p",[t._v("Cookie[] getCookies( )")])]),t._v(" "),s("li",[s("p",[t._v("HttpSession getSession( )")])])]),t._v(" "),s("h3",{attrs:{id:"servletresponse-和-httpservletresponse"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#servletresponse-和-httpservletresponse"}},[t._v("#")]),t._v(" ServletResponse 和 HTTPServletResponse")]),t._v(" "),s("p",[t._v("Tomcat 在调用你的 Servlet 的 "),s("code",[t._v("service()")]),t._v(" / "),s("code",[t._v("doGet()")]),t._v(" / "),s("code",[t._v("doPost()")]),t._v(" 方法时，除了会传入要给 Request 对象，还会传入一个 Response 对象："),s("strong",[t._v("ServletResponse")]),t._v(" / "),s("strong",[t._v("HttpServletResponse")]),t._v(" 。")]),t._v(" "),s("p",[t._v("ServletResponse 隐藏了向浏览器发送响应的复杂过程。")]),t._v(" "),s("p",[t._v("在 ServletResponse 所有的方法中，最常用的方法之一是 "),s("strong",[s("code",[t._v("getWriter()")])]),t._v(" 方法，它返回一个可以向客户端发送文本的 "),s("strong",[s("code",[t._v("java.io.PrintWriter")])]),t._v(" 对象。默认情况下，PrintWriter 对象使用 ISO-8859-1 编码。")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("有另外的一个向浏览器发送数据的方法叫 "),s("code",[t._v("getOutputStream()")]),t._v("，但这个方法是用于发送二进制数据的。因此大多数情况下使用的是 "),s("code",[t._v("getWriter()")]),t._v("，而非 "),s("code",[t._v("getOutPutStream()")]),t._v("。不要调用错了方法。")])]),t._v(" "),s("p",[t._v("大多数情况下，你的 Servlet 通过 Tomcat 向客户端发送响应数据应该是一个 HTML 格式的字符串。")]),t._v(" "),s("p",[t._v("在发送这个 HTML 格式字符串前，应该先调用 "),s("strong",[s("code",[t._v("setContentType()")])]),t._v(" 方法，设置响应的内容类型，并将 "),s("strong",[s("code",[t._v("text/html")])]),t._v(" 作为参数传入。"),s("small",[t._v("这是告诉浏览器，所发送给它的数据内容是 HTML 格式内容。")])]),t._v(" "),s("p",[t._v("HTTPServletResponse 实现并扩展了 ServletResponse 接口。它所扩展的常用的方法有：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("void addCookie ( Cookie cookie )")])]),t._v(" "),s("li",[s("p",[t._v("void sendRedirect ( String location )")])])]),t._v(" "),s("h3",{attrs:{id:"servletconfig-和-servletcontext"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#servletconfig-和-servletcontext"}},[t._v("#")]),t._v(" ServletConfig 和 ServletContext")]),t._v(" "),s("p",[t._v("当 Tomcat 创建出你的 Servlet 的单例对象后，它会调用你的 Servlet 的 "),s("code",[t._v("init()")]),t._v(" 方法，并传入一个 "),s("strong",[t._v("ServletConfig")]),t._v(" 对象。")]),t._v(" "),s("p",[s("strong",[t._v("ServletConfig")]),t._v(" 对象中封装这由 "),s("strong",[s("code",[t._v("@WebServlet")])]),t._v(" 注解或者 "),s("strong",[t._v("部署描述符")]),t._v(" 传给 Servlet 的配置信息。")]),t._v(" "),s("blockquote",[s("p",[t._v("这样传入的每一条信息就叫做 "),s("strong",[t._v("初始化参数")]),t._v("，一个初始化参数由 key 和 value 组成。")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@WebServlet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HelloServlet"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            urlPatterns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello.do"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            initParams "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@WebInitParam")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"author"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ben"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@WebInitParam")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"email"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hemiao3000@126.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("为了获得 Servlet 的初始化参数，可以从容器传给 Servlet 的 ServletConfig 对象中调用 "),s("strong",[s("code",[t._v("getInitParameter()")])]),t._v(" 方法来获得。")]),t._v(" "),s("hr"),t._v(" "),s("p",[s("strong",[t._v("ServletContext")]),t._v(" 代表着 WebbApp。每个 WebApp 只有一个 "),s("strong",[t._v("ServletContext")]),t._v(" 对象。")]),t._v(" "),s("p",[t._v("通过调用 "),s("strong",[t._v("ServletConfig")]),t._v(" 实例的 "),s("strong",[t._v("getServletContext()")]),t._v(" 方法，可以获得该 Servlet 所属的 WebApp 的 ServietContext 对象。")]),t._v(" "),s("p",[t._v("###0. 部署描述符")]),t._v(" "),s("p",[t._v("在 servlet 3.0 之前，不支持注解的形式来配置 servlet，而是在 "),s("code",[t._v("web.xml")]),t._v(" 中使用配置描述符。")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("HelloServlet"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("HelloServlet"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("init-param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("author"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("ben"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("init-param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("init-param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("email"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("hemiao3000@126.com"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("init-param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("HelloServlet"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("/HelloWorld/hello.do"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h2",{attrs:{id:"_2-配置-servlet-及其映射"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置-servlet-及其映射"}},[t._v("#")]),t._v(" 2. 配置 Servlet 及其映射")]),t._v(" "),s("p",[t._v("不同版本的 Sevlet 的 "),s("em",[s("code",[t._v("web.xml")])]),t._v(" 配置文件的头部信息是不一样的。不建议使用 Servlet 3.0 和 3.0 以下版本，太过于老旧了。建议使用 3.1 和 4.0 版本。")]),t._v(" "),s("blockquote",[s("p",[t._v("Tomcat 8 支持 Servlet 3.1；Tomcat 9 支持 Servlet 4.0。")])]),t._v(" "),s("h3",{attrs:{id:"老式配置-web-xml-配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#老式配置-web-xml-配置"}},[t._v("#")]),t._v(" 老式配置：web.xml 配置")]),t._v(" "),s("p",[t._v("Servlet 3.0 以下版本，配置 Servlet 及其映射关系，只能在 "),s("em",[s("strong",[t._v("web.xml")])]),t._v(" 中配置。")]),t._v(" "),s("p",[t._v("语法如下：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("字符串"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Servlet 类的完全限定名"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("字符串"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("url 匹配规则"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("配置一个 Servlet 需要出现一对 "),s("em",[s("code",[t._v("servlet")])]),t._v(" 和 "),s("em",[s("code",[t._v("servlet-mapping")])]),t._v("。简而言之，"),s("em",[s("code",[t._v("servlet")])]),t._v(" 和 "),s("em",[s("code",[t._v("servlet-mapping")])]),t._v(" 总是成对出现的。")]),t._v(" "),s("p",[t._v("配对的 "),s("em",[s("code",[t._v("servlet")])]),t._v(" 和 "),s("em",[s("code",[t._v("servelt-mapping")])]),t._v(" 中的 "),s("em",[s("code",[t._v("servlet-name")])]),t._v(" "),s("strong",[t._v("必须一样")]),t._v(" 。")]),t._v(" "),s("h3",{attrs:{id:"新式配置-注解配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新式配置-注解配置"}},[t._v("#")]),t._v(" 新式配置：注解配置")]),t._v(" "),s("p",[t._v("Servlet 3.0 开始支持注解配置。语法如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@WebServlet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("urlPatterns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url匹配规则"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XxxServlet")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServlet")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"url-匹配规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#url-匹配规则"}},[t._v("#")]),t._v(" URL 匹配规则")]),t._v(" "),s("h4",{attrs:{id:"首先需要明确几个容易混淆的规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#首先需要明确几个容易混淆的规则"}},[t._v("#")]),t._v(" 首先需要明确几个容易混淆的规则：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("servlet 容器中的匹配规则既不是简单的通配，也不是正则表达式，而是特定的规则。所以不要用通配符或者正则表达式的匹配规则来看待 servlet 的 "),s("em",[s("code",[t._v("url-pattern")])]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("Servlet 2.5 开始，一个 servlet 可以使用多个 url-pattern 规则，"),s("em",[s("code",[t._v("<servlet-mapping>")])]),t._v(" 标签声明了与该 servlet 相应的匹配规则，每个 "),s("em",[s("code",[t._v("<url-pattern>")])]),t._v(" 标签代表 1 个匹配规则；")])]),t._v(" "),s("li",[s("p",[t._v("当 servlet 容器接收到浏览器发起的一个 url 请求后，容器会用 url 减去当前应用的上下文路径，以剩余的字符串作为 servlet 映射，假如 url 是 "),s("em",[s("code",[t._v("http://localhost:8080/appDemo/index.html")])]),t._v("，其应用上下文是 appDemo，容器会将 "),s("em",[s("code",[t._v("http://localhost:8080/appDemo")])]),t._v(" 去掉，用剩下的 "),s("em",[s("code",[t._v("/index.html")])]),t._v(" 部分拿来做 servlet 的映射匹配")])]),t._v(" "),s("li",[s("p",[t._v("url-pattern 映射匹配过程是 "),s("strong",[t._v("有优先顺序")]),t._v(" 的，而且当有一个 servlet 匹配成功以后，就不会去理会剩下的 servlet了。")])])]),t._v(" "),s("h4",{attrs:{id:"精确匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#精确匹配"}},[t._v("#")]),t._v(" 精确匹配")]),t._v(" "),s("p",[t._v("精确匹配是优先级最高，最不会产生歧义的匹配。")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("..."),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("/user/users.html"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("/index.html"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("/user/addUser.action"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("当在浏览器中输入如下几种 url 时，都会被匹配到该 servlet")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("http://localhost:8080/appDemo/user/users.html\nhttp://localhost:8080/appDemo/index.html\nhttp://localhost:8080/appDemo/user/addUser.action\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[s("code",[t._v("http://localhost:8080/appDemo/user/addUser/")]),t._v("（最后有斜杠符）是非法的 url，不会被当作 "),s("code",[t._v("http://localhost:8081/appDemo/user/addUser")]),t._v("（最后没有斜杠府）识别。")])]),t._v(" "),s("p",[t._v("另外上述 url 后面可以跟任意的查询条件，都会被匹配，如")]),t._v(" "),s("p",[s("code",[t._v("http://localhost:8080/appDemo/user/addUser?username=Tom&age=23")]),t._v(" 会被匹配。")]),t._v(" "),s("h4",{attrs:{id:"路径匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路径匹配"}},[t._v("#")]),t._v(" 路径匹配")]),t._v(" "),s("p",[t._v("路径匹配的优先级仅次于精确匹配。")]),t._v(" "),s("p",[t._v("以 "),s("code",[t._v("/")]),t._v(" 字符开头，并以 "),s("code",[t._v("/*")]),t._v(" 结尾的字符串都表示是路径匹配。")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("..."),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("/user/*"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("上述规则表示 URL 以 "),s("code",[t._v("/user")]),t._v(" 开始，后面的路径可以任意。比如下面的 url 都会被匹配。")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("http://localhost:8080/appDemo/user/users.html\nhttp://localhost:8080/appDemo/user/addUser.action\nhttp://localhost:8080/appDemo/user/updateUser.do\n")])])]),s("h4",{attrs:{id:"扩展名匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展名匹配"}},[t._v("#")]),t._v(" 扩展名匹配")]),t._v(" "),s("p",[t._v("也叫 "),s("strong",[t._v("后缀匹配")]),t._v(" 。")]),t._v(" "),s("p",[t._v("以 "),s("code",[t._v("*.")]),t._v(" 开头的字符串被用于扩展名匹配")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("..."),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("*.jsp"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("*.action"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("则任何扩展名为 jsp 或 action 的 url 请求都会匹配，比如下面的 url 都会被匹配")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("http://localhost:8080/appDemo/user/users.jsp\nhttp://localhost:8080/appDemo/toHome.action\n")])])]),s("h4",{attrs:{id:"缺省匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺省匹配"}},[t._v("#")]),t._v(" 缺省匹配")]),t._v(" "),s("p",[t._v("缺省匹配也是“兜底”的匹配，一个 url 不符合精确匹配、路径匹配、扩展品匹配的任何一种情况，那么它所触发的 Servlet 就是由缺省匹配决定。")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("..."),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("/"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h4",{attrs:{id:"注意事项-1-匹配规则不能混用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项-1-匹配规则不能混用"}},[t._v("#")]),t._v(" 注意事项 1：匹配规则不能混用")]),t._v(" "),s("p",[t._v("匹配规则不是正则表达式规则，不要想当然的使用通配符：精确匹配、路径匹配、后缀匹配 三者 "),s("strong",[t._v("不能混用")]),t._v(" 。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("要么以 "),s("code",[t._v("/")]),t._v(" 开头，并以 "),s("code",[t._v("/*")]),t._v(" 结尾，表示路径匹配。")])]),t._v(" "),s("li",[s("p",[t._v("要么以 "),s("code",[t._v("*.")]),t._v(" 开头，表示后缀匹配。")])]),t._v(" "),s("li",[s("p",[t._v("要么就是精确匹配。")])])]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("<url-pattern>/user/*.action</url-pattern>")]),t._v(" 是非法的")])]),t._v(" "),s("p",[t._v("另外：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("<url-pattern>/aa/*/bb</url-pattern>")]),t._v(" 是合法的。是精确匹配，合法，")])]),t._v(" "),s("h4",{attrs:{id:"注意事项-2-和-含义并不相同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项-2-和-含义并不相同"}},[t._v("#")]),t._v(" 注意事项 2："),s("code",[t._v("/*")]),t._v(" 和 "),s("code",[t._v("/")]),t._v(" 含义并不相同")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("/*")])]),t._v(" 属于路径匹配，"),s("strong",[s("code",[t._v("/")])]),t._v(" 属于 default 匹配。"),s("code",[t._v(".jsp")]),t._v(" 的访问"),s("small",[t._v("（JSP Servlet）")]),t._v("的优先级刚好『卡』在它们俩的中间！")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("/*")])]),t._v(" 会拦截你对 .jsp 页面的访问，"),s("strong",[s("code",[t._v("/")])]),t._v(" 则不会。很多 404 错误均由此引起。")]),t._v(" "),s("p",[t._v("除非是真的需要，否则不要使用 "),s("code",[t._v("/*")]),t._v(" ！")]),t._v(" "),s("p",[t._v("除非是真的需要，否则不要使用 "),s("code",[t._v("/*")]),t._v(" ！")]),t._v(" "),s("p",[t._v("除非是真的需要，否则不要使用 "),s("code",[t._v("/*")]),t._v(" ！")]),t._v(" "),s("p",[t._v("从效果上看，"),s("code",[t._v("/*")]),t._v(" 和 "),s("code",[t._v("/")]),t._v(" 均会拦截对静态资源的访问请求，需要特别注意。")]),t._v(" "),s("h2",{attrs:{id:"_3-jsp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-jsp"}},[t._v("#")]),t._v(" 3. JSP")]),t._v(" "),s("p",[t._v("Servlet 有两个缺点无法克服：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("写在 Servlet 中的所有 HTML 标签必须包含 Java 字符串，这使得处理 HTTP 响应报文的工作十分繁琐。")])]),t._v(" "),s("li",[s("p",[t._v("所有的文本和 HTML 标记是硬编码的，这导致即使是表现层的微小变化，也需要重新编译代码。")])])]),t._v(" "),s("p",[t._v("JSP 技术解决了上述两个问题。")]),t._v(" "),s("h3",{attrs:{id:"jsp-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsp-概述"}},[t._v("#")]),t._v(" JSP 概述")]),t._v(" "),s("p",[t._v("JSP 页面本质上是一个 Servlet。当一个 JSP 页面第一次被请求时，容器（Tomcat）会将 JSP 页面转换成 Servlet 代码，如果转换成功，容器随后编译该 Servlet 类，并实例化该 Servlet 的对象，之后就是 Servlet 代码执行正常流程。")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v('<%@ page contentType="text/html;charset=UTF-8" language="java" %>\n<%@ page import="java.util.Date" %>\n<%@ page import="java.text.DateFormat" %>\n'),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Title"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v('\n\n<%\n    DateFormat dateFormat = DateFormat.getDateInstance(DateFormat.LONG);\n    String s = dateFormat.format(new Date());\n    out.println("Today is " + s);\n%>\n\n'),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("在 JSP 页面中可以使用 Java 代码来生成动态页面。Java 代码可以出现在 JSP 页面中的任何位置，并通过 "),s("code",[t._v("<%")]),t._v(" 和 "),s("code",[t._v("%>")]),t._v(" 包括起来。其次可以使用 "),s("code",[t._v("page")]),t._v(" 指令的 "),s("code",[t._v("import")]),t._v(" 属性导入在 JSP 页面中使用的 Java 类型。")]),t._v(" "),s("p",[t._v("<% ... %> 块被称为 "),s("strong",[t._v("scriplet")]),t._v(" 。")]),t._v(" "),s("p",[t._v("在 JSP 页面中，可以使用 HTML 注释，也可以使用 JSP 特有的注释，它以 "),s("code",[t._v("<%--")]),t._v(" 开始，以 "),s("code",[t._v("--%>")]),t._v(" 结束。")]),t._v(" "),s("h3",{attrs:{id:"隐式对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐式对象"}},[t._v("#")]),t._v(" 隐式对象")]),t._v(" "),s("p",[t._v("对于容器传入给 Servlet 的对象，在 JSP 中，可以通过 "),s("strong",[t._v("隐式对象")]),t._v(" 来访问。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("JSP隐式对象")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("类型")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("request")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("HttpServletRequest")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("response")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("HttpservletResponse")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("out")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("JspWriter")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("session")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("HttpSession")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("application")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("ServletContext")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("config")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("ServletConfig")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("pageContext")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("PageContext")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("page")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("HttpJspPage")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("exception")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Throwable")])])])]),t._v(" "),s("p",[t._v("pageContext 它提供了有用的上下文信息，并通过它的方法可以获得用各种 Servlet 对象。如："),s("code",[t._v("getRequest()")]),t._v("、"),s("code",[t._v("getResponse()")]),t._v("、"),s("code",[t._v("getServletContext()")]),t._v("、"),s("code",[t._v("getServletConfig()")]),t._v(" 和 "),s("code",[t._v("getSession()")]),t._v("。")]),t._v(" "),s("p",[t._v("此外，pageContext 中提供了另一组有趣/有用的方法：用于获取和设置"),s("strong",[t._v("属性")]),t._v("的方法，即 "),s("code",[t._v("getAttribute()")]),t._v(" 和 "),s("code",[t._v("setAttribute()")]),t._v(" 方法。属性值可以被存储于4个范围之一：页面（Page）、请求（Request）、会话（Session）和应用程序（Application）。")]),t._v(" "),s("p",[t._v("隐式对象 "),s("code",[t._v("out")]),t._v(" 引用了一个 JspWriter 对象，它相当于 Servlet 中通过 "),s("code",[t._v("response.getWriter()")]),t._v(" 方法获得的 PrintWriter 对象。")]),t._v(" "),s("h3",{attrs:{id:"指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指令"}},[t._v("#")]),t._v(" 指令")]),t._v(" "),s("p",[t._v("指令是 JSP 语法元素的第一种类型。它们指示 JSP 如何翻译为 Servlet 。JSP 2.2 中定义了多个指令，其中以 page 最为重要。")]),t._v(" "),s("p",[t._v("page 指令的语法如下 ：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v('<%@ page 属性1="值1" 属性2="值2" ... %>\n')])])]),s("p",[s("strong",[t._v("@")]),t._v(" 和 "),s("strong",[t._v("page")]),t._v(" 之间的空格不是必须的。"),s("strong",[t._v("page")]),t._v(" 指令的常用属性如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("指令")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("默认值")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("import")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义一个或多个页面中将被导入和使用的 java 类型。"),s("br"),t._v("如果需要同时导入多个 java 类型时，用 “,” 分隔。")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("默认值：无")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("session")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定本页面是否参与一个 HTTP 会话，"),s("br"),t._v("即，当前页面中 session 对象是否可用。")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("默认值："),s("code",[t._v("true")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("pageEncoding")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定本页面的字符编码")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("默认值是："),s("code",[t._v("ISO-8859-1")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("contentType")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义隐式对象 response 的内容内省")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("默认值："),s("code",[t._v("text/html")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("errorPage")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义当发生错误时用来处理错误/展现错误信息的页面")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("默认值：无")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("isErrorPage")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("标识本页面是否是一个处理错误/展现错误信息的页面")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("默认值：false")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("isELIgnored")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("配置是否在本页面中略 EL 表达式")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('默认值："fasle"')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("language")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义本页面中的脚本语言类型。")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("默认值：java，这也是 JSP 2.2 中唯一的选项。")])])])]),t._v(" "),s("h3",{attrs:{id:"脚本元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#脚本元素"}},[t._v("#")]),t._v(" 脚本元素")]),t._v(" "),s("p",[t._v("一个脚本程序是一个 Java 代码块，以 "),s("code",[t._v("<%")]),t._v(" 开始， 以 "),s("code",[t._v("%>")]),t._v(" 结束。")]),t._v(" "),s("blockquote",[s("p",[t._v("脚本元素是早期的 JSP 解决方案，随着技术的发展，在 JSP 页面中嵌入大段的 Java 代码表现出了很大的局限性，随之而来的替代方案是『"),s("strong",[t._v("表达式")]),t._v("』和『"),s("strong",[t._v("动作")]),t._v("』。而再往后，更新、更方便的『"),s("strong",[t._v("EL 表达式")]),t._v("』又进一步替代了『表达式』和『动作』。")])]),t._v(" "),s("p",[t._v("每个 "),s("strong",[t._v("表达式")]),t._v(" 都会被容器执行，并使用隐式对象 out 的打印方法输出结果。")]),t._v(" "),s("p",[t._v("表达式以 "),s("code",[t._v("<%=")]),t._v(" 开始，以 "),s("code",[t._v("%>")]),t._v(" 结束。"),s("code",[t._v("注意")]),t._v("，表达式必须无分号结尾。")]),t._v(" "),s("p",[t._v("在JSP页面中，可以 "),s("strong",[t._v("声明")]),t._v(" 能在JSP页面中使用的变量和方法。声明以 "),s("code",[t._v("<%!")]),t._v(" 开始，并以 "),s("code",[t._v("%>")]),t._v(" 结束。")]),t._v(" "),s("p",[t._v("在JSP页面中，一个生命可以出现在任何地方，并且一个页面可以有多个声明。")]),t._v(" "),s("h3",{attrs:{id:"动作-了解、自学"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动作-了解、自学"}},[t._v("#")]),t._v(" 动作（了解、自学）")]),t._v(" "),s("p",[t._v("『"),s("strong",[t._v("动作")]),t._v("』的目的是简化常见 scriplet 代码，将其“浓缩”成一个标签。它是早期用于分离表示层和业务层的手段，但随着其他技术的法阵（EL表达式），现在很少使用"),s("strong",[t._v("动作")]),t._v("了。")]),t._v(" "),s("p",[s("code",[t._v("<jsp:useBean>")]),t._v(" 本质上是创建一个Java对象，“变量名”为其id属性的值，变量类型为其class属性的值。该变量在当前JSP页面可用。")]),t._v(" "),s("p",[s("code",[t._v("<jsp:setProperty>")]),t._v(" 和 "),s("code",[t._v("<jsp:getProperty>")]),t._v(" 本质上就是调用已知对象的get/set方法，以为其设置属性值。被设置的变量由其name属性值决定，被设置的属性由其property属性决定。另外，"),s("code",[t._v("<jsp:setProperty>")]),t._v(" 还需要靠value属性值来决定设置的值。")]),t._v(" "),s("p",[s("code",[t._v('<jsp:include page="">')]),t._v(" 动作用来动态地引用另一个资源，“另一个资源”可以是另一个 JSP 页面，或一个静态的 HTML 页面。")]),t._v(" "),s("p",[t._v("通过其子元素 "),s("code",[t._v('<jsp:param name="" value="">')]),t._v(" 可以在引入另一个 JSP 页面时，向其传参。")]),t._v(" "),s("p",[s("code",[t._v('<jsp:forward page="">')]),t._v(" 将当前页转向其他资源。类似于"),s("code",[t._v("<jsp:include>")]),t._v("，通过其子元素 "),s("code",[t._v("<jsp:param>")]),t._v("可以向转向的页面传参。")]),t._v(" "),s("h2",{attrs:{id:"_4-servlet-版本和-web-xml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-servlet-版本和-web-xml"}},[t._v("#")]),t._v(" 4. Servlet 版本和 web.xml")]),t._v(" "),s("h3",{attrs:{id:"servlet-的版本和对应的-tomcat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#servlet-的版本和对应的-tomcat"}},[t._v("#")]),t._v(" Servlet 的版本和对应的 Tomcat")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("Tomcat 版本")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Servlet 版本")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("JSP 版本")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("EL 版本")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("WebSocket 版本")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("9.0.x")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("4.0")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("2.4")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("3.1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("1.2")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("8.0.x")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("3.1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("2.3")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("3.0")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("1.1")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("7.0.x")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("3.0")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("2.2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("2.2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("1.1")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("6.0.x")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("2.5")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("2.1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("2.1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("N/A")])])])]),t._v(" "),s("p",[t._v("不同的 Servelt 版本会影响到 "),s("strong",[s("code",[t._v("web.xml")])]),t._v(" 配置文件中的头部的声明。越高版本的 Servlet 功能越丰富也越强大。")]),t._v(" "),s("h3",{attrs:{id:"不同版本的-web-xml-声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不同版本的-web-xml-声明"}},[t._v("#")]),t._v(" 不同版本的 web.xml 声明")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Servlet 3.1")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token prolog"}},[t._v('<?xml version="1.0" encoding="UTF-8"?>')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("web-app")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("xmlns")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://xmlns.jcp.org/xml/ns/javaee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("xmlns:")]),t._v("xsi")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://www.w3.org/2001/XMLSchema-instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("xsi:")]),t._v("schemaLocation")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://xmlns.jcp.org/xml/ns/javaee\n  http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("3.1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      \n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("display-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Servlet 3.1 Web Application"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("display-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("web-app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Servlet 4.0")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token prolog"}},[t._v('<?xml version="1.0" encoding="UTF-8"?>')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("web-app")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("xmlns")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://xmlns.jcp.org/xml/ns/javaee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("xmlns:")]),t._v("xsi")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://www.w3.org/2001/XMLSchema-instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("xsi:")]),t._v("schemaLocation")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://xmlns.jcp.org/xml/ns/javaee  \n  http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("4.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      \n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("display-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Servlet 4.0 Web Application"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("display-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("web-app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);