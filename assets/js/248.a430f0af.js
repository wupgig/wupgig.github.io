(window.webpackJsonp=window.webpackJsonp||[]).push([[248],{617:function(t,s,a){"use strict";a.r(s);var e=a(47),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"java-web-高级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-web-高级"}},[t._v("#")]),t._v(" Java Web 高级")]),t._v(" "),a("h2",{attrs:{id:"_1-javaweb-中的静态资源访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-javaweb-中的静态资源访问"}},[t._v("#")]),t._v(" 1. JavaWeb 中的静态资源访问")]),t._v(" "),a("h3",{attrs:{id:"tomcat-中的两个默认-servlet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tomcat-中的两个默认-servlet"}},[t._v("#")]),t._v(" Tomcat 中的两个默认 Servlet")]),t._v(" "),a("p",[t._v("Tomcat 有两个默认的 Servlet，你的 Web 项目会【无意中】用到它们。JSPServlet 和 DefaultServlet 。")]),t._v(" "),a("p",[t._v("JSPServlet 用于响应 "),a("code",[t._v(".jsp")]),t._v(" 请求；DefaultServlet 则是默认的【兜底】的 Servlet 。")]),t._v(" "),a("h4",{attrs:{id:"jspservlet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jspservlet"}},[t._v("#")]),t._v(" JSPServlet")]),t._v(" "),a("p",[t._v("其实 JSPServlet 并非一个，应该是整个项目有多少个 JSP 页面，就会有对应的多少个 JSPServlet 。")]),t._v(" "),a("p",[t._v("JSPServlet 的工作大家都很清楚了，它涉及到 "),a("code",[t._v(".jsp")]),t._v(" 文件的工作原理。")]),t._v(" "),a("p",[t._v("当你第一次访问一个 "),a("code",[t._v(".jsp")]),t._v(" 页面时，Tomcat 会根据你的 jsp 页面【帮】你写一个 Servlet，即此处的 JSPServlet 。")]),t._v(" "),a("p",[t._v("访问 jsp 页面最终触发的是这个 Servlet 的执行。在这个 Servlet 中会生成一个页面的内容（html格式字符串），并发回给客户端浏览器。")]),t._v(" "),a("h4",{attrs:{id:"defaultservlet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#defaultservlet"}},[t._v("#")]),t._v(" DefaultServlet")]),t._v(" "),a("p",[t._v("DefaultServlet 是 Tomcat 提供的默认的【兜底】的 Servlet，相当于它的 "),a("code",[t._v("<urlpattern>")]),t._v(" 配置的是 "),a("code",[t._v("/")]),t._v(" 。")]),t._v(" "),a("p",[t._v("DefaultServlet 中的 doPost 方法交由 doGet 方法进行处理。而 doGet 方法兜兜转转最后执行了一个 copy 方法，在 copy 方法中把找到静态资源文件，将其内容读出并写入 Response 对象的输出流，这样你的浏览器就看到静态数据了。")]),t._v(" "),a("h4",{attrs:{id:"配置引起的-bug"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置引起的-bug"}},[t._v("#")]),t._v(" 配置引起的 bug")]),t._v(" "),a("p",[t._v("结合我们自定义的 Servlet，和 JSPServlet、DefaultServlet，会让初学者造成一些不知所以的 bug ：")]),t._v(" "),a("h5",{attrs:{id:"情况一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#情况一"}},[t._v("#")]),t._v(" 情况一")]),t._v(" "),a("p",[t._v("将 HelloServlet 的 urlpattern 配置为 "),a("code",[t._v("*.do")]),t._v("，此时项目中的各个 Servlet 的分工如下：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Tomcat 默认的 JSPServlet 负责响应 "),a("code",[t._v(".jsp")]),t._v(" 请求。")])]),t._v(" "),a("li",[a("p",[t._v("我们自己的 HelloServlet 负责响应 "),a("code",[t._v(".do")]),t._v(" 请求。")])]),t._v(" "),a("li",[a("p",[t._v("凡是没有 Servlet 响应的请求，都被【漏给】DefaultServlet 处理。")])])]),t._v(" "),a("h5",{attrs:{id:"情况二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#情况二"}},[t._v("#")]),t._v(" 情况二")]),t._v(" "),a("p",[t._v("将 HelloServlet 的 urlpattern 配置为 "),a("code",[t._v("/")]),t._v("，此时项目中的各个 Servlet 的分工如下：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Tomcat 默认 JSPServlet 负责响应 "),a("code",[t._v(".jsp")]),t._v(" 请求。")])]),t._v(" "),a("li",[a("p",[t._v("HelloServlet 负责响应所有的其它请求。")])])]),t._v(" "),a("p",[t._v("注意，你的 HelloServlet 就替代了 Tomcat 默认的 DefaultServlet 在做【兜底】的工作。")]),t._v(" "),a("p",[a("strong",[t._v("此时，你就无法访问静态资源！")]),t._v("除非你的 HelloServlet 实现了 Tomcat 的 DefaultServlet 同样的功能。")]),t._v(" "),a("h5",{attrs:{id:"情况三"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#情况三"}},[t._v("#")]),t._v(" 情况三")]),t._v(" "),a("p",[t._v("将 HelloServlet 的 urlpattern 配置为 "),a("code",[t._v("/*")]),t._v("，此时项目中的各个 Servlet 的分工如下：")]),t._v(" "),a("p",[a("strong",[t._v("所有的请求都由你的 HelloServlet 处理")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("/*")]),t._v(" 是路径匹配，它的优先级高于 "),a("code",[t._v(".jsp")]),t._v("。所以当用户输入 "),a("code",[t._v("xxx.jsp")]),t._v(" 时，是 HelloServlet【先】响应了这个请求，轮不到 Tomcat 的 JSPServlet 来响应这个 "),a("code",[t._v(".jsp")]),t._v(" 请求。")]),t._v(" "),a("p",[t._v("此时，在静态资源无法访问的基础上，jsp 也无法访问了。")]),t._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("逻辑上，用户所访问的资源分为 3 种：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Servlet")])]),t._v(" "),a("li",[a("p",[t._v("JSP")])]),t._v(" "),a("li",[a("p",[t._v("静态资源（例如：html、css、js、png 等）")])])]),t._v(" "),a("p",[t._v("Tomcat 判断请求的资源的类型，也是按照上述顺序在判断：先判断是否是请求 Servlet（"),a("code",[t._v(".do")]),t._v(" 请求），再判断是否是 JSP（"),a("code",[t._v(".jsp")]),t._v(" 请求）。要是都不是，那么就是静态资源（"),a("code",[t._v(".png")]),t._v(" 等请求）。")]),t._v(" "),a("p",[t._v("通过配置，进行合理安排，我们应该/预期达到如下效果：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("对于 Servlet 的请求的处理，由我们自定义的 "),a("em",[a("strong",[a("code",[t._v("Servlet")])])]),t._v(" 进行处理。")])]),t._v(" "),a("li",[a("p",[t._v("对于 JSP 的请求的处理，由 Tomcat 中的 "),a("em",[a("strong",[a("code",[t._v("JspServlet")])])]),t._v(" 自动处理。")])]),t._v(" "),a("li",[a("p",[t._v("对于 "),a("strong",[t._v("静态资源")]),t._v(" 的处理，由 Tomcat 中的 "),a("em",[a("strong",[a("code",[t._v("DefaultServlet")])])]),t._v(" 自动处理。")])])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("从本质上来讲，DefaultServlet "),a("strong",[t._v("并不是")]),t._v("『专门』处理静态资源的工具。而是说，既不是由我们自定义的 Servlet 处理的资源，又不是由 JspServlet 处理的资源，最后统统都交由 DefaultServlet 处理。")])]),t._v(" "),a("p",[t._v("DefaultServlet 作为『兜底』的 Servlet ，它的 url-pattern 是 "),a("code",[t._v("/")]),t._v(" ，注意，并非 "),a("code",[t._v("/*")]),t._v(" 。")]),t._v(" "),a("p",[t._v("毫无疑问，"),a("em",[a("code",[t._v("web.xml")])]),t._v(" 中 "),a("strong",[t._v("不需要")]),t._v(" 显示地配置 DefaultServlet（否则，它也就不会叫 Default Servlet 了）。")]),t._v(" "),a("p",[t._v("同样的道理，其实我们也从未在（也不需要在） "),a("em",[a("code",[t._v("web.xml")])]),t._v(" 中显示地配置过 JspServlet 。")]),t._v(" "),a("h3",{attrs:{id:"如何允许静态资源访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何允许静态资源访问"}},[t._v("#")]),t._v(" 如何允许静态资源访问")]),t._v(" "),a("p",[t._v("当要访问静态资源时，可以在 "),a("em",[a("code",[t._v("web.xml")])]),t._v(" 中明确指定什么样的请求（即对静态资源的请求）交由 "),a("strong",[t._v("DefaultServlet")]),t._v(" 进行处理（逻辑上，以下配置也可以省略不写，默认既是如此）：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-mapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("default"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 在默认的配置中，DefaultSevlet 的 servelt-name 就是叫 default --\x3e")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("*.html"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("*.css"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("*.js"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("*.jpg"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("*.png"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-mapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("WEB-INF")]),t._v(" 目录下内容不允许直接公共访问，所以静态资源通常是放到与 "),a("code",[t._v("WEB-INF")]),t._v(" 同级的目录下面。")]),t._v(" "),a("li",[t._v("如果是 SpringMVC 项目，对于静态资源的访问有其他的操作。")])])]),t._v(" "),a("h2",{attrs:{id:"_2-过滤器-filter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-过滤器-filter"}},[t._v("#")]),t._v(" 2. 过滤器（Filter）")]),t._v(" "),a("h3",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),a("p",[t._v("过滤器（Filter）是拦截 Request 请求的对象：在用户的请求访问资源前处理 ServletRequest 和 ServletResponse 。")]),t._v(" "),a("p",[t._v("Filter 相关的接口有：Filter、FilterConfig、FilterChain 。")]),t._v(" "),a("p",[t._v("Filter 的实现必须实现 Filter 接口。这个接口包含了 Filter 的3个生命周期方法："),a("code",[t._v("init()")]),t._v("、"),a("code",[t._v("doFilter()")]),t._v("、"),a("code",[t._v("destroy()")]),t._v(" 。")]),t._v(" "),a("p",[t._v("Servlet 容器（Tomcat）初始化Filter时，会触发 Filter 的 "),a("code",[t._v("init()")]),t._v(" 方法，一般来说是在应用开始时（注意，不是第一次使用时）。这个方法只会被调用一次。")]),t._v(" "),a("p",[t._v("FilterConfig 对象由 Servlet 容器传入 "),a("code",[t._v("init()")]),t._v(" 方法中。")]),t._v(" "),a("p",[t._v("当 Servlet 容器每次处理 Filter 相关的资源时，都会调用该 Filter 实例的 "),a("code",[t._v("doFilter()")]),t._v(" 方法。就像容器调用 Serviet 的 "),a("code",[t._v("service()")]),t._v(" 方法。")]),t._v(" "),a("p",[t._v("在 Filter 的 "),a("code",[t._v("doFilter()")]),t._v(" 方法中，最后一行需要调用 FilterChain 中的 "),a("code",[t._v("doChain()")]),t._v(" 方法。注意，FilterChain 是 "),a("code",[t._v("doFilter()")]),t._v(" 方法的第三个参数。")]),t._v(" "),a("p",[t._v("一个 URL 资源可能被多个 Filter 关联（即一条 Filter 链），这时 "),a("code",[t._v("Filter.doFilter()")]),t._v(" 的方法将触发 Filter 链中下一个 Filter。只有在 Filter 链中最后一个 Filter 里调用 "),a("code",[t._v("doFilter()")]),t._v(" 方法，才会触发 Controller 中处理 URL 资源的方法。")]),t._v(" "),a("p",[t._v("如果在 Filter 的 "),a("code",[t._v("doFilter()")]),t._v(" 方法中，因为故意（或无意）没有调用 FilterChain 的 "),a("code",[t._v("doFilter()")]),t._v(" 方法，那么这个 Request 请求将终止，后面的处理就会中断。")]),t._v(" "),a("p",[a("code",[t._v("注意")]),t._v("，FilterChain 接口中，唯一的方法就是 "),a("code",[t._v("doFilter()")]),t._v(" 方法，它和 Filter 接口中的 "),a("code",[t._v("doFilter()")]),t._v(" 方法定义是不一样的。")]),t._v(" "),a("p",[t._v("Filter 接口中，最后一个方法是 "),a("code",[t._v("destroy()")]),t._v("，该方法在 Servlet 容器要销毁 Filter 时触发。")]),t._v(" "),a("p",[t._v("类似于 Servlet，Filter 也是单例。")]),t._v(" "),a("h3",{attrs:{id:"filter-的配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filter-的配置"}},[t._v("#")]),t._v(" Filter 的配置")]),t._v(" "),a("p",[t._v("和 Servlet 的配置非常相似，Filter 的配置主要有三方面：")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("确认哪些资源需要本 Filter 进行拦截处理。")]),t._v(" "),a("li",[t._v("配置 Filter 的初始化参数和值，这些参数在 Filter 的 "),a("code",[t._v("init()")]),t._v(" 方法中可以读取到。")]),t._v(" "),a("li",[t._v("给 Filter 取一个名称（一般来说这个配置是不需要的）。在一些特殊的情况下，系统通过这个名字来识别Filter。")])])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@WebFilter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filterName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"firstFilter"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            urlPatterns "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            initParams "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@WebInitParam")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@WebInitParam")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FirstFilter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Filter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("firstFilter"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.hemiao.filter.FirstFilter"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("init-param")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("author"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("ben"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("init-param")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("init-param")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("email"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("hemiao3000@126.com"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("init-param")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-mapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("firstFilter"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("/*"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-mapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h2",{attrs:{id:"_3-文件上传与下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-文件上传与下载"}},[t._v("#")]),t._v(" 3. 文件上传与下载")]),t._v(" "),a("h3",{attrs:{id:"文件上传"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件上传"}},[t._v("#")]),t._v(" 文件上传")]),t._v(" "),a("p",[t._v("为了能上传文件，必须将表单的 "),a("code",[t._v("method")]),t._v(" 设置为 "),a("code",[t._v("POST")]),t._v("，并将 "),a("code",[t._v("enctype")]),t._v(" 设置为 "),a("code",[t._v("multipart/form-data")]),t._v(" 。")]),t._v(" "),a("p",[t._v("有两种实现文件上传的方式：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("底层使用 Apache Commons FileUpload 包")])]),t._v(" "),a("li",[a("p",[t._v("底层使用 Servlet 3.1 内置的文件上传功能")])])]),t._v(" "),a("p",[t._v("无论是哪种方式，其使用方式都是一样的，将 file 类型的请求参数绑定到请求处理方法的特定类型的参数上：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("CommonsMultipartFile（commons-fileupload）")])]),t._v(" "),a("li",[a("p",[t._v("MultipartFile（Servlet 3.1）")])])]),t._v(" "),a("h4",{attrs:{id:"web-3-0-的文件上传"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-3-0-的文件上传"}},[t._v("#")]),t._v(" Web 3.0 的文件上传")]),t._v(" "),a("p",[t._v("普通的表单（form）元素无法直接上传文件，必须通过“特殊处理”。")]),t._v(" "),a("p",[t._v("对上传文件功能而言，有些特殊的地方：")]),t._v(" "),a("ul",[a("li",[t._v("form 表单内，要添加控件 "),a("code",[t._v('<input type="file" name="myfile">')])]),t._v(" "),a("li",[t._v("form 表单的提交方式必须是 post 方式")]),t._v(" "),a("li",[t._v("form 表单的内容格式要定义成 "),a("strong",[t._v("multipart/form-data")]),t._v(" 格式")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("form")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("action")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("post"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("enctype")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("multipart/form-data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  ...\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("form")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[a("code",[t._v('enctype="multipart/form-data"')]),t._v(" 表示表单元素中的 input 数据以二进制的方式发送到服务端。此时如果是普通的 input 数据，无法像之前一样从 request 中直接获得。")]),t._v(" "),a("p",[t._v("对于上传文件的的大小问题，惯例是：")]),t._v(" "),a("ul",[a("li",[t._v("足够小的文件，先接收到内存中，最后写入磁盘。")]),t._v(" "),a("li",[t._v("稍大的文件，写入磁盘临时文件，最后写入最终目的地。")]),t._v(" "),a("li",[t._v("大型文件，禁止上传。")])]),t._v(" "),a("p",[t._v("在 Web 3.0 之前 使用 "),a("strong",[t._v("commons-fileupload")]),t._v(" 库是最常见的上传办法。当 Servlet 的设计者意识到文件上传的重要性后，在 Web 3.0 中它就成了一项内置的特性。")]),t._v(" "),a("p",[t._v("Web 3.0 中的文件上传主要围绕着 "),a("strong",[t._v("MultipartConfig")]),t._v(" 注解和 "),a("strong",[t._v("Part")]),t._v(" 接口。")]),t._v(" "),a("h5",{attrs:{id:"multipartconfig-注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multipartconfig-注解"}},[t._v("#")]),t._v(" @MultipartConfig 注解")]),t._v(" "),a("dl",[a("dt",[t._v("fileSizeThreshold "),a("small",[t._v("可选属性")])]),t._v(" "),a("dd",[t._v("超过该值大小的文件，在上传过程中，将被写入磁盘临时文件，而不是保存在内存中。")])]),t._v(" "),a("dl",[a("dt",[t._v("maxFileSize "),a("small",[t._v("可选属性")])]),t._v(" "),a("dd",[t._v("每个上传文件的大小上限。")])]),t._v(" "),a("dl",[a("dt",[t._v("maxRequestSize "),a("small",[t._v("可选属性")])]),t._v(" "),a("dd",[t._v("一次请求（可能包含多个上传）的大小上限。")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@WebServlet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("urlPatterns"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello.do"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@MultipartConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("maxFileSize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloServlet")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServlet")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h5",{attrs:{id:"part-接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#part-接口"}},[t._v("#")]),t._v(" Part 接口")]),t._v(" "),a("p",[t._v("在一个表单（Form）中，无论是否有文件上传控件，Servlet 3.0 都会将这些表单控件对应成代码中的一个 Part 对象。")]),t._v(" "),a("p",[t._v("通过 request 对象的 "),a("em",[a("code",[t._v(".getParts()")])]),t._v(" 方法可以获得所有的这些 Part 对象。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collection")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Part")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" parts "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getParts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("在一个或多个部分组成的请求中，每一个表单域（包括非文本域），都将被转换成一个 Part 。")]),t._v(" "),a("p",[t._v("普通文本域和文件上传域的区别在于，其 Part 对象的 "),a("em",[a("code",[t._v(".getContentType()")])]),t._v(" 方法返回值的不同。对于普通文本域的 Part 对象而言，该方法返回 null 。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Part")]),t._v(" part "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" parts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("part"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContentType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"普通文本域"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"文件上传域"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("补充，如果是要获取普通文本域的值，其实直接使用正常 request.getParameter() 就行。")]),t._v(" "),a("p",[t._v("每一个 Part 分为“头”和“体”两部分。普通文本域只有头部，而文件上传域则有头有体。")]),t._v(" "),a("p",[t._v("普通文本域的头部形式为：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('content-disposition:form-data; name="域名"\n')])])]),a("p",[t._v("上传文本域的头部形式为：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('content-type:内容类型\ncontent-disposition:form-data; name="域名"; filename="文件名"\n')])])]),a("p",[t._v("对我们而言，需要的是文本上传域中的 content-disposition 中的 filename 部分。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" header "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" part"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"content-disposition"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 内容为 form-data; name="域名"; filename="文件名"')]),t._v("\n")])])]),a("p",[t._v("通常会使用工具类，将 content-disposition 中的 filename 中的值截取出来。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFileName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"; "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" item "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" cur "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// System.out.println("debug: " + cur);')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cur"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("startsWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"filename="')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            item "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\"'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" end "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lastIndexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\"'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" filename "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// System.out.println(filename);")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Part 对象直接提供了方法将上传文件的内容写入盘：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" savePath "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getServletContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRealPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/WEB-INF/uploadFile/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" filePathName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" savePath "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("separator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" fileName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 目标文件路径名")]),t._v("\npart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filePathName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把文件写到指定路径")]),t._v("\n")])])]),a("p",[t._v("Part的其它常用方法")]),t._v(" "),a("dl",[a("dt",[a("code",[t._v("getContentType()")]),t._v(" 方法")]),t._v(" "),a("dd",[t._v("获得Part的内容类型。如果Part是普通文本，那么返回null。")]),t._v(" "),a("dd",[t._v("该方法可以用于区别是普通文本域，还是文件上传域。")])]),t._v(" "),a("dl",[a("dt",[a("code",[t._v("getHeader()")]),t._v(" 方法")]),t._v(" "),a("dd",[t._v("该方法用于获取指定的标头的值。")]),t._v(" "),a("dd",[t._v("对于上传文本域的 Part，该参数有 "),a("code",[t._v("content-type")]),t._v(" 和"),a("code",[t._v("content-disposition")])]),t._v(" "),a("dd",[t._v("对于普通文本域，则只有 "),a("code",[t._v("content-disposition")]),t._v(" 一种。")])]),t._v(" "),a("dl",[a("dt",[a("code",[t._v("getName()")]),t._v(" 方法")]),t._v(" "),a("dd",[t._v("无论是普通文本域Part，还是文件上传域Part，都是获得域名值。")])]),t._v(" "),a("dl",[a("dt",[a("code",[t._v("write()")]),t._v(" 方法")]),t._v(" "),a("dd",[t._v("将上传文件写入磁盘中。")])]),t._v(" "),a("dl",[a("dt",[a("code",[t._v("delete()")]),t._v(" 方法")]),t._v(" "),a("dd",[t._v("手动删除临时文件")])]),t._v(" "),a("dl",[a("dt",[a("code",[t._v("getInputStream()")]),t._v(" 方法")]),t._v(" "),a("dd",[t._v("以InputStream形式返回上传文件的内容。")])]),t._v(" "),a("h4",{attrs:{id:"利用-commons-fileupload-文件上传"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#利用-commons-fileupload-文件上传"}},[t._v("#")]),t._v(" 利用 commons-fileupload 文件上传")]),t._v(" "),a("p",[t._v("利用 commons-fileupload 文件上传需要利用引入 commons-fileupload 包（它依赖于 commons-io 包）")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("commons-fileupload"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("commons-fileupload"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1.4"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("作为 Servlet 内置上传功能之前的【准标准】，Servlet 在引入内置上传功能时借鉴了 commons-fileupload 的实现方式。因此，在了解 Servlet 内置上传功能之后，再回头看 commons-fileupload 文件上传时，你会发现它们的基本逻辑/大道理时一样的，只不过 commons-fileupload 的实现会罗嗦一些")]),t._v(" "),a("p",[t._v("在 Servlet 内置的上传功能中，从 request 中获得的是一个 "),a("code",[t._v("Part[]")]),t._v("，其中的每一个 Part 对象对应着表单中的一个表单域（Form Field）。而 commons-fileupload 中我们从 request 中获得的是一个 "),a("code",[t._v("List<FileItem>")]),t._v("，commons-fileupload 中使用 FileItem 来对应每一个表单域，起到和 Part 一样的作用。")]),t._v(" "),a("p",[t._v("commons-fileupload 的罗嗦体现在以下几个方面：")]),t._v(" "),a("ul",[a("li",[t._v("commons-fileupload 不能对 Servlet 使用注解，因此相关的上传配置需要通过编码实现。")]),t._v(" "),a("li",[t._v("commons-fileupload 不能使用 "),a("em",[a("code",[t._v("request.getParameter()")])])])]),t._v(" "),a("p",[t._v("为了能够从 request 中获得 "),a("em",[a("code",[t._v("List<FileItem>")])]),t._v("，你需要两个对象：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建上传所需要的两个对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DiskFileItemFactory")]),t._v(" factory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DiskFileItemFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 磁盘文件对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletFileUpload")]),t._v(" sfu "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletFileUpload")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 文件上传对象")]),t._v("\n")])])]),a("p",[t._v("如果不做出设置，那么相关设置则采用默认值。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置上传过程中所收到的数据是【存内存】还是【存磁盘】的阈值")]),t._v("\nfactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSizeThreshold")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置磁盘临时文件的保存目录")]),t._v("\nfactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRepository")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"D:/upload"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置解析文件上传中的文件名的编码格式，解决上传文件名中文乱码问题")]),t._v("\nsfu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeaderEncoding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf-8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 限制单个文件的大小")]),t._v("\nsfu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setFileSizeMax")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 限制上传的总文件大小")]),t._v("\nsfu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSizeMax")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("在创建文件上传对象（并作出相应设置）之后，我们可以通过它从 request 中获取我们所需要的 "),a("code",[t._v("List<FileItem>")]),t._v(" 。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileItem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sfu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("FileItem 自带了方法，可以判断当前的 FileItem 对应的是页面上的普通文本域，还是文件上传域：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileItem")]),t._v(" item "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFormField")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"普通文本域"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    \n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"文件上传域"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("由于 commons-fileupload 中无法使用 "),a("em",[a("code",[t._v("request.getParameter()")])]),t._v("，因此，为了获得普通文本域中的数据，需要使用 FileItem 自己的方法：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileItem")]),t._v(" item "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFormField")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" fieldName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFieldName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例如：username / password")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" fieldValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例如，tom / 123456")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fieldName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" fieldValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    \n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"文件上传域"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("由于 commons-fileupload 引用了 commons-io，所以，将上传的文件内容写入磁盘倒是十分简单：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileItem")]),t._v(" item "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFormField")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    \n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"文件上传域"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建输出文件")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取上传文件的名字")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" outPath "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"D:/upload/"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),t._v(" output "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("outPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得上传文件字节流")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStream")]),t._v(" input "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInputStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 IOUtils 工具将输入流中的数据写入到输出流。")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("copy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"上传成功！保存的路径为："')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" outPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭输入流")]),t._v("\n        output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭输出流")]),t._v("\n        item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除处理文件上传时生成的临时文件")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"文件下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件下载"}},[t._v("#")]),t._v(" 文件下载")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("内容类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("文件扩展名")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("text/plain")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("txt")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("文本文件（包括但不仅包括txt）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("application/msword")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("doc")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Microsoft Word")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("application/pdf")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("pdf")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Adobe Acrobat")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("application/zip")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("zip")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("winzip")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("audio/mpeg")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("mp3")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("mp3 音频文件")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("image/gif")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("gif")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("COMPUSERVE GIF 图像")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("image/jpeg")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("jpeg jpg")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("JPEG 图像")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("image/png")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("png")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("PNG 图像")])])])]),t._v(" "),a("p",[t._v("详细 MIME 参见 "),a("a",{attrs:{href:"http://www.w3school.com.cn/media/media_mimeref.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("网址"),a("OutboundLink")],1),t._v(" 。")]),t._v(" "),a("p",[t._v("相对于上传而言，下载文件较为简单，只需要完成两步：")]),t._v(" "),a("ol",[a("li",[t._v("设置响应的内容类型。")]),t._v(" "),a("li",[t._v("添加一个 "),a("code",[t._v("content-disposition")]),t._v(" 到响应标头（"),a("code",[t._v("addHeader()")]),t._v("方法)，其值为："),a("code",[t._v("attachment; filename=文件名")])]),t._v(" "),a("li",[t._v("通过 resp 对象获得输出流，将文件内容发送至客户端。")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("resp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setContentType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/plain"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// step 1")]),t._v("\nresp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"content-disposition"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"attachment;filename="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URLEncoder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("encode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"D:/note.txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// step 2")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStream")]),t._v(" is "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"D:/note.txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutputStream")]),t._v(" out "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" resp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOutputStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" buffer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" is"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// step 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"下载成功"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_4-cookies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-cookies"}},[t._v("#")]),t._v(" 4. Cookies")]),t._v(" "),a("p",[t._v("Cookie 本质上是一个小文件，由浏览器创建/管理，保存在浏览器本地，即用户自己的电脑上。")]),t._v(" "),a("p",[t._v("当你访问一个网站/网址时，浏览器会“帮”你将这个文件的内容发送至服务端"),a("small",[t._v("（Tomcat）")]),t._v("。这个小文件的内容都是“名值（name-value）对”。只有浏览器本地有这个网站/网址的相关 Cookie（小文件），浏览器『"),a("strong",[t._v("一定")]),t._v("』会把它的内容“帮”你发送到服务端。这个过程无需程序员参与，不受程序员的控制。")]),t._v(" "),a("p",[t._v("浏览器“帮”你发送的 Cookie，可能不止一个。服务端获得浏览器发送来的所有 Cookie 的方法是通过 request 对象的 "),a("code",[t._v("getCookies()")]),t._v("。")]),t._v(" "),a("p",[t._v("Cookie"),a("small",[t._v("（小文件）")]),t._v("是由浏览器在本地创建，但是，它是由服务端“通知/要求”浏览器去创建时，才会创建的。")]),t._v(" "),a("p",[t._v("浏览器通常支持每个网站 20 个 cookies 。")]),t._v(" "),a("p",[a("code",[t._v("注意")]),t._v("，cookie 中不能直接存放中文，所以需要做相应的处理。常见处理办法是使用 URLEncoder 和 URLDecoder 将中文字符串编码/解码成URL格式编码字符串。")]),t._v(" "),a("p",[t._v("可以通过传递 name 和 value 两个参数给Cookie类的构造函数来创建一个 cookie。在创建完 cookie 之后，可以设置它的 "),a("code",[t._v("maxAge")]),t._v(" 属性，这个属性决定了cookie 何时过期（单位为秒）。")]),t._v(" "),a("p",[t._v("要将 cookie 发送到浏览器，需要调用 HttpServletResponse 的 "),a("code",[t._v("add()")]),t._v(" 方法。")]),t._v(" "),a("p",[t._v("服务器若要读取浏览器提交的 cookie，可以通过  HttpServletRequest 接口的 "),a("code",[t._v("getCookie()")]),t._v(" 方法，该方法返回一个 Cookie 数组，若没有 cookies 则返回 null 。你需要遍历整个数组来查询某个特定名称的 cookie 。")]),t._v(" "),a("p",[t._v("注意，并没有一个直接的方法来删除一个 cookie，你只能创建一个同名的 cookie，并将 "),a("code",[t._v("maxAge")]),t._v(" 设置为 0，并添加到 HttpServletResponse 中来“覆盖”原来的那个 cookie 。")]),t._v(" "),a("p",[t._v("Cookie 最大的问题在于用户可以通过设置禁用浏览器的 cookie 功能。")]),t._v(" "),a("h2",{attrs:{id:"_5-监听器-listener"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-监听器-listener"}},[t._v("#")]),t._v(" 5. 监听器（Listener）")]),t._v(" "),a("p",[t._v("为了能够在 Servlet/JSP 应用程序中进行事件驱动编程"),a("small",[t._v("（Event-Driven Programming）")]),t._v("，Servlet API 提供了一整套事件类和监听器接口。所以事件类均源自 java.util.Event，并且监听器在以下三个不同级别中均可使用：ServeletContext、HttpSession 及 ServletRequest 。")]),t._v(" "),a("h3",{attrs:{id:"监听器接口和注册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#监听器接口和注册"}},[t._v("#")]),t._v(" 监听器接口和注册")]),t._v(" "),a("p",[t._v("创建监听器时，只要创建一个实现相关接口的 Java 类即可。在 Servlet 3.0 中，监听器有 2 种方法，以便 Servlet 容器能够认出来。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("使用 @WebListener 注解")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@WebListener")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" 自定义监听器 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" 监听器接口 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("在部署描述符"),a("small",[t._v("（web.xml）")]),t._v("使用一个 <listener> 元素：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("listener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("listener-class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("自定义监听器"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("listener-class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("listener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])]),t._v(" "),a("p",[t._v("在应用程序中可以想要多少个监听器就可以有多少个监听器。注意，"),a("strong",[t._v("对监听器方法的调用时同步进行的。")])]),t._v(" "),a("h3",{attrs:{id:"servelt-context-监听器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#servelt-context-监听器"}},[t._v("#")]),t._v(" Servelt Context 监听器")]),t._v(" "),a("p",[t._v("在 ServletContext 级别上有 2 个监听器接口：")]),t._v(" "),a("ul",[a("li",[t._v("ServletContextListener")]),t._v(" "),a("li",[t._v("ServletContextAttributeListener")])]),t._v(" "),a("h4",{attrs:{id:"servletcontextlistener"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#servletcontextlistener"}},[t._v("#")]),t._v(" ServletContextListener")]),t._v(" "),a("p",[t._v("ServletContextListener 会对 ServletCotnext 的初始化"),a("small",[t._v("（init）")]),t._v("和解构"),a("small",[t._v("（destroy）")]),t._v("做出响应。ServletContext 被初始化时，Servlet 容器会在所有已注册的 ServletContextListner 中调用 "),a("strong",[t._v("contextInitialized")]),t._v(" 方法。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("void contextDestroyed(ServletContextEvent event);\n")])])]),a("p",[t._v("当 ServletContext 要被解构和销毁时，Servlet 容器会在所有已注册的 ServletContextListener 中调用 "),a("strong",[t._v("contextDestroyed")]),t._v(" 方法。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("void contextDestroyed(ServletContextEvent event);\n")])])]),a("p",[t._v("contextInitialized 和 contextDestroyed 都会收到一个来自 Servlet 容器的 "),a("strong",[t._v("ServletContextEvent")]),t._v(" 。ServletContextEvent 是 java.util.EventObject 的子类，它定义了一个 "),a("strong",[t._v("getServletContext")]),t._v(" 方法，用以返回 ServletContext :")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("ServletContext getServletContext();\n")])])]),a("h4",{attrs:{id:"servletcontextattributelistener"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#servletcontextattributelistener"}},[t._v("#")]),t._v(" ServletContextAttributeListener")]),t._v(" "),a("p",[t._v("每当 ServletContext 中添加、删除或替换了某个属性时，ServletContextAttributeListener 的事件都会收到通知。以下就是在这个监听器接口中定义的三个方法：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("attributeAdded")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletContextAttributeEvent")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("attributeRemoved")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletContextAttributeEvent")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("attributeReplaced")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletContextAttributeEvent")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("每当 ServletContext 中添加了某个属性时，Servlet 容器就会调用 attributeAdded 方法；")]),t._v(" "),a("li",[t._v("每当 ServletContext 中移除了某个属性时，Servlet 容器就会调用 attributeRemoved 方法；")]),t._v(" "),a("li",[t._v("每当 ServletContext 被新的代替时，Servlet 容器就会调用 attributeReplaced 方法。")])]),t._v(" "),a("p",[t._v("所有的监听器方法都会收到一个 ServletContextAttributeEvent 实例，从这个参数中你可以获取属性名称"),a("small",[t._v("（getName）")]),t._v("和属性值"),a("small",[t._v("（getValue）")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"session-监听器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#session-监听器"}},[t._v("#")]),t._v(" Session 监听器")]),t._v(" "),a("p",[t._v("与 HttpSession 有关的监听器有 4 个，我们常见的 2 个是："),a("strong",[t._v("HttpSessionListener")]),t._v(" 和 "),a("strong",[t._v("HttpSessionAttributeListener")]),t._v(" 。")]),t._v(" "),a("h4",{attrs:{id:"httpsessionlistener"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#httpsessionlistener"}},[t._v("#")]),t._v(" HttpSessionListener")]),t._v(" "),a("p",[t._v("当有 HttpSession 被创建或销毁时，Servlet 容器就会调用所有已注册的 HttpSessionListener。HttpSessionListener 中定义的 2 个方法是：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sessionCreated")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpSessionEvent")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sessionDestroyed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpSessionEvent")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这 2 个方法都会收到一个 HttpSessionEvent 实例，我们可以调用这个参数的 "),a("strong",[t._v("getSession")]),t._v(" 方法来获得所创建或销毁的 HttpSession 对象。")]),t._v(" "),a("h4",{attrs:{id:"httpsessionattributelistener"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#httpsessionattributelistener"}},[t._v("#")]),t._v(" HttpSessionAttributeListener")]),t._v(" "),a("p",[t._v("HttpSessionAttributeListener 就像 ServletContextAttributeListener 一样，只不过当 HttpSession 中有添加、删除或替换属性的时候它才会调用。它定义的方法有：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("attributeAdded")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpSessionBindingEvent")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("attributeRemoved")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpSessionBindingEvent")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("attributeReplaced")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpSessionBindingEvent")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("当 HttpSession 中添加某个属性时，由 Servlet 容器调用 attributeAdded 方法；")]),t._v(" "),a("li",[t._v("当 HttpSession 中删除某个属性时，由 Servlet 容器调用 attributeRemoved 方法；")]),t._v(" "),a("li",[t._v("当 HttpSession 属性被新属性代替时，由 Servlet 容器调用 attributeReplaced 方法。")])]),t._v(" "),a("p",[t._v("所有的监听器方法都会收到一个 HttpSessionBindingEvent 实例，从这个参数中，你可以获得响应的 HttpSession 对象和属性名以及属性值。")]),t._v(" "),a("h3",{attrs:{id:"servletrequest-监听器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#servletrequest-监听器"}},[t._v("#")]),t._v(" ServletRequest 监听器")]),t._v(" "),a("p",[t._v("在 ServletRequest 级别上有 3 个监听器接口，我们常见的有 2 个："),a("strong",[t._v("ServletRequestListener")]),t._v(" 和 "),a("strong",[t._v("ServletRequestAttributeListener")]),t._v(" 。")]),t._v(" "),a("h4",{attrs:{id:"servletrequestlistener"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#servletrequestlistener"}},[t._v("#")]),t._v(" ServletRequestListener")]),t._v(" "),a("p",[t._v("ServletRequestListener 对 ServletRequest 的创建和销毁做出响应。在 Servlet 容器中时通过池"),a("small",[t._v("（pool）")]),t._v("来重用 ServletRequest 的，“创建” ServletRequest 花费的事件相当于从池中获取一个 ServletRequest 对象的事件，销毁它的时间则相当于将 ServletRequest 重新放回 pool 的时间开销。")]),t._v(" "),a("p",[t._v("ServletRequestListener 接口定义了 2 个方法：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestInitialized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletRequestEvent")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestDestroyed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletRequestEvent")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("创建"),a("small",[t._v("（本质上是从池中取出）")]),t._v("ServletRequest 时会调用 requestInitialized 方法，ServletRequest 被销毁"),a("small",[t._v("（本质上是放回池中）")]),t._v("时会调用 requestDestroyed 方法。这 2 个方法都会收到一个 ServletRequestEvent，通过调用 event 的 "),a("strong",[t._v("getServletRequest")]),t._v(" 方法，可以从中获取到相应的 ServletRequest 实例")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletRequest")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getServletRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("另外，ServletRequestEvent 接口还定义了返回 ServletContext 的 getServletContext 方法，方法签名如下：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletContext")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getServletContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"servletrequestattributelistener"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#servletrequestattributelistener"}},[t._v("#")]),t._v(" ServletRequestAttributeListener")]),t._v(" "),a("p",[t._v("当在 ServletRequest 中添加、删除或者替换某个属性时，会调用 ServletRequestAttributeListener 。ServletRequestAttributeListener 接口中定义了 3 个方法：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("attributeAdded")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletRequestAttributeEvent")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("attributeRemoved")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletRequestAttributeEvent")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("attributeReplaced")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletRequestAttributeEvent")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("所有方法都会收到一个 ServletRequestAttributeEvent 实例。通过参数 event 的 getName 和 getValue 方法你可以获得属性名和属性值。")])])}),[],!1,null,null,null);s.default=n.exports}}]);