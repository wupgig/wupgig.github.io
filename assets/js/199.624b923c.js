(window.webpackJsonp=window.webpackJsonp||[]).push([[199],{567:function(a,t,s){"use strict";s.r(t);var n=s(47),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"延迟加载和缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#延迟加载和缓存"}},[a._v("#")]),a._v(" 延迟加载和缓存")]),a._v(" "),s("h2",{attrs:{id:"延迟加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#延迟加载"}},[a._v("#")]),a._v(" 延迟加载")]),a._v(" "),s("p",[a._v("如果一个对象关联另一个对象，那么在查询 A 对象的时候，会去关联查询 B 对象。")]),a._v(" "),s("p",[a._v("何时查询（加载）B 对象分为三种时机：")]),a._v(" "),s("ul",[s("li",[a._v("立即加载")]),a._v(" "),s("li",[a._v("激进式延迟加载")]),a._v(" "),s("li",[a._v("延迟加载")])]),a._v(" "),s("h3",{attrs:{id:"立即加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#立即加载"}},[a._v("#")]),a._v(" 立即加载")]),a._v(" "),s("p",[a._v("MyBaits 默认是立即加载，即在查询 A 对象的时候，会立即查询其关联的 B 对象。如果，B 对象也有关联对象，例如 C 对象，那么还会立即查询 C 对象，... 因此类推，直到把所有有关联关系的数据全部查询出来。")]),a._v(" "),s("h3",{attrs:{id:"激进式延迟加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#激进式延迟加载"}},[a._v("#")]),a._v(" 激进式延迟加载")]),a._v(" "),s("p",[a._v("通过设置，可以启用延迟加载：")]),a._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("settings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("setting")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("lazyLoadingEnabled"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("/>")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("settings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),s("p",[a._v("启用延迟加载之后，Mybatis 又是默认的激进地延迟加载。")]),a._v(" "),s("p",[a._v("Mybatis 内部会进行某种规则判断，从而使得激进式的延迟加载，有时候等同于立即加载，有时候等同于普通的延迟加载。")]),a._v(" "),s("h3",{attrs:{id:"真-延迟加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#真-延迟加载"}},[a._v("#")]),a._v(" 真-延迟加载")]),a._v(" "),s("p",[a._v("可以再通过配置关闭掉激进地延迟加载，从而进入普通的延迟加载：")]),a._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("settings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("setting")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("lazyLoadingEnabled"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("/>")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("setting")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("aggressiveLazyLoading"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("/>")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("settings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),s("p",[a._v("普通的延迟加载只会在你真正用到 A 对象的 B 属性时，再去查询/加载 B 对象。")]),a._v(" "),s("h2",{attrs:{id:"mybatis-缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-缓存"}},[a._v("#")]),a._v(" Mybatis 缓存")]),a._v(" "),s("h3",{attrs:{id:"mybatis-一级缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-一级缓存"}},[a._v("#")]),a._v(" Mybatis 一级缓存")]),a._v(" "),s("h4",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[a._v("#")]),a._v(" 概述")]),a._v(" "),s("p",[a._v("MyBatis 提供了查询缓存来缓存数据，从而达到提高查询新能的要求。MyBatis 的缓存分为一级缓存和二级缓存。")]),a._v(" "),s("p",[a._v("MyBatis 的一级缓存是 SqlSession 级别的缓存（"),s("small",[a._v("在操作数据库时需要构造 SqlSession 对象")]),a._v("），每个 SqlSession 对象中都有一个 HashMap 对象用于缓存数据，不同的 SqlSession 之间缓存的数据互不影响。")]),a._v(" "),s("blockquote",[s("p",[a._v("提前说明一下，当 mybatis 与 spring 整合后，"),s("strong",[a._v("如果没有事务，一级缓存是失效的！")])]),a._v(" "),s("p",[a._v("原因就是两者结合后，sqlsession 如果发现当前没有事务，那么每执行一个 mapper 方法之后，sqlsession 就被关闭了"),s("small",[a._v("（ "),s("em",[s("code",[a._v("session.close()")])]),a._v(" ）")]),a._v("。")]),a._v(" "),s("p",[a._v("所以记得给 Service 的方法的脑袋上面加 "),s("em",[s("strong",[a._v("@Transactional")])]),a._v(" 。")])]),a._v(" "),s("p",[a._v("在参数和 SQL 完全相同的情况下，使用同一个 SqlSession 对象调用同一个 Mapper 方法，往往只执行一次 SQL 语句。因为如果没有声明需要刷新缓存并且缓存没有超时，SqlSession 都只会取出当前缓存的数据"),s("small",[a._v("，而不是执行 SQL 语句")]),a._v("。")]),a._v(" "),s("p",[a._v("如果 SqlSession 执行了 DML 操作，并提交数据库，Mybatis 会清空 SqlSession 中的一级缓存，这样做的目的是保证缓存中存储的数据是最新的，避免出现脏读现象。")]),a._v(" "),s("h4",{attrs:{id:"刷新缓存的时机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#刷新缓存的时机"}},[a._v("#")]),a._v(" 刷新缓存的时机")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("如果 SqlSession 调用了 "),s("em",[s("strong",[a._v("close")])]),a._v(" 方法，则一级缓存不可用/销毁。")])]),a._v(" "),s("li",[s("p",[a._v("如果 SqlSession 调用了 "),s("em",[s("strong",[a._v("clearCache")])]),a._v(" 方法，则一级缓存中缓存的数据被清空。")])]),a._v(" "),s("li",[s("p",[a._v("如果 SqlSession 执行了一个 DML 操作，则一级缓存中缓存的数据被清空。")])])]),a._v(" "),s("h3",{attrs:{id:"mybatis-二级缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-二级缓存"}},[a._v("#")]),a._v(" Mybatis 二级缓存")]),a._v(" "),s("p",[a._v("二级缓存是 Mapper 级别"),s("small",[a._v("（也叫 namespace 级别）")]),a._v("的缓存，同样使用 HashMap 进行数据存储。")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("二级缓存是以 namespace 为单位的，不同的 namespace 下的操作相互隔离。")])]),a._v(" "),s("li",[s("p",[a._v("增删改操作会清空 namespace 下的全部缓存。")])])]),a._v(" "),s("p",[a._v("如果开启了二级缓存，那么在关闭 sqlsession 后，会把该 sqlsession 一级缓存中的数据添加到 namespace 的二级缓存中。")]),a._v(" "),s("p",[a._v("二级缓存比一级缓存作用域更大，多个 sqlsession 可以共用二级缓存，即，二级缓存是跨 sqlsession 的。")]),a._v(" "),s("blockquote",[s("p",[s("small",[a._v("例如，关闭一个 sqlsession 之后，打开一个新的 sqlsession，执行同一条 sql 语句，会利用上一次的缓存数据。")])])]),a._v(" "),s("p",[a._v("mybatis "),s("strong",[a._v("默认没有开启二级缓存")]),a._v(" ，需要在配置中进行配置才能使用。打开二级缓存分为三步：")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("打开二级缓存总开关")])]),a._v(" "),s("li",[s("p",[a._v("打开需要使用二级缓存的 mapper 的开关。")])]),a._v(" "),s("li",[s("p",[a._v("POJO 序列化")])])]),a._v(" "),s("h4",{attrs:{id:"打开二级缓存总开关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打开二级缓存总开关"}},[a._v("#")]),a._v(" 打开二级缓存总开关")]),a._v(" "),s("p",[a._v("打开总开关，只需要在 mybatis 总配置文件中加入一行设置")]),a._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("settings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("\x3c!--开启二级缓存--\x3e")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("setting")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("cacheEnabled"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("/>")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("settings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),s("h4",{attrs:{id:"打开需要使用二级缓存的-mapper-的开关。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打开需要使用二级缓存的-mapper-的开关。"}},[a._v("#")]),a._v(" 打开需要使用二级缓存的 mapper 的开关。")]),a._v(" "),s("p",[a._v("在需要开启二级缓存的 "),s("em",[s("strong",[a._v("mapper.xml")])]),a._v(" 中加入 caceh 标签")]),a._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("cache")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("/>")])]),a._v("\n")])])]),s("h4",{attrs:{id:"pojo-序列化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pojo-序列化"}},[a._v("#")]),a._v(" POJO 序列化")]),a._v(" "),s("p",[a._v("让需要使用二级缓存的 POJO 类实现 Serializable 接口，如")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Department")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implements")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Serializable")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("通过之前三步操作就可以使用二级缓存了。")])])}),[],!1,null,null,null);t.default=e.exports}}]);