(window.webpackJsonp=window.webpackJsonp||[]).push([[243],{611:function(t,s,a){"use strict";a.r(s);var n=a(47),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"spring-mvc-对-restful-的支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-mvc-对-restful-的支持"}},[t._v("#")]),t._v(" Spring MVC 对 RESTful 的支持")]),t._v(" "),a("h2",{attrs:{id:"put、patch-的参数问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#put、patch-的参数问题"}},[t._v("#")]),t._v(" PUT、PATCH 的参数问题")]),t._v(" "),a("p",[t._v("RESTful API 要求服务端能响应：get / post / put / delete 请求，以对应增删改查四大功能。对此 Spring MVC 都能支持，只需要在请求处理方法头上加上：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RequestMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("或者使用：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PostMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PutMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@DeleteMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("就能表示该方法仅针对于特定请求方式作出响应。")]),t._v(" "),a("p",[a("strong",[t._v("默认 Spring MVC 可以接受 PUT 请求和 PATCH 请求，但是，不接受 PUT 请求和 PATCH 请求发送来参数！！！")])]),t._v(" "),a("p",[t._v("Spring MVC 通过　"),a("em",[a("strong",[t._v("@RequestParam")])]),t._v(" 注解接收的请求只有两类：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("接收 GET 请求提交的参数。")])]),t._v(" "),a("li",[a("p",[t._v("接收 "),a("code",[t._v("application/x-www-form-urlencoded")]),t._v(" 方式的 POST 请求提交的参数。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("不支持")]),t._v(" PUT、PATCH"),a("small",[t._v("（也包括 DELETE）")]),t._v("请求的参数的获取。")])])]),t._v(" "),a("p",[t._v("当然，究其原因这个锅不该 Spring MVC 背：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Servlet 的 "),a("code",[t._v('request.getParameter("");')]),t._v(" 本身就只支持 GET 和 POST 方法传参。")])]),t._v(" "),a("li",[a("p",[t._v("Servlet API 中并没有 "),a("code",[t._v("doPatch()")]),t._v(" 方法，更谈不上获取请求参数了。")])])]),t._v(" "),a("h2",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),a("p",[t._v("解决 PUT、PATCH 的参数传递的方案有两种：")]),t._v(" "),a("h3",{attrs:{id:"方案一-使用特定-filter-处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方案一-使用特定-filter-处理"}},[t._v("#")]),t._v(" 方案一：使用特定 Filter 处理")]),t._v(" "),a("p",[t._v("Spring MVC 从 "),a("em",[a("code",[t._v("3.1")])]),t._v(" 开始提供了一个 Filter"),a("small",[t._v("（过滤器）")]),t._v("来解决这个传参问题。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("从 "),a("em",[a("code",[t._v("3.1")])]),t._v(" 开始，提供了一个名为 "),a("strong",[t._v("HttpPutFormContentFilter")]),t._v("；")])]),t._v(" "),a("li",[a("p",[t._v("从 "),a("em",[a("code",[t._v("5.1")])]),t._v(" 开始，又提供了一个名为 "),a("strong",[t._v("FormContentFilter")]),t._v(" 的新的 Filter 来替代 "),a("em",[t._v("HttpPutFormContentFilter")]),t._v(" 。which is the same but also handles DELETE` 。")])])]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 默认 Spring MVC 无法接受 PUT 请求参数 --\x3e")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("httpPutFormContentFilter"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      org.springframework.web.filter.HttpPutFormContentFilter\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-mapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("httpPutFormContentFilter"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("/*"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("   \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 注意匹配规则，这里是 /* ，表示拦截所有请求 --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-mapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("这两个过滤器会拦截所有的 PUT 和 PATCH 请求，将它们的底层处理方式转变为与 POST 请求相同的处理方式。这样你才可以在 PUT 和 PATCH 请求的处理方法中使用 @RequestParm 注解。"),a("small",[t._v("（否则，该注解使用无效）。")])]),t._v(" "),a("h3",{attrs:{id:"方法二-使用-application-json-曲线救国"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法二-使用-application-json-曲线救国"}},[t._v("#")]),t._v(" 方法二：使用 application/json 曲线救国")]),t._v(" "),a("p",[t._v("PUT 和 PATCH 的请求参数默认是以 "),a("em",[a("code",[t._v("x-www-form-urlencoded")])]),t._v(" 的 "),a("em",[a("code",[t._v("contentType")])]),t._v(" 来发送信息，即请求参数是放在 request 的 body 中，以 "),a("code",[t._v("aaa=xxx&bbb=yyy&ccc=zzz")]),t._v("。")]),t._v(" "),a("p",[t._v("在默认情况下，"),a("strong",[t._v("@ReqeustParam")]),t._v(" 是不会去获取它们在 body 中的请求参数的"),a("small",[t._v("（除非采用方案一，挂羊头卖狗肉）")]),t._v("。")]),t._v(" "),a("p",[t._v("方案二的本质就是索性 "),a("strong",[t._v("不使用 "),a("code",[t._v("@RequestParam")]),t._v(" 获取参数，而使用 "),a("code",[t._v("@RequestBody")])]),t._v(" 。")]),t._v(" "),a("p",[t._v("利用 "),a("em",[a("strong",[a("code",[t._v("application/json")])])]),t._v(" 方式传递请求参数，将参数以 JSON 格式字符串的形式放在 request 的 "),a("em",[a("strong",[t._v("body")])]),t._v(" 中，在 Controller 中再配合 "),a("em",[a("code",[t._v("@RequestBody")])]),t._v(" 进行参数绑定，从而获取参数。"),a("strong",[t._v("绕开")]),t._v(" "),a("em",[a("strong",[t._v("@RequestParam")])]),t._v(" / "),a("em",[a("strong",[t._v("request.getParam()")])]),t._v(" 的限制。")]),t._v(" "),a("h2",{attrs:{id:"批量删除时传入多个-id-实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#批量删除时传入多个-id-实现"}},[t._v("#")]),t._v(" 批量删除时传入多个 id 实现")]),t._v(" "),a("h3",{attrs:{id:"方案一-pathvariable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方案一-pathvariable"}},[t._v("#")]),t._v(" 方案一：@PathVariable")]),t._v(" "),a("p",[t._v("接收用数组，调用 api 时，url 后面可跟多个 id，用逗号隔开，如：localhost/user/1234,1235,1236")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@DeleteMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/{id}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JsonData")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PathVariable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" userIds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    userService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userIds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JsonData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ok")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"方案二-利用-formcontentfilter-强用-requestparam"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方案二-利用-formcontentfilter-强用-requestparam"}},[t._v("#")]),t._v(" 方案二：利用 FormContentFilter 强用 @RequestParam")]),t._v(" "),a("p",[t._v("在使用 "),a("strong",[t._v("FormContentFilter")]),t._v(" 后，DELETE 请求的底层处理方式会被 Spring MVC 偷换成 POST 方式，这样，实际上就完全可以像 POST 请求那样传递多 id 。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@DeleteMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/delete"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" ids"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[{}]"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ids"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("客户端发出的请求参数类似是："),a("code",[t._v("?ids=1&ids=2&ids=3")]),t._v(" 。")]),t._v(" "),a("h2",{attrs:{id:"responseentity-t-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#responseentity-t-类型"}},[t._v("#")]),t._v(" ResponseEntity<T> 类型")]),t._v(" "),a("p",[t._v("在有的 Rest-ful 风格的项目中，是通过设置响应状态码来告知请求方请求是否成功。这种情况下，自然就不能始终使用默认的 200 作为响应状态码，而是要手动设置一个符合逻辑的状态码。")]),t._v(" "),a("p",[a("strong",[t._v("ResponseEntity")]),t._v(" 返回值类型能实现这样的功能。Spring MVC 中返回的 "),a("strong",[t._v("ResponseEntity")]),t._v(" 对象，一方面包含了 HTTP 响应信息，另一方面还包含返回给请求方的数据。")]),t._v(" "),a("p",[t._v("Spring MVC 发现你的方法返回的是 ResponseEntity 类型的对象时，它会做如下 2 件事情：")]),t._v(" "),a("ol",[a("li",[t._v("将 ResponseEntity 对象中所设置的『"),a("strong",[t._v("响应状态码")]),t._v("』信息作为本次 HTTP 请求地响应状态码。")]),t._v(" "),a("li",[t._v("将 ResponseEntity 对象中所设置的『"),a("strong",[t._v("返回数据")]),t._v("』转换为 JSON 格式字符串后，携带在 HTTP 响应地 Body 中返回。")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/test1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResponseEntity")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Department")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Department")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResponseEntity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ok")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// return ResponseEntity.status(HttpStatus.OK).body(dept);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/test2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResponseEntity")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResponseEntity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("badRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(...)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("再强调一遍，标注了 "),a("strong",[t._v("@ResponseEntity")]),t._v(" 注解，就不需要再标注 "),a("strong",[t._v("@ResponseBody")]),t._v(" 注解 。")])])}),[],!1,null,null,null);s.default=e.exports}}]);