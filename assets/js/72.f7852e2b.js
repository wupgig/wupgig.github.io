(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{439:function(t,n,s){"use strict";s.r(n);var a=s(47),v=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"比较文件差异"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比较文件差异"}},[t._v("#")]),t._v(" 比较文件差异")]),t._v(" "),s("h2",{attrs:{id:"git-diff"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-diff"}},[t._v("#")]),t._v(" git diff")]),t._v(" "),s("p",[t._v("对比『"),s("strong",[t._v("工作空间中的文件")]),t._v("』与当前 Git 本地仓库中的最新版、最近版，也就是 "),s("strong",[t._v("HEAD")]),t._v(" 版本之间的差异，使用命令 "),s("strong",[t._v("git diff <文件名>")]),t._v(" 。")]),t._v(" "),s("p",[t._v("不过，"),s("strong",[t._v("git diff")]),t._v("，只在终端里显示并不够直观，像是这样：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --git a/22 b/22\nindex e69de29"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("d83fdff "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v("\n--- a/22\n+++ b/22\n@@ -0,0 +1 @@\n+ddddddddddddddddddddd\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" No newline at end of "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --git a/4.txt b/4.txt\nindex e69de29"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("abaef31 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v("\n--- a/4.txt\n+++ b/4.txt\n@@ -0,0 +1 @@\n:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".skipping"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --git a/22 b/22\nindex e69de29"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("d83fdff "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v("\n--- a/22\n+++ b/22\n@@ -0,0 +1 @@\n+ddddddddddddddddddddd\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" No newline at end of "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --git a/4.txt b/4.txt\nindex e69de29"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("abaef31 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v("\n--- a/4.txt\n+++ b/4.txt\n@@ -0,0 +1 @@\n+ssdddddddddddddddddd\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" No newline at end of "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("强烈建议使用类似 Beyond Compare 这样的独立的第三方比较工具来进行比较。")]),t._v(" "),s("p",[t._v("另外，有些 Git 客户端也自带了类似的内容比较界面。")])]),t._v(" "),s("h2",{attrs:{id:"git-difftool"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-difftool"}},[t._v("#")]),t._v(" git difftool")]),t._v(" "),s("p",[t._v("对于以上信息，很不容易阅读/分析。这时候借助其他的可视化工具就派上用场了，例如以 vscode 作为 git 的 difftool。")]),t._v(" "),s("p",[t._v("打开 git 的配置文件 "),s("strong",[t._v(".gitconfig")]),t._v(" 文件，添加如下内容：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('[diff]\n    tool = default-difftool\n[difftool "default-difftool"]\n    cmd = code --wait --diff $LOCAL $REMOTE\n')])])]),s("p",[t._v("自此，以后可使用 "),s("strong",[t._v("git difftool 文件名")]),t._v(" 命令替代 "),s("strong",[t._v("git diff 文件名")]),t._v(" 命令。")]),t._v(" "),s("p",[t._v("如果想比较文件的某两个版本间的差异，使用命令")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("git difftool <Commit节点1> <Commit节点2> <文件名>")])])]),t._v(" "),s("li",[s("p",[t._v("例如："),s("strong",[t._v("git difftool HEAD HEAD^1 1.txt")])])])]),t._v(" "),s("p",[t._v("如果执行 "),s("strong",[t._v("git difftool")]),t._v(" 之后没有任何结果，就表示文件没有再被修改。")]),t._v(" "),s("blockquote",[s("p",[t._v("如果要对比全部的文件，可以将文件换成 "),s("strong",[t._v(".")]),t._v("，也就是 "),s("strong",[t._v("git difftool HEAD HEAD^1 .")]),t._v(" 或直接省略文件名也可以。")])]),t._v(" "),s("p",[t._v("如果执行 "),s("strong",[t._v("git difftool")]),t._v(" 指令时没有带版本选项，那么就是比较本地文件与缓存"),s("small",[t._v("（或仓库最新版本）")]),t._v("之间的差异。这种情况下：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Git 首先尝试比较：暂存区内容 VS 本地内容。")])]),t._v(" "),s("li",[s("p",[t._v("如果缓存区中没有该文件，Git 则尝试比较：本地仓库中的 HEAD 版本 VS 本地内容。"),s("small",[t._v("HEAD 节点永远代表最新的 Commit 。")])])])]),t._v(" "),s("p",[t._v("每一个 Commit 节点都会有一个父节点，HEAD 节点的父节点可以写成 "),s("strong",[t._v("HEAD~1")]),t._v("，也可写成 "),s("strong",[t._v("HEAD^1")]),t._v("，可进一步简写成 "),s("strong",[t._v("HEAD^")]),t._v(" 。")]),t._v(" "),s("p",[t._v("当前节点的爷爷节点 表示为："),s("strong",[t._v("HEAD~2")]),t._v("。"),s("small",[t._v("注意不能写成 "),s("strong",[t._v("HEAD^2")]),t._v("，它表示另一种含义")]),t._v("。")])])}),[],!1,null,null,null);n.default=v.exports}}]);