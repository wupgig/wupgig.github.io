(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{452:function(t,e,s){"use strict";s.r(e);var a=s(47),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"sourcetree-破解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sourcetree-破解"}},[t._v("#")]),t._v(" SourceTree 破解")]),t._v(" "),s("p",[t._v("SourceTree 是老牌的 Git GUI 管理工具了，也号称是最好用的 Git GUI 工具：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("#")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("优点")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("免费")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("自带中文语言包"),s("small",[t._v("（国内初学者大多就是奔着这个去的）")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("功能强大：无论你是新手还是重度用户，SourceTree 都会让你觉得很顺手。对于非常重度用户，SourceTree 还支持自定义脚本的执行。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("同时支持 Windows 和 Mac 操作系统"),s("small",[t._v("（可惜不支持 Linux 系统）")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("5")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("同时支持 Git 和 Mercurial 两种 VCS")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("6")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("内置 GitHub, BitBucket 和 Stash 的支持：直接绑定帐号即可操作远程 repo")])])])]),t._v(" "),s("h2",{attrs:{id:"下载安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下载安装"}},[t._v("#")]),t._v(" 下载安装")]),t._v(" "),s("p",[t._v("官网下载网址："),s("a",{attrs:{href:"https://www.sourcetreeapp.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.sourcetreeapp.com/"),s("OutboundLink")],1),t._v("，当前"),s("small",[t._v("（20210619）")]),t._v("最新版本是 "),s("code",[t._v("3.4.5")]),t._v(" 。")]),t._v(" "),s("p",[t._v("新版本的安装省掉了麻烦的 "),s("code",[t._v("注册账户")]),t._v(" 这一步。现在 SourceTree 匿名即可使用。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Registration")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-00-1.png",alt:"sourcetree-00-1"}})]),t._v(" "),s("p",[t._v("上页界面中点击 "),s("code",[t._v("跳过")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("安装工具")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-00-2.png",alt:"sourcetree-00-2"}})]),t._v(" "),s("p",[t._v("我们用不到 Mercurial 服务。")])]),t._v(" "),s("li",[s("p",[t._v("Preferences")]),t._v(" "),s("p",[t._v("如果你在 git 中通过 "),s("code",[t._v("git config --global user.name")]),t._v(" 和 "),s("code",[t._v("git config --global user.email")]),t._v(" 命令配置过用户名和邮箱，那么在下面的安装界面中，SourceTree 会很只能地识别到它们。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-00-3.png",alt:"sourcetree-00-3"}})]),t._v(" "),s("p",[t._v("另外，我们暂时不配置 SSH 密钥，后面有需要的时候再配置。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-00-4.png",alt:"sourcetree-00-4"}})])])]),t._v(" "),s("p",[t._v("安装完成 SourceTree，界面如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-02.png",alt:"sourcetree-02"}})]),t._v(" "),s("p",[t._v("SourceTree 本质其实就是主要是把 Git 命令进行了可视化，降低 Git 的使用门槛。接下来我们就正式利用 SourceTree 来管理我们的 Git 项目。")]),t._v(" "),s("h2",{attrs:{id:"从远程服务器克隆项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从远程服务器克隆项目"}},[t._v("#")]),t._v(" 从远程服务器克隆项目")]),t._v(" "),s("p",[t._v("相信大家对利用 Git 命令从远程服务器上克隆项目足以熟悉，即 Git Clone 仓库的 URL，那么利用可视化工具如何进行操作呢？如下图所示，点击 Clone（克隆），输入远程仓库地址与本地仓库地址，点击克隆按钮即可。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-03.png",alt:"sourcetree-x"}})]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("从远程仓库获取项目的时候，会要求你输入用户名和密码，输入你自己的用户名和密码即可。")])]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("克隆完成项目后，如下图所示（远程仓库是空的项目） ：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-04.png",alt:"sourcetree-x"}})]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("接下来我们在本地仓库中新建一个 "),s("code",[t._v("readme.md")]),t._v(" 的文件，并输入相关内容，如下图所示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-05.png",alt:"sourcetree-x"}})]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("新建完成之后，我们可以观察 SourceTree 界面的变化，如下图所示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-06.png",alt:"sourcetree-x"}})]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("然后我们将改文件添加到暂存区，并输入提交信息，进行提交。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-07.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("这一过程本质上是通过 "),s("code",[t._v("git add .")]),t._v(" 的命令将工作区的文件添加到暂存区，然后通过 "),s("code",[t._v("git commit -m")]),t._v(" 命令提交 readme 文件，如下图所示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-08.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("此时我们点击推送按钮，并勾选推送。这步操作本质上相当于 "),s("code",[t._v("git push")]),t._v(" 的命令，将本地的仓库信息推送到远程仓库。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-09.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("推送完成后，我们可以查看 GitHub 仓库，观察到文件已经提交。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-10.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[s("strong",[t._v("注意")]),t._v("：推送到远程仓库，可能也会让你输入用户名和密码，这里的用户名密码是之你的 Github、Gitee 这些网站的用户名密码。但是，这些都只会输入一次，之后就会被 SourceTree 记住。但是，"),s("strong",[t._v("务必保证要输对")]),t._v("！"),s("small",[t._v("实在没记住的，先到 Github、Gitee 上退出后再登录，先试出正确的用户名密码。")])]),t._v(" "),s("p",[t._v("提交完成之后，我们对 "),s("code",[t._v("readme.md")]),t._v(" 文件进行修改，在其中加入一些内容，如下图所示。其中操作的步骤与 Git 命令的逻辑相同，不同的是命令与界面的区别。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-11.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("在提交之后，执行提交按钮，修改的文件被提交到远程仓库，如下图所示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-12.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("然后我们选择日志/历史，可以查看到提交的信息与修改的相关日期、描述、作者、版本等信息。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-13.png",alt:"sourcetree-x"}})]),t._v(" "),s("h2",{attrs:{id:"sourcetree-分支相关知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sourcetree-分支相关知识"}},[t._v("#")]),t._v(" SourceTree 分支相关知识")]),t._v(" "),s("h3",{attrs:{id:"创建分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建分支"}},[t._v("#")]),t._v(" 创建分支")]),t._v(" "),s("p",[t._v("创建分支只需要简单的几个步骤，点击分支—输入新分支的名称—创建分支即可，如下图所示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-14.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("创建完成分支后，我们将分支推送到远程仓库中，同样只需要简单操作即可，如下图所示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-15.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("推送完成后，我们进到 GitHub 仓库中查看 Branch 下已经多了 SourceTreeDev 分支。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-16.png",alt:"sourcetree-x"}})]),t._v(" "),s("h3",{attrs:{id:"删除分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[t._v("#")]),t._v(" 删除分支")]),t._v(" "),s("p",[t._v("在介绍删除分支之前，我们再创建一个 Dev 分支，方法同上。")]),t._v(" "),s("p",[t._v("我们直接从 master 新建一个 temp 分支出来，这里不再详细介绍如何创建 temp 分支。")]),t._v(" "),s("p",[t._v("删除分支时，要保证 head 不在要删除的分支上，比如我们现在试着删除 temp 分支，选择当前分支 temp 然后执行删除分支。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-17.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("此时我们执行删除分支时，会报错，如下图所示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-18.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("然后我们将当前的 head 指向切换到其它分支 （master）执行删除分支，temp 分支删除成功。")]),t._v(" "),s("h3",{attrs:{id:"合并分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并分支"}},[t._v("#")]),t._v(" 合并分支")]),t._v(" "),s("p",[t._v("在介绍合并分支前，我们在 SourceTree 分支先进行一些操作：首先我们切换到 SourceTree 分支下，然后我们进行前面讲解的修改分支操作，在 "),s("code",[t._v("readme.md")]),t._v(" 文件中添加一句“玩转分支”的内容。添加完成后，SourceTree 会提示有未提交的更改，相信大家对这个操作已经十分清楚。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-19.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("然后我们不做任何操作，直接切换到 master 分支，切换过程中 SourceTree 会警告，询问你是否确定切换分支。并且，可以选择清除修改。如果我们不清除修改，那么切换后它就会提示你有新的未提交的更改。这个操作是想告诉大家，如果我们还未提交修改的文件就切换到其他分支，这种修改也会带到其他分支。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-20.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("显然上述效果并不是我们想要的，所以我们在切换到 master 分支之前，并提交修改的文件。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-21.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("OK，准备工作做完之后，从上图可以清楚的看到，SourceTree 分支已经超前一个版本。此时我们需要将 SourceTree 分支上做的修改合并到 master 分支上，这也就是我们要介绍的“合并分支”。")]),t._v(" "),s("p",[t._v("在讲解合并分支前，我们需要了解一个注意点，我们现在是要将 SourceTree 分支的修改合并到 master 分支上，那么我们该在那个分支上操作呢？当然是 master 分支。")]),t._v(" "),s("p",[t._v("切换到主分支 master 之后，我们点击合并分支，选择要合并分支的节点（注意不要选错），然后提交。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-22.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("合并完成分支之后如下图所示，我们将 master 分支推送到远程仓库。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-23.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("推送到远程仓库之后，我们可以看到 readme.md 文件已经修改。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-24.png",alt:"sourcetree-x"}})]),t._v(" "),s("h3",{attrs:{id:"发布新版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#发布新版本"}},[t._v("#")]),t._v(" 发布新版本")]),t._v(" "),s("p",[t._v("最后我再介绍一下发布新版本的那些事，在上面我们已经将 SourceTree 分支修改的内容合并到主分支 master 了。我们选择标签，输入标签即版本号，然后勾选提交，并添加标签。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-25.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("最后我们将 master 分支上的标签推送到远程仓库，如下图所示。这个版本表示已经发布，我们可以将该版本下载到本地。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-26.png",alt:"sourcetree-x"}})]),t._v(" "),s("h2",{attrs:{id:"关于版本回退那些事"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于版本回退那些事"}},[t._v("#")]),t._v(" 关于版本回退那些事")]),t._v(" "),s("p",[t._v("在讲解版本回退之前，我们需要介绍多人协作开发，因为在开发中我们一般都是多人同时开发，经常在提交代码的时候会发生一些冲突，那么遇到冲突该如何解决呢？")]),t._v(" "),s("h3",{attrs:{id:"多人协作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多人协作"}},[t._v("#")]),t._v(" 多人协作")]),t._v(" "),s("p",[t._v("由于是在一台电脑上进行操作，我们假设 A 与 B 表示两个同事进行协同开发。")]),t._v(" "),s("p",[t._v("之前的工作文件夹 ChatSorceTree 表示 A，然后我们从远程仓库克隆一份代码到 ChatSorceTreeB 表示 B 的工作目录。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-27.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("克隆完成之后，我们可以看到 B 与 A 的工作代码目录相同，因为远程仓库默认 master 分支。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-28.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("那么 B 要工作的话，就要在 sourceTreeDev 分支下进行工作，然后我们检出 sourceTreeDev 分支。检出后如下图所示，也许你会问 sourceTreeDev 分支的状态为什么没有是“玩转分支”的状态呢？那是因为 A 并没有把添加「玩转分支」的内容提交到远程仓库。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-29.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-30.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("推送完成之后，我们在 A 工作区 sourceTreeDev 分支下新建一个 "),s("code",[t._v("a.txt")]),t._v(" 并提交到远程仓库。然后我们来到 B 的工作区，选择拉取，拉取时选择 sourceTreeDev 分支，拉取完成，B 工作区的状态已经发生变化，如下图所示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-31.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("OK，B 已经将 sourceTreeDev 分支最新内容从远程仓库拉取到本地，然后 B 对工作区中的 a.txt 文件进行修改，并添加内容新增了聊天功能。然后提交到远程仓库。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-32.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("然后 A 也做了同样的事情，A 新增了聊天功能，如下图所示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-33.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("A 先并不做提交，进行 pull 拉取操作，点击拉取会看到报错，报错信息的意思是您对以下文件的本地更改将被覆盖——a.txt。请在合并之前提交更改或存储更改。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-34.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("然后根据报错信息，我们对 A 工作区的文件进行提交，点击提交后又发生了报错，错误的意思是远程仓库已近添加了相同的键的项。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-35.png",alt:"sourcetree-x"}})]),t._v(" "),s("h3",{attrs:{id:"解决冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决冲突"}},[t._v("#")]),t._v(" 解决冲突")]),t._v(" "),s("p",[t._v("当多个人同时修改了同一个文件时，后提交的需要先从服务器 pull 代码到问题，手动解决完冲突之后再 push 到远程服务器。")]),t._v(" "),s("p",[t._v("上述冲突发生的原因，主要是 A 与 B 都对同一文件 a.txt 的同一位置进行了修改。产生冲突之后，需要我们解决冲突之后才能提交。")]),t._v(" "),s("p",[t._v("关于如何解决冲突文件，直接选择冲突文件，选择解决冲突，对比文件差异，将冲突的内容干掉即可，然后再做提交即可。这里不做详细介绍，相信大家可以很容易解决。")]),t._v(" "),s("h3",{attrs:{id:"版本回退"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#版本回退"}},[t._v("#")]),t._v(" 版本回退")]),t._v(" "),s("p",[t._v("最后我们介绍一下版本回退的一些事情。关于版本回退 Git 的命令是 "),s("code",[t._v("git reset")]),t._v(" 。")]),t._v(" "),s("p",[t._v("版本回退（建议加上 "),s("code",[t._v("--hard")]),t._v("，Git 支持无限次后悔）")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("回退到上一个版本："),s("code",[t._v("git reset --hard HEAD^")])])]),t._v(" "),s("li",[s("p",[t._v("回退到上上一个版本："),s("code",[t._v("git reset --hard HEAD^^")])])]),t._v(" "),s("li",[s("p",[t._v("回退到上 N 个版本："),s("code",[t._v("git reset --hard HEAD~N")]),t._v("（N 是一个整数）")])]),t._v(" "),s("li",[s("p",[t._v("回退到任意一个版本：git reset --hard 版本号")])])]),t._v(" "),s("p",[t._v("首先我们进入 ChatSourceTree 工作区，输入 git reflog 命令，我们可以清楚地看到版本号下对应做了什么事。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-36.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("比如我们需要回退到 HEAD@{13}，我们输入 git reset --hard 6b34060 (版本号) 即可回退到对应的位置。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-37.png",alt:"sourcetree-x"}})]),t._v(" "),s("p",[t._v("然后我们进入 SourceTree 界面可以，看到已近回退到了 A 新增了聊天功能的位置，如下图所示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-38.png",alt:"sourcetree-x"}})]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("记住密码功能... 删除 accounts.json 同级目录下的两个文件：...")]),t._v(" "),s("h2",{attrs:{id:"老版本安装过程中的用户注册"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#老版本安装过程中的用户注册"}},[t._v("#")]),t._v(" 老版本安装过程中的用户注册")]),t._v(" "),s("p",[t._v("安装 SourceTree 的过程中，它会要求你输入 google 账号，或 Atlassian 账号进行登录。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/sourcetree-01.png",alt:"sourcetree-01"}})]),t._v(" "),s("p",[t._v("其实，只要注册 Atlassian 账户就可以登录使用 Source Tree，相当于 SourceTree 本质上是免费的。但是 Atlassian 账户的注册过程调用了 Google 的人机认证功能，而 Google 又被墙掉了，所以这个注册过程你永远不会成功...")]),t._v(" "),s("p",[t._v("其实这个登录的过程就是为了在指定目录下生成一个含有指定内容的文件，我们接下来将手动实现这个效果，从而“绕过”登录/注册界面。")]),t._v(" "),s("p",[t._v("下载好之后会有这么一个界面要求你注册或登录。（不管它）将下面的一串字符串放进我的电脑的地址栏，打开 sourcetree 的文件夹")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("%LocalAppData%\\Atlassian\\SourceTree\\\n")])])]),s("p",[t._v("其实这会打开类似以下的一个目录：")]),t._v(" "),s("blockquote",[s("p",[t._v("C:\\Users\\Administrator\\AppData\\Local\\Atlassian\\SourceTree")])]),t._v(" "),s("p",[t._v("在该目录下新建一个 "),s("code",[t._v("accounts.json")]),t._v(" 文件。其实安装过程中的输入账号的目的就是为了生成这个文件。将以下内容复制进该文件：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SourceTree.Api.Host.Identity.Model.IdentityAccount, SourceTree.Api.Host.Identity"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Authenticate"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HostInstance"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SourceTree.Host.Atlassianaccount.AtlassianAccountInstance, SourceTree.Host.AtlassianAccount"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Host"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SourceTree.Host.Atlassianaccount.AtlassianAccountHost, SourceTree.Host.AtlassianAccount"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"atlassian account"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BaseUrl"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://id.atlassian.com/"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Credentials"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SourceTree.Model.BasicAuthCredentials, SourceTree.Api.Account"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Username"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"看这里，看这里，看这里，..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Email"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"看这里，看这里，看这里，..."')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"IsDefault"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("其中倒数 5、6 行可填上用户名和邮箱，相当于 Git 中的配置：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('$ git config --global user.name xxx\n$ git config --global user.email "xxx@xxx.xxx\n')])])]),s("p",[t._v("保存此文件后，重新启动 Source Tree，则可跳过登录页面。")])])}),[],!1,null,null,null);e.default=r.exports}}]);